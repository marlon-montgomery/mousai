{"version":3,"mappings":"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","names":["C","nextId","CDK_ACCORDION","InjectionToken","CdkAccordion","constructor","this","_stateChanges","Subject","_openCloseAllActions","id","_multi","multi","coerceBooleanProperty","openAll","_openCloseAll","closeAll","ngOnChanges","changes","next","ngOnDestroy","complete","expanded","ɵfac","t","ɵdir","ɵngcc0","type","selectors","inputs","exportAs","features","provide","useExisting","nextId$1","CdkAccordionItem","accordion","_changeDetectorRef","_expansionDispatcher","_openCloseAllSubscription","Subscription","closed","EventEmitter","opened","destroyed","expandedChange","_expanded","_disabled","_removeUniqueSelectionListener","listen","accordionId","_subscribeToOpenCloseAllActions","emit","notify","markForCheck","disabled","unsubscribe","toggle","close","open","subscribe","ɵngcc1","outputs","useValue","CdkAccordionModule","ɵmod","ɵinj","_c0","rf","ctx","_c1","_c2","ctx_r0","_getExpandedState","_c3","_c4","MAT_ACCORDION","EXPANSION_PANEL_ANIMATION_TIMING","matExpansionAnimations","indicatorRotate","trigger","state","style","transform","transition","animate","bodyExpansion","height","visibility","MatExpansionPanelContent","_template","uniqueId","MAT_EXPANSION_PANEL_DEFAULT_OPTIONS","MatExpansionPanel","_uniqueSelectionDispatcher","_viewContainerRef","_document","_animationMode","defaultOptions","super","_hideToggle","afterExpand","afterCollapse","_inputChanges","_headerId","_bodyAnimationDone","pipe","distinctUntilChanged","x","y","fromState","toState","event","hideToggle","value","_togglePosition","togglePosition","_hasSpacing","displayMode","ngAfterContentInit","_lazyContent","startWith","filter","_portal","take","TemplatePortal","_containsFocus","_body","focusedElement","activeElement","bodyElement","nativeElement","contains","DOCUMENT","ANIMATION_MODULE_TYPE","ɵcmp","contentQueries","dirIndex","_t","first","viewQuery","hostAttrs","hostVars","hostBindings","ngContentSelectors","decls","vars","consts","template","$event","MatExpansionPanel_ng_template_5_Template","directives","ɵngcc2","styles","encapsulation","data","animation","changeDetection","MatExpansionPanelActionRow","MatExpansionPanelHeader","panel","_element","_focusMonitor","_parentChangeSubscription","accordionHideToggleChange","EMPTY","merge","focusVia","expandedHeight","collapsedHeight","_toggle","_isExpanded","_getPanelId","_getTogglePosition","_showToggle","_getHeaderHeight","isExpanded","_keydown","keyCode","SPACE","ENTER","hasModifierKey","preventDefault","_handleHeaderKeydown","focus","options","origin","ngAfterViewInit","monitor","_handleHeaderFocus","stopMonitoring","ɵngcc3","MatExpansionPanelHeader_span_4_Template","ɵngcc4","MatExpansionPanelTitle","MatAccordion","ɵMatAccordion_BaseFactory","arguments","_ownHeaders","QueryList","show","_headers","headers","reset","header","notifyOnChanges","_keyManager","FocusKeyManager","withWrap","withHomeAndEnd","onKeydown","updateActiveItem","MatExpansionModule","imports","CommonModule","PortalModule","k","enterDuration","MAT_RADIO_DEFAULT_OPTIONS","providedIn","factory","color","nextUniqueId","MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","forwardRef","MatRadioGroup","h","source","MAT_RADIO_GROUP","_MatRadioGroupBase","_changeDetector","_value","_name","_selected","_isInitialized","_labelPosition","_required","_controlValueAccessorChangeFn","onTouched","change","_updateRadioButtonNames","v","_markRadiosForCheck","newValue","_updateSelectedRadioFromValue","_checkSelectedRadioButton","checked","selected","_touch","_radios","forEach","radio","name","_markForCheck","_emitChangeEvent","MatRadioChange","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","labelPosition","required","ɵMatRadioGroup_BaseFactory","MatRadioButton","_MatRadioButtonMixinBase","mixinDisableRipple","mixinTabIndex","_elementRef","_MatRadioButtonBase","radioGroup","elementRef","_radioDispatcher","_providerOverride","tabIndex","_uniqueId","_checked","coerceNumberProperty","newCheckedState","p","_setDisabled","_color","_inputElement","ngOnInit","focusOrigin","_isRippleDisabled","disableRipple","_onInputClick","stopPropagation","_onInputChange","groupValueChanged","String","ariaLabel","ariaLabelledby","ariaDescribedby","changeDetector","focusMonitor","radioDispatcher","animationMode","providerOverride","_r0","inputId","MatRadioModule","MatRippleModule","MatCommonModule","module","exports","a","b","length","i","keys","Array","isArray","equal","RegExp","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","n","qe","resolve","http","get","toPromise","then","router","navigate","e","M","oe","server","client","getModified","diffSettingObjects","o","initial","setAll","updateInitial","TextFieldModule","PlatformModule","MAT_INPUT_VALUE_ACCESSOR","MatInputModule","providers","ErrorStateMatcher","MatFormFieldModule","bt","s","l","we","I","re","Z","ue","description","q","Zt","g","Qe","se","X","S","R","A","Q","De","_cellPadding","numCols","label","ctx_r4","_firstRowOffset","labelMinRequiredCells","_r9","item_r6","$implicit","ctx_r8","_cellClicked","colIndex_r7","index","rowIndex_r3","ctx_r5","_cellWidth","enabled","_isActiveCell","_isRangeStart","compareValue","_isRangeEnd","_isInRange","_isComparisonBridgeStart","_isComparisonBridgeEnd","_isComparisonStart","_isComparisonEnd","_isInComparisonRange","_isPreviewStart","_isPreviewEnd","_isInPreview","cssClasses","_isSelected","_isComparisonIdentical","todayValue","displayValue","MatCalendarBody_tr_1_td_1_Template","MatCalendarBody_tr_1_td_2_Template","row_r2","ctx_r1","day_r1","narrow","_r5","activeDate","_dateSelected","dateFilter","maxDate","minDate","dateClass","comparisonStart","comparisonEnd","_r8","_monthSelectedInYearView","ctx_r10","_goToDateInView","ctx_r2","_r12","_yearSelectedInMultiYearView","ctx_r14","ctx_r3","MatDatepickerIntl","calendarLabel","openCalendarLabel","prevMonthLabel","nextMonthLabel","prevYearLabel","nextYearLabel","prevMultiYearLabel","nextMultiYearLabel","switchToMonthViewLabel","switchToMultiYearViewLabel","formatYearRange","start","end","ɵprov","ɵɵdefineInjectable","token","Dt","rawValue","MatCalendarBody","_ngZone","activeCell","isRange","cellAspectRatio","previewStart","previewEnd","selectedValueChange","previewChange","_enterHandler","_skipNextFocus","target","cell","_getCellFromElement","run","_leaveHandler","isTableCell","runOutsideAngular","element","addEventListener","startValue","endValue","columnChanges","rows","removeEventListener","rowIndex","colIndex","cellNumber","_focusActiveCell","movePreview","onStable","querySelector","isStart","isEnd","isInRange","previousCell","previousRow","nextCell","nextRow","parentNode","row","getAttribute","col","parseInt","attrs","MatCalendarBody_tr_0_Template","MatCalendarBody_tr_1_Template","node","nodeName","rangeEnabled","ve","MatDateSelectionModel","selection","_adapter","_selectionChanged","selectionChanged","updateSelection","_isValidDateInstance","date","isDateInstance","isValid","MatSingleDateSelectionModel","adapter","add","isComplete","MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER","deps","Optional","SkipSelf","DateAdapter","useFactory","parent","MAT_DATE_RANGE_SELECTION_STRATEGY","MatMonthView","_dateFormats","_dateAdapter","_dir","_rangeStrategy","_rerenderSubscription","selectedChange","_userSelection","activeDateChange","_activeDate","today","oldActiveDate","validDate","getValidDateOrNull","deserialize","clampDate","_hasSameMonthAndYear","_init","DateRange","_setRanges","_minDate","_maxDate","localeChanges","comparisonChange","firstChange","rangeStartDate","rangeEndDate","selectedYear","getYear","selectedMonth","getMonth","selectedDate","createDate","_getDateInCurrentMonth","_handleCalendarBodyKeydown","isRtl","_isRtl","LEFT_ARROW","addCalendarDays","RIGHT_ARROW","UP_ARROW","DOWN_ARROW","HOME","getDate","END","getNumDaysInMonth","PAGE_UP","altKey","addCalendarYears","addCalendarMonths","PAGE_DOWN","ESCAPE","_previewEnd","_previewStart","compareDate","_todayDate","_getCellCompareValue","_monthLabel","getMonthNames","toLocaleUpperCase","firstOfMonth","_firstWeekOffset","getDayOfWeek","getFirstDayOfWeek","_initWeekdays","_createWeekCells","_matCalendarBody","_previewChanged","previewRange","createPreview","detectChanges","firstDayOfWeek","narrowWeekdays","getDayOfWeekNames","weekdays","map","long","_weekdays","slice","concat","daysInMonth","dateNames","getDateNames","_weeks","push","_shouldEnableDate","format","display","dateA11yLabel","cellClasses","MatCalendarCell","d1","d2","year","month","day","Date","getTime","selectedValue","_rangeStart","_rangeEnd","_isRange","_comparisonRangeStart","_comparisonRangeEnd","MAT_DATE_FORMATS","MatMonthView_th_3_Template","MatMultiYearView","yearSelected","isSameMultiYearView","_setSelectedYear","_todayYear","minYearOfPage","activeYear","getActiveOffset","_years","_createCellForYear","_yearSelected","Math","min","yearsPerPage","_getActiveCell","yearName","getYearName","_shouldEnableYear","_selectedYear","dateAdapter","date1","date2","year1","year2","startingYear","getStartingYear","floor","MatYearView","monthSelected","_setSelectedMonth","_monthSelected","normalizedDate","_todayMonth","_getMonthInCurrentYear","_yearLabel","monthNames","_months","_createCellForMonth","monthName","monthYearA11yLabel","_shouldEnableMonth","_isYearAndMonthAfterMaxDate","_isYearAndMonthBeforeMinDate","maxYear","maxMonth","minYear","minMonth","_selectedMonth","MatCalendarHeader","_intl","calendar","changeDetectorRef","stateChanges","currentView","monthYearLabel","maxYearOfPage","minYearName","maxYearName","currentPeriodClicked","previousClicked","nextClicked","previousEnabled","_isSameView","nextEnabled","MatCalendar","periodButtonLabel","periodButtonText","prevButtonLabel","nextButtonLabel","ɵngcc5","_moveFocusOnNextTick","startView","_intlChanges","_startAt","_clampedActiveDate","_currentView","_calendarHeaderPortal","ComponentPortal","headerComponent","startAt","ngAfterViewChecked","focusActiveCell","view","_getCurrentViewComponent","updateTodaysDate","monthView","yearView","multiYearView","sameDate","normalizedYear","normalizedMonth","MatCalendar_ng_template_0_Template","MatCalendar_mat_month_view_2_Template","MatCalendar_mat_year_view_3_Template","MatCalendar_mat_multi_year_view_4_Template","ɵngcc6","matDatepickerAnimations","transformPanel","opacity","fadeInCalendar","datepickerUid","MAT_DATEPICKER_SCROLL_STRATEGY","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","Overlay","overlay","scrollStrategies","reposition","_MatDatepickerContentMixinBase","mixinColor","MatDatepickerContent","_model","_rangeSelectionStrategy","_subscriptions","_animationState","_animationDone","datepicker","_calendar","_handleUserSelection","newSelection","selectionFinished","_startExitAnimation","_getSelected","touchUi","_selectYear","_selectMonth","panelClass","_getMinDate","_getMaxDate","_getDateFilter","calendarHeaderComponent","MatDatepickerBase","_dialog","_overlay","scrollStrategy","_inputStateChanges","_touchUi","xPosition","yPosition","openedStream","closedStream","_opened","_focusedElementBeforeOpen","_backdropHarnessClass","_scrollStrategy","_datepickerInput","getStartValue","getThemePalette","undefined","max","positionChange","_popupRef","_setConnectedPositions","getConfig","positionStrategy","updatePosition","_destroyPopup","select","_registerInput","input","_openAsDialog","_openAsPopup","_popupComponentRef","instance","_dialogRef","completeClose","setTimeout","direction","viewContainerRef","hasBackdrop","disableClose","backdropClass","width","minWidth","minHeight","maxWidth","maxHeight","position","autoFocus","restoreFocus","afterClosed","_forwardContentValues","componentInstance","portal","_createPopup","attach","flexibleConnectedTo","getConnectedOverlayOrigin","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withLockedPosition","overlayConfig","OverlayConfig","create","overlayElement","setAttribute","backdropClick","detachments","keydownEvents","dispose","strategy","primaryX","secondaryX","primaryY","secondaryY","withPositions","originX","originY","overlayX","overlayY","ɵngcc7","ɵngcc8","MatDatepicker","ɵMatDatepicker_BaseFactory","Tt","targetElement","MatDatepickerInputBase","dateChange","dateInput","_valueChange","_onTouched","_validatorOnChange","_cvaOnChange","_valueChangesSubscription","_localeSubscription","_parseValidator","_lastValueValid","matDatepickerParse","text","_filterValidator","control","controlValue","matDatepickerFilter","_minValidator","matDatepickerMin","actual","_maxValidator","matDatepickerMax","_getValueFromModel","_pendingValue","_isValidValue","oldDate","_assignValue","_formatValue","_parentDisabled","blur","_getValidators","_registerModel","model","_canEmitChangeEvent","MatDatepickerInputEvent","_outsideValueChanged","_i2","_n$a","previousValue","currentValue","registerOnValidatorChange","validate","c","_validator","_onKeydown","isAltDownArrow","readOnly","_openPopup","_onInput","lastValueWasValid","parse","_onChange","_onBlur","_assignValueToModel","MAT_DATEPICKER_VALUE_ACCESSOR","MatDatepickerInput","MAT_DATEPICKER_VALIDATORS","NG_VALIDATORS","dateFormats","_formField","Validators","_datepicker","_min","validValue","_max","_dateFilter","getPopupConnectionElementRef","modelValue","MAT_FORM_FIELD","toIso8601","matDatepicker","MatDatepickerToggleIcon","MatDatepickerToggle","defaultTabIndex","parsedTabIndex","Number","_watchStateChanges","_open","datepickerStateChanged","of","inputStateChanged","datepickerToggled","_customIcon","_button","MatDatepickerToggle__svg_svg_2_Template","MatDatepickerModule","MatButtonModule","MatDialogModule","OverlayModule","A11yModule","CdkScrollableModule","no","admin","tagTypes","pages","oo","so","generateMenu","menu","getCustomSidebarItems","settings","icon","permission","route","action","activeExact","condition","r","d","hasPermission","yt","spotifyId","importAlbums","importLyrics","importSimilarArtists","resourceName","modelType","split","pop","importingArtist","Zn","importingAlbum","vn","importingTrack","Ht","importingPlaylist","xn","import","loading$","post","form","z","toast","message","dialogRef","L","defaultValue","defaultOperator","V","eq","order","Y","Select","inputType","operators","component","componentData","dt","ne","gt","gte","lt","lte","Vt","toISOString","xe","Ce","_o","oxw","filterSelected","Tn","anyFocused","document","classList","focusItemAt","items","getFocusedFilter","dataset","filterKey","filters","getFocusedIndex","An","propagateChange","value$","onClick","openSelectModelDialog","dialog","To","has","doesntHave","Ao","breakpoints","isMobile$","pure","qo","resizeSelect","selectedIndex","el","yn","vo","resizeInput","focusValueInput","valueInput","Mn","fb","group","operator","controls","ut","addControl","emitEvent","cd","last","removeByKey","removeControl","removeCurrentlyFocused","controlKey","focusLast","focusPrevious","getByIndex","lastIsFocused","Mt","Qo","bindings","keybind","parseKeybindString","keybindString","callback","addWithPreventDefault","listenOn","he","fireIfInputFocused","includes","toLowerCase","executeBindings","bindingMatches","toUpperCase","ctrlKey","ctrl","metaKey","shiftKey","shift","trim","Vo","f","keyedFilters","haveFiltersOrQuery$","ho","searchControl","valueChanges","tt","pt","_ref3","watchForSizeChanges","setFiltersFromQuery","setupKeybinds","subscribeToCloseActions","bindToFormValueChange","activeFilters","searchInput","closeActionsStream$","clearSearch","toggleFilterDropdown","filterDropdownVisible$","addFilterFromDropdownClick","searchInputIsFocused","cursorAtStartOfSearchInput","selectionStart","cursorAtEndOfSearchInput","Oe","filterChange","$o","ResizeObserver","filterBarHeight","contentRect","observe","box","routerState","root","snapshot","queryParams","Bo","query","setValue","keybinds","suggestions","st","He","values","encodeURIComponent","btoa","JSON","stringify","atob","decodeURIComponent","Te","onFilterChange","datable","filters$","Ae","changeRef","datatable","selectedRows$","anyRowsSelected","allRowsSelected","data$","toggleAllRows","Ze","paginator","response$","pagination","totalRecords","total","to","per_page","current_page","from","havePrevious","canLoadPrevPage","haveNext","canLoadNextPage","perPageControl","changePerPage","destroy","previousPage","nextPage","ye","isRowSelected","indexOf","toggleRow","splice","si","sort$","orderBy","init","uri","maybeDeleteSelectedArtists","confirmResourceDeletion","artists","openImportMedialModal","modal","N","li","xi","U","staticParams","withCount","maybeDeleteSelectedAlbums","albums","wn","httpClient","update","put","delete","ids","Si","G","genre","updating","confirm","genres","getPayload","loading","errors","openUploadImageModal","httpParams","diskPrefix","disk","validator","imageValidator","$t","types","qn","uploadQueue","image","fileEntry","url","display_name","importArtists","Ci","genreId","wt","Pi","Li","openCrupdateGenreModal","openCrupdateResourceModal","confirmGenresDeletion","Hi","_classCallCheck","Jn","makeBootstrapPromise","editorIsReady","tinymceInstance","setContent","undoManager","clear","waitForEditor","hasUndo","hasRedo","queryCommandState","execCommand","zone","getContents","getContent","setContents","transact","setCursorLocation","nodeChanged","insertContents","collapse","insertImage","Promise","bootstrapPromise","setConfig","config","loadTinymce","initTinymce","lazyLoader","loadAsset","textAreaEl","plugins","branding","browser_spellcheck","max_height","min_height","autoresize_on_init","paste_as_text","elementpath","statusbar","entity_encoding","menubar","toolbar","convert_urls","forced_root_block","document_base_url","baseURI","element_format","body_class","content_style","content_css","default_link_target","link_assume_external_targets","target_list","link_title","image_dimensions","image_description","setup","on","onChange","init_instance_callback","bootstrapPromiseResolve","onCtrlEnter","shortcuts","showAdvancedControls","extended_valid_elements","getAssetUrl","title","i18n","codesample_languages","editorEl","parentElement","offsetHeight","tinymce","destroyEditor","remove","Ki","initValidations","Wi","maxSize","Pn","DEFAULT_MAX_SIZE_MB","Xi","validations","ji","Bt","bootTextEditor","editor","insertInfoContainer","Gi","showColorPicker","BeColorPickerModule","overlayPanel","components","zi","valueChanged","showVisualEditor","contentAreaContainer","activeEditor","renderer","setStyle","sourceTextArea","showSourceEditor","sourceAreaControl","source_view","openFileUploadDialog","multiple","onFileUpload","openInsertImageModal","Sn","inlineUploadPrefix","insertLink","href","visualTextArea","Dn","formControl","searchResults","hydrate","bindTrackInput","textEditor","lyric","createOrUpdateLyrics","lyrics","track_id","track","trackInput","trackDisplayFn","kt","search","media","limit","results","tracks","ze","attachTrack","option","artistsString","join","vr","kr","with","openCrupdateLyricModal","confirmLyricsDeletion","getLyricImage","album","images","getDefault","Ur","Ve","haveUrl","user","Hr","showCrupdatePlaylistModal","Ir","playlist","confirmPlaylistsDeletion","playlists","Me","ee","ae","setJson","getJson","saveSettings","save","clearErrors","errors$","Nn","rapidapi_app_key","wikipedia_language","spotify_id","spotify_secret","lastfm_api_key","artist_provider","album_provider","search_provider","artist_bio_provider","as","needProviderKeys","findIndex","youtube_api_key","soundcloud_api_key","_s","valueLists","countries","ms","Is","maybeDeleteSelectedTracks","formatDuration","duration","fromMilliseconds","et","searchFormControl","searchUsers","En","users$","normalizeUser","users","getAll","avatar","model_type","Js","Ps","replace","Rs","zt","maybeDeleteSelectedChannels","channels","We","Rn","getBaseUrl","defaultBaseUri","fullBaseUri","endsWith","slug$","slugControl","editing$","startEditing","getPrefix","prefix","Ws","openPopover","overlayRef","closePopover","Ln","offsetY","content","infoButton","wider","getPanelEl","togglePopover","onMouseLeave","toElement","relatedTarget","Hn","ht","spotifyTopTracks","active","spotifyNewAlbums","spotifyPlaylistTracks","hasValue","valueName","lastfmTopGenres","slug","hideTitle","seoTitle","seoDescription","carouselWhenNested","layout","contentType","contentModel","modelTypes","contentOrder","autoUpdateMethod","autoUpdateValue","placeholder","activeContainer","Ee","$e","dropContainer","Je","ua","Vn","children","ga","sourceIndex","clientWidth","clientHeight","removeChild","targetIndex","insertBefore","nextSibling","_dropListRef","enter","_dragRef","offsetLeft","offsetTop","api","channel","patchValue","channelContent$","channelUrl$","lockSlug","dirty","Yn","autoUpdateMethods","disable","enable","searchResults$","searchForContent","flatten","localOnly","submit","updateContent","getRawValue","partialItem","detachContentItem","detaching","detachItem","removeContentItem","attachContentItem","find","attachItem","autoUpdateChanelContents","isChannel","Ls","displayFn","getValueName","dragMoved","getPointerPositionOnPage","listGroup","_items","getBoundingClientRect","top","_n$element$nativeElem","bottom","left","right","dropListDropped","appendChild","_e","channelable_id","changeOrder","startsWith","touches","changedTouches","viewportRuler","getViewportScrollPosition","pageX","pageY","Sl","wl","artistTabs","tabs","tab","toggleArtistTab","onTabChange","replaceUrl","artistPageListDrop","previousIndex","currentIndex","tabIsActive","Pl","Hl","confirmRequestDeletion","backstage","deleteRequests","rc","verifyArtist","request","$l","notes","confirmed","zn","theme","isDarkMode","wave","variant","rect","Sc","params","getRequest","requestId","request$","openPassportScanModal","Vl","passportScanEntry","handleRequest","approveRequest","markArtistAsVerified","denyRequest","deleteRequest","it","body","ok","Pc","Lc","Ut","makeRolesList","maybeDeleteComments","comments","restoreComment","restore","scout_mysql_mode","algolia_app_id","algolia_secret","jn","models","importRecords","searchableModelControl","driver","scout_driver","search_group","models$","Wc","path","loadChildren","BackstageModule","permissions","ql","failRedirectUri","forAdmin","Wn","ld","firstChild","routeConfig","events","activePanel$","appRoutes","Zd","menuItemCategories$","menuItemCategories","cssThemes","themes","getHomepageComponents","customHomepage","getComponents","getDisplayName","urlsDontMatch","newAppUrl","app_url","createSitemap","envato_id","envato_secret","envato_personal_token","google_id","google_secret","facebook_id","facebook_secret","twitter_id","twitter_secret","require_email_confirmation","single_device_login","Ud","memcached_host","memcached_port","cache_driver","Od","clearCache","analytics_view_id","Yd","certificateFile","files","certificate","setCertificateFile","item","Bd","timezones","localizations","initialDateFormat","defaultDateFormats","selects","getCurrentDate","updateDateFormat","selectedDateFormat","app_timezone","app_locale","mail_host","mail_username","mail_password","mail_port","mail_encryption","mailgun_domain","mailgun_secret","ses_key","ses_secret","ses_region","sparkpost_secret","mail_from_address","mail_from_name","mail_driver","up","email","connectGmailAccount","social","openNewSocialAuthWindow","connectedGmailAccount","sentry_dsn","hp","sqs_queue_key","sqs_queue_secret","sqs_queue_prefix","sqs_queue_name","sqs_queue_region","queue_driver","xp","pusher_key","paypal_client_id","paypal_secret","paypal_webhook_id","stripe_key","stripe_secret","Jp","acceptedCards","Gt","Sp","unit","amount","fromBytes","Pp","Qp","storage_ftp_host","storage_ftp_username","storage_ftp_password","storage_ftp_root","storage_ftp_port","storage_ftp_passive","storage_ftp_ssl","Ep","storage_dropbox_access_token","storage_dropbox_root","Yp","storage_rackspace_username","storage_rackspace_key","storage_rackspace_region","storage_rackspace_container","Rp","storage_s3_key","storage_s3_secret","storage_s3_region","storage_s3_bucket","storage_s3_endpoint","Lp","storage_digitalocean_key","storage_digitalocean_secret","storage_digitalocean_region","storage_digitalocean_bucket","Hp","storage_backblaze_key_id","storage_backblaze_application_key","storage_backblaze_bucket","storage_backblaze_region","static_file_delivery","ru","j","allowedExtensions","blockedExtensions","getServerMaxUploadSize","Kn","driverSelected","uploads_disk_driver","public_disk_driver","allSelectedDriversAreLocal","every","serverMaxUploadSize$","apply","gu","actions","ea","recaptchaActions","reverse","ta","isSelected","updateValue","getValue","Jt","getRoles","getWithCache","createNew","addUsers","userIds","removeUsers","selectionModel","Zu","initialRoles","fetchAllRoles","rolesService","allRoles$","Au","openSelectRolesModal","roles$","setRoles","detachRole","Ou","initialPermissions","fetchAllPermissions","showAdvancedControl","setShowAdvanced","getSelectedPermissions","valueListKey","reduce","mergeRestrictions","allPermissions$","advanced","filteredPermissions$","restrictions","viewName","jt","showSelectPermissionsModal","permissions$","hideRestrictions","setPermissions","removePermission","getCountRestriction","og","password","first_name","last_name","email_verified_at","available_space","roles","sendEmailConfirmation","auth","resendEmailConfirmation","shouldShowResendButton","avatarUploadConfig","avatarValidator","generateNewPassword","ig","sg","lg","export","downloadPath","rg","bg","Xe","maybeDeleteSelectedUsers","userService","showCrupdateUserModal","exportCsv","csv","na","Ug","default","guests","resetState","role","roleService","Bg","refreshRoles","role_id","selectedRole$","selectRole","refreshRoleUsers","roleApi","showAssignUsersModal","showCrupdateRoleModal","maybeDeleteRole","deleteRole","maybeDetachUsers","removeUsersFromSelectedRole","canAssignUsers","t_","language","lists","languages$","languages","localization","updateLocalization","createNewLocalization","n_","a_","B","v_","localizationsApi","all","setLocalizations","bindSearchQuery","localizations$","setSelectedLocalization","selectedLocalization","searchQuery","lines","lines$","originalLines","loadingLines$","addLine","beforeClosed","setDefaultLocalization","setDefault","isActive","setLocalization","showCrupdateLocalizationModal","confirmLocalizationDeletion","deleteLocalization","filterPredicate","linesToArray","translation","removeLine","x_","w_","oa","maybeDeleteSelectedEntries","uploads","entryIds","deleteForever","U_","overlayPanelRef","k_","J_","zoomImage","src","alt","D_","saveAds","allAds","getPreviewUrl","slot","getFlat","lm","parent_id","free","hidden","recommended","show_permissions","currency","interval","interval_count","allPlans$","plans","currencies$","currencies","plan","hydrateModel","features$","code","currency_symbol","symbol","addFeature","newFeature","removeFeature","getBasePlans","reorderPlanFeatures","formValue","getMinAmount","getMaxAmount","cm","hm","St","maybeDeleteSelectedPlans","showCrupdatePlanModal","syncPlans","sync","km","plan_id","renews_at","ends_at","bindToUserAutocomplete","fetchPlans","subscription","subscriptions","user_id","userAutocomplete","toggleDatePicker","filteredUsers","plansApi","Im","Fm","Wt","maybeCancelSubscription","bodyBold","cancel","cancelOrDeleteSubscription","maybeDeleteSubscription","openCrupdateSubscriptionModal","Bm","customPages$","addRegisterPolicy","register_policies","registerPolicies","getFirstCustomPageAction","removeRegisterPolicy","removeAt","onPolicyTypeChange","Xt","BASE_URI","nh","tag","forceType","isSystemTag","system","tags","ph","maybeDeleteSelectedTags","showCrupdateTagModal","uh","Th","endpoint","Kt","maybeDeleteSelectedPages","customPages","showUserColumn","getPageUrl","ra","hideSlug","hide_nav","getPage","crupdatePage","updating$","page","backRoute","relativeTo","Ah","setBody","slugPrefix","Sh","Lh","canActivate","at","bn","canActivateChild","adminRoot","redirectTo","pathMatch","AnalyticsModule","ia","AppAppearanceModule","Hh","Vh","ft","la","tn","zh","Gh","nn","en","ca","da","jh","Kh","vebto","me","$h","Bh","ao","sa","Wh","Xh","ct","_","pa","nf","ef","tf","submitRequest","becomeArtist","u","J","suggestedValues$","suggestFn","bindToSearchControl","emailsInput","parseEmailsOnPaste","items$","addFromChipInput","matAutocomplete","isOpen","selectMode","addFromAutocomplete","P","findValueIndex","inputEl","displayChipValue","clipboardData","window","getData","match","fe","getSelection","rangeCount","deleteFromDocument","Se","offsetX","getElementById","scrollIntoView","behavior","block","inline","D","w","Ye","filterPanelRef","numberOfRowsSelected","openFiltersPanel","filterButton","mobilePosition","filterPanelTemplate","isModel","getFullPlanName","handle","O","pe","Ie","navIsOpen$","isCompact$","onDestroy$","setProperty","removeProperty","toggleSidebarMode","localStorage","set","storageSelector","isNaN","parseFloat","isFinite"],"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/accordion.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/expansion.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/radio.js","webpack:///node_modules/fast-deep-equal/index.js","webpack:///src/common/admin/settings/settings-resolve.service.ts","webpack:///src/common/admin/settings/settings-state.service.ts","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/text-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js","webpack:///src/common/core/ui/space-input/space-input.module.ts","webpack:///src/common/admin/settings/recaptcha/recaptcha-actions.token.ts","webpack:///src/common/core/ui/info-popover/info-popover.module.ts","webpack:///src/common/admin/settings/settings.module.ts","webpack:///src/common/text-editor/text-editor.module.ts","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/datepicker.js","webpack:///src/common/admin/common-admin-config.ts","webpack:///src/common/core/ui/image-zoom/image-zoom.module.ts","webpack:///src/common/admin/admin.component.ts","webpack:///src/common/admin/admin.component.html","webpack:///src/app/admin/import-media-modal/import-media-modal.component.html","webpack:///src/app/admin/import-media-modal/import-media-modal.component.ts","webpack:///src/common/datatable/datatable-filters/search-input-with-filters/filter-config/datatable-filter.ts","webpack:///src/common/datatable/datatable-filters/search-input-with-filters/filter-config/timestamp-filter.ts","webpack:///src/app/admin/artists/artist-index-filters.ts","webpack:///src/common/datatable/datatable-filters/search-input-with-filters/filter-suggestions/filter-suggestions.component.html","webpack:///src/common/datatable/datatable-filters/search-input-with-filters/filter-suggestions/filter-suggestions.component.ts","webpack:///src/common/datatable/datatable-filters/search-input-with-filters/active-filters/select-model-control/select-model-control.component.html","webpack:///src/common/datatable/datatable-filters/search-input-with-filters/active-filters/select-model-control/select-model-control.component.ts","webpack:///src/common/datatable/datatable-filters/filter-operator-names.ts","webpack:///src/common/datatable/datatable-filters/search-input-with-filters/active-filters/operator-select/operator-display-name.pipe.ts","webpack:///src/common/datatable/datatable-filters/search-input-with-filters/active-filters/operator-select/operator-select.component.html","webpack:///src/common/datatable/datatable-filters/search-input-with-filters/active-filters/operator-select/operator-select.component.ts","webpack:///src/common/datatable/datatable-filters/search-input-with-filters/active-filters/active-filter/active-filter.component.html","webpack:///src/common/datatable/datatable-filters/search-input-with-filters/active-filters/active-filter/active-filter.component.ts","webpack:///src/common/datatable/datatable-filters/search-input-with-filters/active-filters/active-filters.component.html","webpack:///src/common/datatable/datatable-filters/search-input-with-filters/active-filters/active-filters.component.ts","webpack:///src/common/core/keybinds/keycodes.enum.ts","webpack:///src/common/core/keybinds/keybinds.service.ts","webpack:///src/common/datatable/datatable-filters/search-input-with-filters/search-input-with-filters.component.html","webpack:///src/common/datatable/datatable-filters/search-input-with-filters/search-input-with-filters.component.ts","webpack:///src/common/datatable/datatable-filters/datatable-filters.component.ts","webpack:///src/common/datatable/datatable-filters/datatable-filters.component.html","webpack:///src/common/datatable/selection/table-header-checkbox.component.ts","webpack:///src/common/datatable/datatable-footer/datatable-footer.component.html","webpack:///src/common/datatable/datatable-footer/datatable-footer.component.ts","webpack:///src/common/datatable/selection/table-body-checkbox.component.ts","webpack:///src/app/admin/artists/artist-index.component.html","webpack:///src/app/admin/artists/artist-index.component.ts","webpack:///src/app/admin/albums/album-index/album-index-filters.ts","webpack:///src/app/admin/albums/album-index/album-index.component.html","webpack:///src/app/admin/albums/album-index/album-index.component.ts","webpack:///src/app/web-player/genres/genres.service.ts","webpack:///src/app/admin/genres/crupdate-genre-modal/crupdate-genre-modal.component.html","webpack:///src/app/admin/genres/crupdate-genre-modal/crupdate-genre-modal.component.ts","webpack:///src/app/admin/genres/genre-index-filters.ts","webpack:///src/app/admin/genres/genres.component.html","webpack:///src/app/admin/genres/genres.component.ts","webpack:///src/app/models/Lyric.ts","webpack:///src/common/text-editor/editors/tinymce-text-editor.service.ts","webpack:///src/common/text-editor/validation/text-editor-image-validator.ts","webpack:///src/common/text-editor/text-editor.component.html","webpack:///src/common/text-editor/text-editor.component.ts","webpack:///src/app/admin/lyrics-page/crupdate-lyric-modal/crupdate-lyric-modal.component.html","webpack:///src/app/admin/lyrics-page/crupdate-lyric-modal/crupdate-lyric-modal.component.ts","webpack:///src/app/admin/lyrics-page/lyric-index-filters.ts","webpack:///src/app/admin/lyrics-page/lyrics-page.component.html","webpack:///src/app/admin/lyrics-page/lyrics-page.component.ts","webpack:///src/app/admin/playlists-page/playlist-index-filters.ts","webpack:///src/common/datatable/columns/user-column/user-column.component.html","webpack:///src/common/datatable/columns/user-column/user-column.component.ts","webpack:///src/app/admin/playlists-page/playlists-page.component.html","webpack:///src/app/admin/playlists-page/playlists-page.component.ts","webpack:///src/common/admin/settings/settings-panel.component.ts","webpack:///src/app/admin/settings/providers/providers-settings.component.html","webpack:///src/app/admin/settings/providers/providers-settings.component.ts","webpack:///src/app/admin/settings/player/player-settings.component.html","webpack:///src/app/admin/settings/player/player-settings.component.ts","webpack:///src/app/admin/tracks/track-index/track-index-filters.ts","webpack:///src/app/admin/tracks/track-index/track-index.component.html","webpack:///src/app/admin/tracks/track-index/track-index.component.ts","webpack:///src/common/auth/find-user-modal/find-user-modal.component.html","webpack:///src/common/auth/find-user-modal/find-user-modal.component.ts","webpack:///src/app/admin/channels/channel-index/channel-index-filters.ts","webpack:///src/app/admin/channels/channel-index/formatted-channel-config.pipe.ts","webpack:///src/common/core/utils/start-case.ts","webpack:///src/app/admin/channels/channel-index/channel-index.component.html","webpack:///src/app/admin/channels/channel-index/channel-index.component.ts","webpack:///src/common/shared/form-controls/slug-control/slug-control.component.html","webpack:///src/common/shared/form-controls/slug-control/slug-control.component.ts","webpack:///src/common/core/ui/info-popover/info-popover.component.html","webpack:///src/common/core/ui/info-popover/info-popover.component.ts","webpack:///src/app/admin/channels/crupdate-channel-page/crupdate-channel-page.component.html","webpack:///src/app/admin/channels/crupdate-channel-page/crupdate-channel-page.component.ts","webpack:///src/app/admin/settings/interface/interface.component.html","webpack:///src/app/admin/settings/interface/interface.component.ts","webpack:///src/app/admin/backstage-requests-index/backstage-request-index-filters.ts","webpack:///src/app/admin/backstage-requests-index/backstage-requests-index.component.html","webpack:///src/app/admin/backstage-requests-index/backstage-requests-index.component.ts","webpack:///src/app/admin/backstage-requests-index/backstage-request-viewer/confirm-request-handled-modal/confirm-request-handled-modal.component.html","webpack:///src/app/admin/backstage-requests-index/backstage-request-viewer/confirm-request-handled-modal/confirm-request-handled-modal.component.ts","webpack:///src/common/core/ui/skeleton/skeleton.component.ts","webpack:///src/app/admin/backstage-requests-index/backstage-request-viewer/backstage-request-viewer.component.html","webpack:///src/app/admin/backstage-requests-index/backstage-request-viewer/backstage-request-viewer.component.ts","webpack:///src/app/admin/comments/comment-index-filters.ts","webpack:///src/app/admin/comments/comment-index.component.html","webpack:///src/app/admin/comments/comment-index.component.ts","webpack:///src/common/admin/settings/search/search-settings.component.html","webpack:///src/common/admin/settings/search/search-settings.component.ts","webpack:///src/app/admin/app-admin-routes.ts","webpack:///src/common/admin/settings/settings.component.html","webpack:///src/common/admin/settings/settings.component.ts","webpack:///src/common/admin/settings/general/general-settings.component.html","webpack:///src/common/admin/settings/general/general-settings.component.ts","webpack:///src/common/admin/settings/authentication/authentication-settings.component.html","webpack:///src/common/admin/settings/authentication/authentication-settings.component.ts","webpack:///src/common/admin/settings/cache/cache-settings.component.html","webpack:///src/common/admin/settings/cache/cache-settings.component.ts","webpack:///src/common/admin/settings/analytics/analytics-settings.component.html","webpack:///src/common/admin/settings/analytics/analytics-settings.component.ts","webpack:///src/common/admin/settings/localization/localization-settings.component.html","webpack:///src/common/admin/settings/localization/localization-settings.component.ts","webpack:///src/common/admin/settings/mail/mail-settings.component.html","webpack:///src/common/admin/settings/mail/mail-settings.component.ts","webpack:///src/common/admin/settings/logging/logging-settings.component.html","webpack:///src/common/admin/settings/logging/logging-settings.component.ts","webpack:///src/common/admin/settings/queue/queue-settings.component.html","webpack:///src/common/admin/settings/queue/queue-settings.component.ts","webpack:///src/common/admin/settings/billing/billing-settings.component.html","webpack:///src/common/admin/settings/billing/billing-settings.component.ts","webpack:///src/common/core/ui/space-input/space-input.component.html","webpack:///src/common/core/ui/space-input/space-input.component.ts","webpack:///src/common/admin/settings/uploading/storage-forms/ftp-form/ftp-form.component.ts","webpack:///src/common/admin/settings/uploading/storage-forms/ftp-form/ftp-form.component.html","webpack:///src/common/admin/settings/uploading/storage-forms/dropbox-form/dropbox-form.component.ts","webpack:///src/common/admin/settings/uploading/storage-forms/dropbox-form/dropbox-form.component.html","webpack:///src/common/admin/settings/uploading/storage-forms/rackspace-form/rackspace-form.component.ts","webpack:///src/common/admin/settings/uploading/storage-forms/rackspace-form/rackspace-form.component.html","webpack:///src/common/admin/settings/uploading/storage-forms/s3-form/s3-form.component.ts","webpack:///src/common/admin/settings/uploading/storage-forms/s3-form/s3-form.component.html","webpack:///src/common/admin/settings/uploading/storage-forms/digitalocean-form/digitalocean-form.component.ts","webpack:///src/common/admin/settings/uploading/storage-forms/digitalocean-form/digitalocean-form.component.html","webpack:///src/common/admin/settings/uploading/storage-forms/backblaze-form/backblaze-form.component.ts","webpack:///src/common/admin/settings/uploading/storage-forms/backblaze-form/backblaze-form.component.html","webpack:///src/common/admin/settings/uploading/uploading-settings.component.html","webpack:///src/common/admin/settings/uploading/uploading-settings.component.ts","webpack:///src/common/core/utils/flatten-array.ts","webpack:///src/common/admin/settings/recaptcha/recaptcha-settings.component.html","webpack:///src/common/admin/settings/recaptcha/recaptcha-settings.component.ts","webpack:///src/common/core/utils/SelectionModel.ts","webpack:///src/common/admin/roles/role.service.ts","webpack:///src/common/admin/users/select-roles-modal/select-roles-modal.component.html","webpack:///src/common/admin/users/select-roles-modal/select-roles-modal.component.ts","webpack:///src/common/admin/users/role-manager/role-manager.component.html","webpack:///src/common/admin/users/role-manager/role-manager.component.ts","webpack:///src/common/admin/permissions/select-permissions-modal/select-permissions-modal.component.html","webpack:///src/common/admin/permissions/select-permissions-modal/select-permissions-modal.component.ts","webpack:///src/common/core/utils/group-by.ts","webpack:///src/common/admin/permissions/permission-manager/permission-manager.component.html","webpack:///src/common/admin/permissions/permission-manager/permission-manager.component.ts","webpack:///src/common/admin/users/crupdate-user-modal/crupdate-user-modal.component.html","webpack:///src/common/admin/users/crupdate-user-modal/crupdate-user-modal.component.ts","webpack:///src/common/admin/users/user-index-filters.ts","webpack:///src/common/csv/csv-info-dialog/csv-export-info-dialog.component.ts","webpack:///src/common/csv/csv-info-dialog/csv-export-info-dialog.component.html","webpack:///src/common/csv/csv-exporter.service.ts","webpack:///src/common/admin/users/user-index.component.html","webpack:///src/common/admin/users/user-index.component.ts","webpack:///src/common/core/types/models/Role.ts","webpack:///src/common/admin/roles/crupdate-role-modal/crupdate-role-modal.component.html","webpack:///src/common/admin/roles/crupdate-role-modal/crupdate-role-modal.component.ts","webpack:///src/common/admin/roles/role-index.component.html","webpack:///src/common/admin/roles/role-index.component.ts","webpack:///src/common/admin/localizations/crupdate-localization-modal/crupdate-localization-modal.component.html","webpack:///src/common/admin/localizations/crupdate-localization-modal/crupdate-localization-modal.component.ts","webpack:///src/common/admin/localizations/new-line-modal/new-line-modal.component.ts","webpack:///src/common/admin/localizations/new-line-modal/new-line-modal.component.html","webpack:///src/common/core/ui/skeleton/skeleton-animations.ts","webpack:///src/common/admin/localizations/localization-index.component.html","webpack:///src/common/admin/localizations/localization-index.component.ts","webpack:///src/common/admin/file-entry-index/file-entry-index-filters.ts","webpack:///src/common/admin/file-entry-index/file-entry-index.component.html","webpack:///src/common/admin/file-entry-index/file-entry-index.component.ts","webpack:///src/common/core/ui/image-zoom/image-zoom-overlay/image-zoom-overlay.component.ts","webpack:///src/common/core/ui/image-zoom/image-zoom-overlay/image-zoom-overlay.component.html","webpack:///src/common/core/ui/image-zoom/image-zoom.component.ts","webpack:///src/common/core/ui/image-zoom/image-zoom.component.html","webpack:///src/common/admin/ads-page/ads-page.component.html","webpack:///src/common/admin/ads-page/ads-page.component.ts","webpack:///src/common/admin/billing/plans/crupdate-plan-modal/crupdate-plan-modal.component.html","webpack:///src/common/admin/billing/plans/crupdate-plan-modal/crupdate-plan-modal.component.ts","webpack:///src/common/admin/billing/plans/plan-index/plan-index-filters.ts","webpack:///src/common/admin/billing/plans/plan-index/plan-index.component.html","webpack:///src/common/admin/billing/plans/plan-index/plan-index.component.ts","webpack:///src/common/admin/billing/subscriptions/crupdate-subscription-modal/crupdate-subscription-modal.component.html","webpack:///src/common/admin/billing/subscriptions/crupdate-subscription-modal/crupdate-subscription-modal.component.ts","webpack:///src/common/admin/billing/subscriptions/subscription-index/subscription-index-filters.ts","webpack:///src/common/admin/billing/subscriptions/subscription-index/subscription-index.component.html","webpack:///src/common/admin/billing/subscriptions/subscription-index/subscription-index.component.ts","webpack:///src/common/admin/settings/gdpr-settings/gdpr-settings.component.html","webpack:///src/common/admin/settings/gdpr-settings/gdpr-settings.component.ts","webpack:///src/common/core/services/tags.service.ts","webpack:///src/common/admin/tag-index/crupdate-tag-modal/crupdate-tag-modal.component.html","webpack:///src/common/admin/tag-index/crupdate-tag-modal/crupdate-tag-modal.component.ts","webpack:///src/common/admin/tag-index/tag-index.component.html","webpack:///src/common/admin/tag-index/tag-index.component.ts","webpack:///src/common/admin/tag-index/tag-index-filters.ts","webpack:///src/common/pages/custom-pages-index/cusomt-page-filters.ts","webpack:///src/common/pages/custom-pages-index/custom-pages-index.component.html","webpack:///src/common/pages/custom-pages-index/custom-pages-index.component.ts","webpack:///src/common/pages/custom-pages-index/crupdate-custom-page/crupdate-custom-page.component.html","webpack:///src/common/pages/custom-pages-index/crupdate-custom-page/crupdate-custom-page.component.ts","webpack:///src/common/shared/form-controls/slug-control/bind-slug-to.ts","webpack:///src/common/admin/comments/comment-index-filters.ts","webpack:///src/common/admin/comments/comment-index.component.html","webpack:///src/common/admin/base-admin-routing.module.ts","webpack:///src/common/admin/comments/comment-index.component.ts","webpack:///src/common/auth/find-user-modal/find-user-modal.module.ts","webpack:///src/common/core/ui/confirm-modal/confirm-modal.module.ts","webpack:///src/common/shared/form-controls/slug-control/slug-control.module.ts","webpack:///src/common/admin/users/role-manager/role-manager.module.ts","webpack:///src/common/pages/custom-pages-index/custom-page-index.module.ts","webpack:///src/common/core/ui/between-date-input/between-date-input.module.ts","webpack:///src/common/core/ui/select-user-input/select-user-input.module.ts","webpack:///src/common/admin/global-search/global-search.module.ts","webpack:///src/common/admin/base-admin.module.ts","webpack:///src/app/admin/app-admin.module.ts","webpack:///src/app/backstage/requests/backstag-request.service.ts","webpack:///src/app/backstage/requests/backstage-request-type.ts","webpack:///src/common/core/ui/chips/chip-input/chip-input.component.html","webpack:///src/common/core/ui/chips/chip-input/chip-input.component.ts","webpack:///src/common/core/ui/format-pipes/title-case.pipe.ts","webpack:///src/common/core/ui/overlay-panel/positions/right-position.ts","webpack:///src/common/core/utils/scroll-invalid-input-into-view.ts","webpack:///src/common/core/ui/overlay-panel/positions/left-position.ts","webpack:///src/common/datatable/datatable-filters-panel/datatable-filters-panel.component.html","webpack:///src/common/datatable/datatable-filters-panel/datatable-filters-panel.component.ts","webpack:///src/common/datatable/datatable-header/datatable-header.component.html","webpack:///src/common/datatable/datatable-header/datatable-header.component.ts","webpack:///src/common/shared/billing/full-plan-name/full-plan-name.component.ts","webpack:///src/common/shared/billing/full-plan-name/full-plan-name.module.ts","webpack:///src/common/shared/billing/guards/billing-enabled-guard.service.ts","webpack:///src/common/shared/billing/plans.service.ts","webpack:///src/common/shared/sidenav/sidenav.component.ts","webpack:///src/common/shared/sidenav/sidenav.component.html","webpack:///src/common/shared/sidenav/sidenav.module.ts","webpack:///src/common/uploads/formatted-file-size.pipe.ts"],"sourcesContent":["import { InjectionToken, Directive, Input, EventEmitter, Optional, Inject, SkipSelf, ChangeDetectorRef, Output, NgModule } from '@angular/core';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nlet nextId = 0;\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_ACCORDION = new InjectionToken('CdkAccordion');\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    constructor() {\n        /** Emits when the state of the accordion changes */\n        this._stateChanges = new Subject();\n        /** Stream that emits true/false when openAll/closeAll is triggered. */\n        this._openCloseAllActions = new Subject();\n        /** A readonly id value to use for unique selection coordination. */\n        this.id = `cdk-accordion-${nextId++}`;\n        this._multi = false;\n    }\n    /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n    get multi() { return this._multi; }\n    set multi(multi) { this._multi = coerceBooleanProperty(multi); }\n    /** Opens all enabled accordion items in an accordion where multi is enabled. */\n    openAll() {\n        this._openCloseAll(true);\n    }\n    /** Closes all enabled accordion items in an accordion where multi is enabled. */\n    closeAll() {\n        this._openCloseAll(false);\n    }\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    _openCloseAll(expanded) {\n        if (this.multi) {\n            this._openCloseAllActions.next(expanded);\n        }\n    }\n}\nCdkAccordion.ɵfac = function CdkAccordion_Factory(t) { return new (t || CdkAccordion)(); };\nCdkAccordion.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkAccordion, selectors: [[\"cdk-accordion\"], [\"\", \"cdkAccordion\", \"\"]], inputs: { multi: \"multi\" }, exportAs: [\"cdkAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_ACCORDION, useExisting: CdkAccordion }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkAccordion.propDecorators = {\n    multi: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion, [cdkAccordion]',\n                exportAs: 'cdkAccordion',\n                providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }]\n            }]\n    }], function () { return []; }, { multi: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion item. */\nlet nextId$1 = 0;\nconst ɵ0 = undefined;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /** Subscription to openAll/closeAll events. */\n        this._openCloseAllSubscription = Subscription.EMPTY;\n        /** Event emitted every time the AccordionItem is closed. */\n        this.closed = new EventEmitter();\n        /** Event emitted every time the AccordionItem is opened. */\n        this.opened = new EventEmitter();\n        /** Event emitted when the AccordionItem is destroyed. */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emits whenever the expanded state of the accordion changes.\n         * Primarily used to facilitate two-way binding.\n         * @docs-private\n         */\n        this.expandedChange = new EventEmitter();\n        /** The unique AccordionItem id. */\n        this.id = `cdk-accordion-child-${nextId$1++}`;\n        this._expanded = false;\n        this._disabled = false;\n        /** Unregister function for _expansionDispatcher. */\n        this._removeUniqueSelectionListener = () => { };\n        this._removeUniqueSelectionListener =\n            _expansionDispatcher.listen((id, accordionId) => {\n                if (this.accordion && !this.accordion.multi &&\n                    this.accordion.id === accordionId && this.id !== id) {\n                    this.expanded = false;\n                }\n            });\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /** Whether the AccordionItem is expanded. */\n    get expanded() { return this._expanded; }\n    set expanded(expanded) {\n        expanded = coerceBooleanProperty(expanded);\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the AccordionItem is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(disabled) { this._disabled = coerceBooleanProperty(disabled); }\n    /** Emits an event for the accordion item being destroyed. */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /** Toggles the expanded state of the accordion item. */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /** Sets the expanded state of the accordion item to false. */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /** Sets the expanded state of the accordion item to true. */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe(expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        });\n    }\n}\nCdkAccordionItem.ɵfac = function CdkAccordionItem_Factory(t) { return new (t || CdkAccordionItem)(ɵngcc0.ɵɵdirectiveInject(CDK_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher)); };\nCdkAccordionItem.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkAccordionItem, selectors: [[\"cdk-accordion-item\"], [\"\", \"cdkAccordionItem\", \"\"]], inputs: { expanded: \"expanded\", disabled: \"disabled\" }, outputs: { closed: \"closed\", opened: \"opened\", destroyed: \"destroyed\", expandedChange: \"expandedChange\" }, exportAs: [\"cdkAccordionItem\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n            // registering to the same accordion.\n            { provide: CDK_ACCORDION, useValue: ɵ0 },\n        ])] });\nCdkAccordionItem.ctorParameters = () => [\n    { type: CdkAccordion, decorators: [{ type: Optional }, { type: Inject, args: [CDK_ACCORDION,] }, { type: SkipSelf }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher }\n];\nCdkAccordionItem.propDecorators = {\n    closed: [{ type: Output }],\n    opened: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    expandedChange: [{ type: Output }],\n    expanded: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordionItem, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                exportAs: 'cdkAccordionItem',\n                providers: [\n                    // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n                    // registering to the same accordion.\n                    { provide: CDK_ACCORDION, useValue: ɵ0 },\n                ]\n            }]\n    }], function () { return [{ type: CdkAccordion, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_ACCORDION]\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }]; }, { closed: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], expandedChange: [{\n            type: Output\n        }], expanded: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkAccordionModule {\n}\nCdkAccordionModule.ɵfac = function CdkAccordionModule_Factory(t) { return new (t || CdkAccordionModule)(); };\nCdkAccordionModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CdkAccordionModule });\nCdkAccordionModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordionModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkAccordion, CdkAccordionItem],\n                declarations: [CdkAccordion, CdkAccordionItem]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkAccordionModule, { declarations: [CdkAccordion, CdkAccordionItem], exports: [CdkAccordion, CdkAccordionItem] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkAccordion, CdkAccordionItem, CdkAccordionModule, CDK_ACCORDION as ɵangular_material_src_cdk_accordion_accordion_a };\n\n","import { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, SkipSelf, Inject, ChangeDetectorRef, ViewContainerRef, Input, Output, ContentChild, ViewChild, Host, ElementRef, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { distinctUntilChanged, startWith, filter, take } from 'rxjs/operators';\nimport { ENTER, hasModifierKey, SPACE } from '@angular/cdk/keycodes';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\n\nconst _c0 = [\"body\"];\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) { }\nconst _c1 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nconst _c2 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\nfunction MatExpansionPanelHeader_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@indicatorRotate\", ctx_r0._getExpandedState());\n} }\nconst _c3 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nconst _c4 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time and timing curve for expansion panel animations. */\n// Note: Keep this in sync with the Sass variable for the panel header animation.\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * @docs-private\n */\nconst matExpansionAnimations = {\n    /** Animation that rotates the indicator arrow. */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /** Animation that expands and collapses the panel content. */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n        state('expanded', style({ height: '*', visibility: 'visible' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatExpansionPanelContent.ɵfac = function MatExpansionPanelContent_Factory(t) { return new (t || MatExpansionPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatExpansionPanelContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelContent, selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]] });\nMatExpansionPanelContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matExpansionPanelContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter for generating unique element ids. */\nlet uniqueId = 0;\n/**\n * Injection token that can be used to configure the defalt\n * options for the expansion panel component.\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\nconst ɵ0 = undefined;\n/**\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._animationMode = _animationMode;\n        this._hideToggle = false;\n        /** An event emitted after the body's expansion animation happens. */\n        this.afterExpand = new EventEmitter();\n        /** An event emitted after the body's collapse animation happens. */\n        this.afterCollapse = new EventEmitter();\n        /** Stream that emits for changes in `@Input` properties. */\n        this._inputChanges = new Subject();\n        /** ID for the associated header element. Used for a11y labelling. */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        /** Stream of body animation done events. */\n        this._bodyAnimationDone = new Subject();\n        this.accordion = accordion;\n        this._document = _document;\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._bodyAnimationDone.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            if (event.fromState !== 'void') {\n                if (event.toState === 'expanded') {\n                    this.afterExpand.emit();\n                }\n                else if (event.toState === 'collapsed') {\n                    this.afterCollapse.emit();\n                }\n            }\n        });\n        if (defaultOptions) {\n            this.hideToggle = defaultOptions.hideToggle;\n        }\n    }\n    /** Whether the toggle indicator should be hidden. */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    set hideToggle(value) {\n        this._hideToggle = coerceBooleanProperty(value);\n    }\n    /** The position of the expansion indicator. */\n    get togglePosition() {\n        return this._togglePosition || (this.accordion && this.accordion.togglePosition);\n    }\n    set togglePosition(value) {\n        this._togglePosition = value;\n    }\n    /** Determines whether the expansion panel should have spacing between it and its siblings. */\n    _hasSpacing() {\n        if (this.accordion) {\n            return this.expanded && this.accordion.displayMode === 'default';\n        }\n        return false;\n    }\n    /** Gets the expanded state string. */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /** Toggles the expanded state of the expansion panel. */\n    toggle() {\n        this.expanded = !this.expanded;\n    }\n    /** Sets the expanded state of the expansion panel to false. */\n    close() {\n        this.expanded = false;\n    }\n    /** Sets the expanded state of the expansion panel to true. */\n    open() {\n        this.expanded = true;\n    }\n    ngAfterContentInit() {\n        if (this._lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened.pipe(startWith(null), filter(() => this.expanded && !this._portal), take(1)).subscribe(() => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            });\n        }\n    }\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._bodyAnimationDone.complete();\n        this._inputChanges.complete();\n    }\n    /** Checks whether the expansion panel's content contains the currently-focused element. */\n    _containsFocus() {\n        if (this._body) {\n            const focusedElement = this._document.activeElement;\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n}\nMatExpansionPanel.ɵfac = function MatExpansionPanel_Factory(t) { return new (t || MatExpansionPanel)(ɵngcc0.ɵɵdirectiveInject(MAT_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8)); };\nMatExpansionPanel.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanel, selectors: [[\"mat-expansion-panel\"]], contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    } }, viewQuery: function MatExpansionPanel_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._body = _t.first);\n    } }, hostAttrs: [1, \"mat-expansion-panel\"], hostVars: 6, hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n    } }, inputs: { disabled: \"disabled\", expanded: \"expanded\", hideToggle: \"hideToggle\", togglePosition: \"togglePosition\" }, outputs: { opened: \"opened\", closed: \"closed\", expandedChange: \"expandedChange\", afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, exportAs: [\"matExpansionPanel\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n            // to the same accordion.\n            { provide: MAT_ACCORDION, useValue: ɵ0 },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c2, decls: 7, vars: 4, consts: [[\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [\"body\", \"\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]], template: function MatExpansionPanel_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) { return ctx._bodyAnimationDone.next($event); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, data: { animation: [matExpansionAnimations.bodyExpansion] }, changeDetection: 0 });\nMatExpansionPanel.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [MAT_ACCORDION,] }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanel.propDecorators = {\n    hideToggle: [{ type: Input }],\n    togglePosition: [{ type: Input }],\n    afterExpand: [{ type: Output }],\n    afterCollapse: [{ type: Output }],\n    _lazyContent: [{ type: ContentChild, args: [MatExpansionPanelContent,] }],\n    _body: [{ type: ViewChild, args: ['body',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanel, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel',\n                exportAs: 'matExpansionPanel',\n                template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled', 'expanded'],\n                outputs: ['opened', 'closed', 'expandedChange'],\n                animations: [matExpansionAnimations.bodyExpansion],\n                providers: [\n                    // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                    // to the same accordion.\n                    { provide: MAT_ACCORDION, useValue: ɵ0 },\n                ],\n                host: {\n                    'class': 'mat-expansion-panel',\n                    '[class.mat-expanded]': 'expanded',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n                },\n                styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [MAT_ACCORDION]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }]; }, { afterExpand: [{\n            type: Output\n        }], afterCollapse: [{\n            type: Output\n        }], hideToggle: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], _lazyContent: [{\n            type: ContentChild,\n            args: [MatExpansionPanelContent]\n        }], _body: [{\n            type: ViewChild,\n            args: ['body']\n        }] }); })();\n/**\n * Actions of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelActionRow {\n}\nMatExpansionPanelActionRow.ɵfac = function MatExpansionPanelActionRow_Factory(t) { return new (t || MatExpansionPanelActionRow)(); };\nMatExpansionPanelActionRow.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelActionRow, selectors: [[\"mat-action-row\"]], hostAttrs: [1, \"mat-action-row\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-action-row',\n                host: {\n                    class: 'mat-action-row'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Header element of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader {\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions, _animationMode) {\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        const accordionHideToggleChange = panel.accordion ?\n            panel.accordion._stateChanges.pipe(filter(changes => !!(changes['hideToggle'] || changes['togglePosition']))) :\n            EMPTY;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription =\n            merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => {\n                return !!(changes['hideToggle'] ||\n                    changes['disabled'] ||\n                    changes['togglePosition']);\n            })))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter(() => panel._containsFocus()))\n            .subscribe(() => _focusMonitor.focusVia(_element, 'program'));\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * @docs-private\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /** Toggles the expanded state of the panel. */\n    _toggle() {\n        if (!this.disabled) {\n            this.panel.toggle();\n        }\n    }\n    /** Gets whether the panel is expanded. */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /** Gets the expanded state string of the panel. */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /** Gets the panel id. */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /** Gets the toggle position for the header. */\n    _getTogglePosition() {\n        return this.panel.togglePosition;\n    }\n    /** Gets whether the expand indicator should be shown. */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Gets the current height of the header. Null if no custom height has been\n     * specified, and if the default height from the stylesheet should be used.\n     */\n    _getHeaderHeight() {\n        const isExpanded = this._isExpanded();\n        if (isExpanded && this.expandedHeight) {\n            return this.expandedHeight;\n        }\n        else if (!isExpanded && this.collapsedHeight) {\n            return this.collapsedHeight;\n        }\n        return null;\n    }\n    /** Handle keydown event calling to toggle() if appropriate. */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * @param origin Origin of the action that triggered the focus.\n     * @docs-private\n     */\n    focus(origin = 'program', options) {\n        this._focusMonitor.focusVia(this._element, origin, options);\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._element).subscribe(origin => {\n            if (origin && this.panel.accordion) {\n                this.panel.accordion._handleHeaderFocus(this);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n}\nMatExpansionPanelHeader.ɵfac = function MatExpansionPanelHeader_Factory(t) { return new (t || MatExpansionPanelHeader)(ɵngcc0.ɵɵdirectiveInject(MatExpansionPanel, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatExpansionPanelHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanelHeader, selectors: [[\"mat-expansion-panel-header\"]], hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\", \"mat-focus-indicator\"], hostVars: 15, hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() { return ctx._toggle(); })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.disabled ? -1 : 0)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n        ɵngcc0.ɵɵstyleProp(\"height\", ctx._getHeaderHeight());\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded())(\"mat-expansion-toggle-indicator-after\", ctx._getTogglePosition() === \"after\")(\"mat-expansion-toggle-indicator-before\", ctx._getTogglePosition() === \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\" }, ngContentSelectors: _c4, decls: 5, vars: 1, consts: [[1, \"mat-content\"], [\"class\", \"mat-expansion-indicator\", 4, \"ngIf\"], [1, \"mat-expansion-indicator\"]], template: function MatExpansionPanelHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, MatExpansionPanelHeader_span_4_Template, 1, 1, \"span\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._showToggle());\n    } }, directives: [ɵngcc4.NgIf], styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\\n\"], encapsulation: 2, data: { animation: [\n            matExpansionAnimations.indicatorRotate,\n        ] }, changeDetection: 0 });\nMatExpansionPanelHeader.ctorParameters = () => [\n    { type: MatExpansionPanel, decorators: [{ type: Host }] },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatExpansionPanelHeader.propDecorators = {\n    expandedHeight: [{ type: Input }],\n    collapsedHeight: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel-header',\n                template: \"<span class=\\\"mat-content\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"mat-expansion-indicator\\\"></span>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [\n                    matExpansionAnimations.indicatorRotate,\n                ],\n                host: {\n                    'class': 'mat-expansion-panel-header mat-focus-indicator',\n                    'role': 'button',\n                    '[attr.id]': 'panel._headerId',\n                    '[attr.tabindex]': 'disabled ? -1 : 0',\n                    '[attr.aria-controls]': '_getPanelId()',\n                    '[attr.aria-expanded]': '_isExpanded()',\n                    '[attr.aria-disabled]': 'panel.disabled',\n                    '[class.mat-expanded]': '_isExpanded()',\n                    '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n                    '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[style.height]': '_getHeaderHeight()',\n                    '(click)': '_toggle()',\n                    '(keydown)': '_keydown($event)'\n                },\n                styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\\n\"]\n            }]\n    }], function () { return [{ type: MatExpansionPanel, decorators: [{\n                type: Host\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { expandedHeight: [{\n            type: Input\n        }], collapsedHeight: [{\n            type: Input\n        }] }); })();\n/**\n * Description element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelDescription {\n}\nMatExpansionPanelDescription.ɵfac = function MatExpansionPanelDescription_Factory(t) { return new (t || MatExpansionPanelDescription)(); };\nMatExpansionPanelDescription.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelDescription, selectors: [[\"mat-panel-description\"]], hostAttrs: [1, \"mat-expansion-panel-header-description\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-description',\n                host: {\n                    class: 'mat-expansion-panel-header-description'\n                }\n            }]\n    }], null, null); })();\n/**\n * Title element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelTitle {\n}\nMatExpansionPanelTitle.ɵfac = function MatExpansionPanelTitle_Factory(t) { return new (t || MatExpansionPanelTitle)(); };\nMatExpansionPanelTitle.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelTitle, selectors: [[\"mat-panel-title\"]], hostAttrs: [1, \"mat-expansion-panel-header-title\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-title',\n                host: {\n                    class: 'mat-expansion-panel-header-title'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        /** Headers belonging to this accordion. */\n        this._ownHeaders = new QueryList();\n        this._hideToggle = false;\n        /**\n         * Display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n        /** The position of the expansion indicator. */\n        this.togglePosition = 'after';\n    }\n    /** Whether the expansion indicator should be hidden. */\n    get hideToggle() { return this._hideToggle; }\n    set hideToggle(show) { this._hideToggle = coerceBooleanProperty(show); }\n    ngAfterContentInit() {\n        this._headers.changes\n            .pipe(startWith(this._headers))\n            .subscribe((headers) => {\n            this._ownHeaders.reset(headers.filter(header => header.panel.accordion === this));\n            this._ownHeaders.notifyOnChanges();\n        });\n        this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap().withHomeAndEnd();\n    }\n    /** Handles keyboard events coming in from the panel headers. */\n    _handleHeaderKeydown(event) {\n        this._keyManager.onKeydown(event);\n    }\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n}\nMatAccordion.ɵfac = /*@__PURE__*/ function () { let ɵMatAccordion_BaseFactory; return function MatAccordion_Factory(t) { return (ɵMatAccordion_BaseFactory || (ɵMatAccordion_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatAccordion)))(t || MatAccordion); }; }();\nMatAccordion.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatAccordion, selectors: [[\"mat-accordion\"]], contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headers = _t);\n    } }, hostAttrs: [1, \"mat-accordion\"], hostVars: 2, hostBindings: function MatAccordion_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-accordion-multi\", ctx.multi);\n    } }, inputs: { multi: \"multi\", displayMode: \"displayMode\", togglePosition: \"togglePosition\", hideToggle: \"hideToggle\" }, exportAs: [\"matAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_ACCORDION,\n                useExisting: MatAccordion\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatAccordion.propDecorators = {\n    _headers: [{ type: ContentChildren, args: [MatExpansionPanelHeader, { descendants: true },] }],\n    hideToggle: [{ type: Input }],\n    displayMode: [{ type: Input }],\n    togglePosition: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-accordion',\n                exportAs: 'matAccordion',\n                inputs: ['multi'],\n                providers: [{\n                        provide: MAT_ACCORDION,\n                        useExisting: MatAccordion\n                    }],\n                host: {\n                    class: 'mat-accordion',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if multiple panel support is enabled.\n                    '[class.mat-accordion-multi]': 'this.multi'\n                }\n            }]\n    }], null, { displayMode: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], hideToggle: [{\n            type: Input\n        }], _headers: [{\n            type: ContentChildren,\n            args: [MatExpansionPanelHeader, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatExpansionModule {\n}\nMatExpansionModule.ɵfac = function MatExpansionModule_Factory(t) { return new (t || MatExpansionModule)(); };\nMatExpansionModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatExpansionModule });\nMatExpansionModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, CdkAccordionModule, PortalModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, CdkAccordionModule, PortalModule],\n                exports: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ],\n                declarations: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatExpansionModule, { declarations: function () { return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]; }, imports: function () { return [CommonModule, CdkAccordionModule, PortalModule]; }, exports: function () { return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations, ɵ0 };\n\n","import { InjectionToken, forwardRef, EventEmitter, Directive, ChangeDetectorRef, Output, Input, ContentChildren, ElementRef, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, Attribute, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/collections';\nimport * as ɵngcc3 from '@angular/material/core';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nconst MAT_RADIO_DEFAULT_OPTIONS = new InjectionToken('mat-radio-default-options', {\n    providedIn: 'root',\n    factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY\n});\nfunction MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent'\n    };\n}\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nconst MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatRadioGroup),\n    multi: true\n};\n/** Change event object emitted by MatRadio and MatRadioGroup. */\nclass MatRadioChange {\n    constructor(\n    /** The MatRadioButton that emits the change event. */\n    source, \n    /** The value of the MatRadioButton. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * Injection token that can be used to inject instances of `MatRadioGroup`. It serves as\n * alternative token to the actual `MatRadioGroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_RADIO_GROUP = new InjectionToken('MatRadioGroup');\n/**\n * Base class with all of the `MatRadioGroup` functionality.\n * @docs-private\n */\nclass _MatRadioGroupBase {\n    constructor(_changeDetector) {\n        this._changeDetector = _changeDetector;\n        /** Selected value for the radio group. */\n        this._value = null;\n        /** The HTML name attribute applied to radio buttons in this group. */\n        this._name = `mat-radio-group-${nextUniqueId++}`;\n        /** The currently selected radio button. Should match value. */\n        this._selected = null;\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n        this._labelPosition = 'after';\n        /** Whether the radio group is disabled. */\n        this._disabled = false;\n        /** Whether the radio group is required. */\n        this._required = false;\n        /** The method to be called in order to update ngModel */\n        this._controlValueAccessorChangeFn = () => { };\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         * @docs-private\n         */\n        this.onTouched = () => { };\n        /**\n         * Event emitted when the group value changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * a radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n    }\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    get name() { return this._name; }\n    set name(value) {\n        this._name = value;\n        this._updateRadioButtonNames();\n    }\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this._markRadiosForCheck();\n    }\n    /**\n     * Value for the radio-group. Should equal the value of the selected radio button if there is\n     * a corresponding radio button with a matching value. If there is not such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    get value() { return this._value; }\n    set value(newValue) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n            this._updateSelectedRadioFromValue();\n            this._checkSelectedRadioButton();\n        }\n    }\n    _checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n    /**\n     * The currently selected radio button. If set to a new radio button, the radio group value\n     * will be updated to match the new selected button.\n     */\n    get selected() { return this._selected; }\n    set selected(selected) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this._checkSelectedRadioButton();\n    }\n    /** Whether the radio group is disabled */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /** Whether the radio group is required */\n    get required() { return this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MatRadioGroup.\n        this._isInitialized = true;\n    }\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    _touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n    _updateRadioButtonNames() {\n        if (this._radios) {\n            this._radios.forEach(radio => {\n                radio.name = this.name;\n                radio._markForCheck();\n            });\n        }\n    }\n    /** Updates the `selected` radio button from the internal _value state. */\n    _updateSelectedRadioFromValue() {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n        if (this._radios && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach(radio => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent() {\n        if (this._isInitialized) {\n            this.change.emit(new MatRadioChange(this._selected, this._value));\n        }\n    }\n    _markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach(radio => radio._markForCheck());\n        }\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n}\n_MatRadioGroupBase.ɵfac = function _MatRadioGroupBase_Factory(t) { return new (t || _MatRadioGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatRadioGroupBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatRadioGroupBase, inputs: { name: \"name\", labelPosition: \"labelPosition\", value: \"value\", selected: \"selected\", disabled: \"disabled\", required: \"required\", color: \"color\" }, outputs: { change: \"change\" } });\n_MatRadioGroupBase.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\n_MatRadioGroupBase.propDecorators = {\n    change: [{ type: Output }],\n    color: [{ type: Input }],\n    name: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    value: [{ type: Input }],\n    selected: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatRadioGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { change: [{\n            type: Output\n        }], name: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nclass MatRadioGroup extends _MatRadioGroupBase {\n}\nMatRadioGroup.ɵfac = /*@__PURE__*/ function () { let ɵMatRadioGroup_BaseFactory; return function MatRadioGroup_Factory(t) { return (ɵMatRadioGroup_BaseFactory || (ɵMatRadioGroup_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRadioGroup)))(t || MatRadioGroup); }; }();\nMatRadioGroup.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatRadioGroup, selectors: [[\"mat-radio-group\"]], contentQueries: function MatRadioGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatRadioButton, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._radios = _t);\n    } }, hostAttrs: [\"role\", \"radiogroup\", 1, \"mat-radio-group\"], exportAs: [\"matRadioGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n            { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatRadioGroup.propDecorators = {\n    _radios: [{ type: ContentChildren, args: [forwardRef(() => MatRadioButton), { descendants: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRadioGroup, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-radio-group',\n                exportAs: 'matRadioGroup',\n                providers: [\n                    MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n                    { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n                ],\n                host: {\n                    'role': 'radiogroup',\n                    'class': 'mat-radio-group'\n                }\n            }]\n    }], null, { _radios: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatRadioButton), { descendants: true }]\n        }] }); })();\n// Boilerplate for applying mixins to MatRadioButton.\n/** @docs-private */\nclass MatRadioButtonBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n// As per Material design specifications the selection control radio should use the accent color\n// palette by default. https://material.io/guidelines/components/selection-controls.html\nconst _MatRadioButtonMixinBase = mixinDisableRipple(mixinTabIndex(MatRadioButtonBase));\n/**\n * Base class with all of the `MatRadioButton` functionality.\n * @docs-private\n */\nclass _MatRadioButtonBase extends _MatRadioButtonMixinBase {\n    constructor(radioGroup, elementRef, _changeDetector, _focusMonitor, _radioDispatcher, _animationMode, _providerOverride, tabIndex) {\n        super(elementRef);\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._radioDispatcher = _radioDispatcher;\n        this._animationMode = _animationMode;\n        this._providerOverride = _providerOverride;\n        this._uniqueId = `mat-radio-${++nextUniqueId}`;\n        /** The unique ID for the radio button. */\n        this.id = this._uniqueId;\n        /**\n         * Event emitted when the checked state of this radio button changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * the radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n        /** Whether this radio is checked. */\n        this._checked = false;\n        /** Value assigned to this radio. */\n        this._value = null;\n        /** Unregister function for _radioDispatcher */\n        this._removeUniqueSelectionListener = () => { };\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        this.radioGroup = radioGroup;\n        if (tabIndex) {\n            this.tabIndex = coerceNumberProperty(tabIndex, 0);\n        }\n        this._removeUniqueSelectionListener =\n            _radioDispatcher.listen((id, name) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n    /** Whether this radio button is checked. */\n    get checked() { return this._checked; }\n    set checked(value) {\n        const newCheckedState = coerceBooleanProperty(value);\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            }\n            else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** The value of this radio button. */\n    get value() { return this._value; }\n    set value(value) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup !== null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    /** Whether the radio button is disabled. */\n    get disabled() {\n        return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\n    }\n    set disabled(value) {\n        this._setDisabled(coerceBooleanProperty(value));\n    }\n    /** Whether the radio button is required. */\n    get required() {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Theme color of the radio button. */\n    get color() {\n        return this._color ||\n            (this.radioGroup && this.radioGroup.color) ||\n            this._providerOverride && this._providerOverride.color || 'accent';\n    }\n    set color(newValue) { this._color = newValue; }\n    /** ID of the native input element inside `<mat-radio-button>` */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /** Focuses the radio button. */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(focusOrigin => {\n            if (!focusOrigin && this.radioGroup) {\n                this.radioGroup._touch();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._removeUniqueSelectionListener();\n    }\n    /** Dispatch change event with current value. */\n    _emitChangeEvent() {\n        this.change.emit(new MatRadioChange(this, this._value));\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /**\n     * Triggered when the radio button received a click or the input recognized any change.\n     * Clicking on a label element, will trigger a change event on the associated input.\n     */\n    _onInputChange(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this._emitChangeEvent();\n        if (this.radioGroup) {\n            this.radioGroup._controlValueAccessorChangeFn(this.value);\n            if (groupValueChanged) {\n                this.radioGroup._emitChangeEvent();\n            }\n        }\n    }\n    /** Sets the disabled state and marks for check if a change occurred. */\n    _setDisabled(value) {\n        if (this._disabled !== value) {\n            this._disabled = value;\n            this._changeDetector.markForCheck();\n        }\n    }\n}\n_MatRadioButtonBase.ɵfac = function _MatRadioButtonBase_Factory(t) { return new (t || _MatRadioButtonBase)(ɵngcc0.ɵɵdirectiveInject(_MatRadioGroupBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(String), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(String)); };\n_MatRadioButtonBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatRadioButtonBase, viewQuery: function _MatRadioButtonBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, inputs: { id: \"id\", checked: \"checked\", value: \"value\", labelPosition: \"labelPosition\", disabled: \"disabled\", required: \"required\", color: \"color\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { change: \"change\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatRadioButtonBase.ctorParameters = () => [\n    { type: _MatRadioGroupBase },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: UniqueSelectionDispatcher },\n    { type: String },\n    { type: undefined },\n    { type: String }\n];\n_MatRadioButtonBase.propDecorators = {\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    checked: [{ type: Input }],\n    value: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }],\n    color: [{ type: Input }],\n    change: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatRadioButtonBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatRadioGroupBase }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String }, { type: undefined }, { type: String }]; }, { id: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], checked: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n/**\n * A Material design radio-button. Typically placed inside of `<mat-radio-group>` elements.\n */\nclass MatRadioButton extends _MatRadioButtonBase {\n    constructor(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride, tabIndex) {\n        super(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride, tabIndex);\n    }\n}\nMatRadioButton.ɵfac = function MatRadioButton_Factory(t) { return new (t || MatRadioButton)(ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_GROUP, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatRadioButton.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatRadioButton, selectors: [[\"mat-radio-button\"]], hostAttrs: [1, \"mat-radio-button\"], hostVars: 17, hostBindings: function MatRadioButton_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatRadioButton_focus_HostBindingHandler() { return ctx._inputElement.nativeElement.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", -1)(\"id\", ctx.id)(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-checked\", ctx.checked)(\"mat-radio-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matRadioButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 13, vars: 19, consts: [[1, \"mat-radio-label\"], [\"label\", \"\"], [1, \"mat-radio-container\"], [1, \"mat-radio-outer-circle\"], [1, \"mat-radio-inner-circle\"], [\"type\", \"radio\", 1, \"mat-radio-input\", \"cdk-visually-hidden\", 3, \"id\", \"checked\", \"disabled\", \"tabIndex\", \"required\", \"change\", \"click\"], [\"input\", \"\"], [\"mat-ripple\", \"\", 1, \"mat-radio-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-radio-persistent-ripple\"], [1, \"mat-radio-label-content\"], [2, \"display\", \"none\"]], template: function MatRadioButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3);\n        ɵngcc0.ɵɵelement(4, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"input\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"change\", function MatRadioButton_Template_input_change_5_listener($event) { return ctx._onInputChange($event); })(\"click\", function MatRadioButton_Template_input_click_5_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"span\", 10);\n        ɵngcc0.ɵɵtext(11, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"value\", ctx.value)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(18, _c1));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-label-before\", ctx.labelPosition == \"before\");\n    } }, directives: [ɵngcc3.MatRipple], styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatRadioButton.ctorParameters = () => [\n    { type: MatRadioGroup, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_GROUP,] }] },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: UniqueSelectionDispatcher },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRadioButton, [{\n        type: Component,\n        args: [{\n                selector: 'mat-radio-button',\n                template: \"<!-- TODO(jelbourn): render the radio on either side of the content -->\\n<!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. -->\\n<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label>\\n  <!-- The actual 'radio' part of the control. -->\\n  <div class=\\\"mat-radio-container\\\">\\n    <div class=\\\"mat-radio-outer-circle\\\"></div>\\n    <div class=\\\"mat-radio-inner-circle\\\"></div>\\n    <input #input class=\\\"mat-radio-input cdk-visually-hidden\\\" type=\\\"radio\\\"\\n        [id]=\\\"inputId\\\"\\n        [checked]=\\\"checked\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [tabIndex]=\\\"tabIndex\\\"\\n        [attr.name]=\\\"name\\\"\\n        [attr.value]=\\\"value\\\"\\n        [required]=\\\"required\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        (change)=\\\"_onInputChange($event)\\\"\\n        (click)=\\\"_onInputClick($event)\\\">\\n\\n    <!-- The ripple comes after the input so that we can target it with a CSS\\n         sibling selector when the input is focused. -->\\n    <div mat-ripple class=\\\"mat-radio-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n      <div class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></div>\\n    </div>\\n  </div>\\n\\n  <!-- The label content for radio control. -->\\n  <div class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </div>\\n</label>\\n\",\n                inputs: ['disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRadioButton',\n                host: {\n                    'class': 'mat-radio-button',\n                    '[class.mat-radio-checked]': 'checked',\n                    '[class.mat-radio-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    // Needs to be -1 so the `focus` event still fires.\n                    '[attr.tabindex]': '-1',\n                    '[attr.id]': 'id',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[attr.aria-describedby]': 'null',\n                    // Note: under normal conditions focus shouldn't land on this element, however it may be\n                    // programmatically set, for example inside of a focus trap, in this case we want to forward\n                    // the focus to the native element.\n                    '(focus)': '_inputElement.nativeElement.focus()'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"]\n            }]\n    }], function () { return [{ type: MatRadioGroup, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RADIO_GROUP]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RADIO_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRadioModule {\n}\nMatRadioModule.ɵfac = function MatRadioModule_Factory(t) { return new (t || MatRadioModule)(); };\nMatRadioModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatRadioModule });\nMatRadioModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[MatRippleModule, MatCommonModule], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRadioModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, MatCommonModule],\n                exports: [MatRadioGroup, MatRadioButton, MatCommonModule],\n                declarations: [MatRadioGroup, MatRadioButton]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRadioModule, { declarations: function () { return [MatRadioGroup, MatRadioButton]; }, imports: function () { return [MatRippleModule, MatCommonModule]; }, exports: function () { return [MatRadioGroup, MatRadioButton, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_RADIO_DEFAULT_OPTIONS, MAT_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_GROUP, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioButton, MatRadioChange, MatRadioGroup, MatRadioModule, _MatRadioButtonBase, _MatRadioGroupBase };\n\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","import { Injectable } from '@angular/core';\nimport { Router, Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport {AppHttpClient} from '../../core/http/app-http-client.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingsResolve implements Resolve<{client: Object, server: Object}> {\n    constructor(private http: AppHttpClient, private router: Router) {}\n\n    resolve(route: ActivatedRouteSnapshot): Promise<{client: Object, server: Object}> {\n        return this.http.get('settings').toPromise().then(response => {\n            return response;\n        }, () => {\n            this.router.navigate(['/admin']);\n            return false;\n        }) as any;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {SettingsPayload} from '../../core/config/settings-payload';\nimport {BehaviorSubject} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingsState {\n    loading$ = new BehaviorSubject<boolean>(false);\n    errors$ = new BehaviorSubject<{[key: string]: string}>({});\n    initial: SettingsPayload = {server: {}, client: {}};\n    server: {[key: string]: string|number} = {};\n    client: {[key: string]: string|number} = {};\n\n    public getModified() {\n        return {\n            server: this.diffSettingObjects('server'),\n            client: this.diffSettingObjects('client'),\n        } as SettingsPayload;\n    }\n\n    private diffSettingObjects(name: string): Object {\n        const changed = {};\n\n        for (const key in this[name]) {\n            if (this[name][key] !== this.initial[name][key]) {\n                changed[key] = this[name][key];\n            }\n        }\n\n        return changed;\n    }\n\n    public setAll(settings: SettingsPayload) {\n        this.initial = settings;\n        this.client = {...settings.client};\n        this.server = {...settings.server};\n    }\n\n    public reset() {\n        this.server = {...this.initial.server};\n        this.client = {...this.initial.client};\n    }\n\n    public updateInitial(changedSettings: SettingsPayload) {\n        this.initial = {\n            client: {...this.initial.client, ...changedSettings.client},\n            server: {...this.initial.server, ...changedSettings.server},\n        };\n    }\n}\n","import { normalizePassiveListenerOptions, Platform, PlatformModule } from '@angular/cdk/platform';\nimport { ɵɵdefineInjectable, ɵɵinject, NgZone, Injectable, EventEmitter, Directive, ElementRef, Output, Optional, Inject, Input, HostListener, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options to pass to the animationstart listener. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject;\n        }\n        const result = new Subject();\n        const cssClass = 'cdk-text-field-autofilled';\n        const listener = ((event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: true }));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: false }));\n            }\n        });\n        this._ngZone.runOutsideAngular(() => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        });\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            }\n        });\n        return result;\n    }\n    stopMonitoring(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    ngOnDestroy() {\n        this._monitoredElements.forEach((_info, element) => this.stopMonitoring(element));\n    }\n}\nAutofillMonitor.ɵfac = function AutofillMonitor_Factory(t) { return new (t || AutofillMonitor)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nAutofillMonitor.ɵprov = ɵɵdefineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\nAutofillMonitor.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AutofillMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\n/** A directive that can be used to monitor the autofill state of an input. */\nclass CdkAutofill {\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /** Emits when the autofill state of the element changes. */\n        this.cdkAutofill = new EventEmitter();\n    }\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe(event => this.cdkAutofill.emit(event));\n    }\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = function CdkAutofill_Factory(t) { return new (t || CdkAutofill)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(AutofillMonitor)); };\nCdkAutofill.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkAutofill, selectors: [[\"\", \"cdkAutofill\", \"\"]], outputs: { cdkAutofill: \"cdkAutofill\" } });\nCdkAutofill.ctorParameters = () => [\n    { type: ElementRef },\n    { type: AutofillMonitor }\n];\nCdkAutofill.propDecorators = {\n    cdkAutofill: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAutofill, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAutofill]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: AutofillMonitor }]; }, { cdkAutofill: [{\n            type: Output\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Directive to automatically resize a textarea to fit its content. */\nclass CdkTextareaAutosize {\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._document = document;\n        this._textareaElement = this._elementRef.nativeElement;\n        this._measuringClass = _platform.FIREFOX ?\n            'cdk-textarea-autosize-measuring-firefox' :\n            'cdk-textarea-autosize-measuring';\n    }\n    /** Minimum amount of rows in the textarea. */\n    get minRows() { return this._minRows; }\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /** Maximum amount of rows in the textarea. */\n    get maxRows() { return this._maxRows; }\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /** Whether autosizing is enabled or not */\n    get enabled() { return this._enabled; }\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    _setMinHeight() {\n        const minHeight = this.minRows && this._cachedLineHeight ?\n            `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    _setMaxHeight() {\n        const maxHeight = this.maxRows && this._cachedLineHeight ?\n            `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe(() => this.resizeToFitContent(true));\n            });\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        let textareaClone = this._textareaElement.cloneNode(false);\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        this._textareaElement.parentNode.appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        this._textareaElement.parentNode.removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        const textarea = this._elementRef.nativeElement;\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        const placeholderText = textarea.placeholder;\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n        // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n        // need to be removed temporarily.\n        textarea.classList.add(this._measuringClass);\n        textarea.placeholder = '';\n        // The measuring class includes a 2px padding to workaround an issue with Chrome,\n        // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        const height = textarea.scrollHeight - 4;\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        textarea.classList.remove(this._measuringClass);\n        textarea.placeholder = placeholderText;\n        this._ngZone.runOutsideAngular(() => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame(() => this._scrollToCaretPosition(textarea));\n            }\n            else {\n                setTimeout(() => this._scrollToCaretPosition(textarea));\n            }\n        });\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        const document = this._getDocument();\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && document.activeElement === textarea) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = function CdkTextareaAutosize_Factory(t) { return new (t || CdkTextareaAutosize)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nCdkTextareaAutosize.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkTextareaAutosize, selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"], hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() { return ctx._noopInputHandler(); });\n    } }, inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"] }, exportAs: [\"cdkTextareaAutosize\"] });\nCdkTextareaAutosize.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTextareaAutosize.propDecorators = {\n    minRows: [{ type: Input, args: ['cdkAutosizeMinRows',] }],\n    maxRows: [{ type: Input, args: ['cdkAutosizeMaxRows',] }],\n    enabled: [{ type: Input, args: ['cdkTextareaAutosize',] }],\n    _noopInputHandler: [{ type: HostListener, args: ['input',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[cdkTextareaAutosize]',\n                exportAs: 'cdkTextareaAutosize',\n                host: {\n                    'class': 'cdk-textarea-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { minRows: [{\n            type: Input,\n            args: ['cdkAutosizeMinRows']\n        }], maxRows: [{\n            type: Input,\n            args: ['cdkAutosizeMaxRows']\n        }], enabled: [{\n            type: Input,\n            args: ['cdkTextareaAutosize']\n        }], \n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    _noopInputHandler: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵfac = function TextFieldModule_Factory(t) { return new (t || TextFieldModule)(); };\nTextFieldModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: TextFieldModule });\nTextFieldModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[PlatformModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TextFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkAutofill, CdkTextareaAutosize],\n                imports: [PlatformModule],\n                exports: [CdkAutofill, CdkTextareaAutosize]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextFieldModule, { declarations: function () { return [CdkAutofill, CdkTextareaAutosize]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [CdkAutofill, CdkTextareaAutosize]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n\n","import { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Optional, Self, Inject, NgZone, HostListener, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MAT_FORM_FIELD, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `@angular/cdk/text-field` instead.\n * @breaking-change 8.0.0\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/text-field';\nimport * as ɵngcc5 from '@angular/material/form-field';\nclass MatTextareaAutosize extends CdkTextareaAutosize {\n    get matAutosizeMinRows() { return this.minRows; }\n    set matAutosizeMinRows(value) { this.minRows = value; }\n    get matAutosizeMaxRows() { return this.maxRows; }\n    set matAutosizeMaxRows(value) { this.maxRows = value; }\n    get matAutosize() { return this.enabled; }\n    set matAutosize(value) { this.enabled = value; }\n    get matTextareaAutosize() { return this.enabled; }\n    set matTextareaAutosize(value) { this.enabled = value; }\n}\nMatTextareaAutosize.ɵfac = /*@__PURE__*/ function () { let ɵMatTextareaAutosize_BaseFactory; return function MatTextareaAutosize_Factory(t) { return (ɵMatTextareaAutosize_BaseFactory || (ɵMatTextareaAutosize_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextareaAutosize)))(t || MatTextareaAutosize); }; }();\nMatTextareaAutosize.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTextareaAutosize, selectors: [[\"textarea\", \"mat-autosize\", \"\"], [\"textarea\", \"matTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\", \"mat-autosize\"], inputs: { cdkAutosizeMinRows: \"cdkAutosizeMinRows\", cdkAutosizeMaxRows: \"cdkAutosizeMaxRows\", matAutosizeMinRows: \"matAutosizeMinRows\", matAutosizeMaxRows: \"matAutosizeMaxRows\", matAutosize: [\"mat-autosize\", \"matAutosize\"], matTextareaAutosize: \"matTextareaAutosize\" }, exportAs: [\"matTextareaAutosize\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTextareaAutosize.propDecorators = {\n    matAutosizeMinRows: [{ type: Input }],\n    matAutosizeMaxRows: [{ type: Input }],\n    matAutosize: [{ type: Input, args: ['mat-autosize',] }],\n    matTextareaAutosize: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'matTextareaAutosize',\n                inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                host: {\n                    'class': 'cdk-textarea-autosize mat-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], null, { matAutosizeMinRows: [{\n            type: Input\n        }], matAutosizeMaxRows: [{\n            type: Input\n        }], matAutosize: [{\n            type: Input,\n            args: ['mat-autosize']\n        }], matTextareaAutosize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/** @docs-private */\nclass MatInputBase {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /** @docs-private */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nconst _MatInputMixinBase = mixinErrorState(MatInputBase);\n/** Directive that allows a native input to work inside a `MatFormField`. */\nclass MatInput extends _MatInputMixinBase {\n    constructor(_elementRef, _platform, \n    /** @docs-private */\n    ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone, \n    // TODO: Remove this once the legacy appearance has been removed. We only need\n    // to inject the form-field for determining whether the placeholder has been promoted.\n    _formField) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this.ngControl = ngControl;\n        this._autofillMonitor = _autofillMonitor;\n        this._formField = _formField;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._required = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter(t => getSupportedInputTypes().has(t));\n        const element = this._elementRef.nativeElement;\n        const nodeName = element.nodeName.toLowerCase();\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular(() => {\n                _elementRef.nativeElement.addEventListener('keyup', (event) => {\n                    let el = event.target;\n                    if (!el.value && !el.selectionStart && !el.selectionEnd) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                });\n            });\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = nodeName === 'select';\n        this._isTextarea = nodeName === 'textarea';\n        if (this._isNativeSelect) {\n            this.controlType = element.multiple ? 'mat-native-select-multiple' :\n                'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() { return this._id; }\n    set id(value) { this._id = value || this._uid; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Input type of the element. */\n    get type() { return this._type; }\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() { return this._inputValueAccessor.value; }\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /** Whether the element is readonly. */\n    get readonly() { return this._readonly; }\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            });\n        }\n    }\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n        // We need to dirty-check and set the placeholder attribute ourselves, because whether it's\n        // present or not depends on a query which is prone to \"changed after checked\" errors.\n        this._dirtyCheckPlaceholder();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    /** Callback for the cases where the focused state of the input changes. */\n    // tslint:disable:no-host-decorator-in-concrete\n    // tslint:enable:no-host-decorator-in-concrete\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /** Does some manual dirty checking on the native input `placeholder` attribute. */\n    _dirtyCheckPlaceholder() {\n        var _a, _b;\n        // If we're hiding the native placeholder, it should also be cleared from the DOM, otherwise\n        // screen readers will read it out twice: once from the label and once from the attribute.\n        // TODO: can be removed once we get rid of the `legacy` style for the form field, because it's\n        // the only one that supports promoting the placeholder to a label.\n        const placeholder = ((_b = (_a = this._formField) === null || _a === void 0 ? void 0 : _a._hideControlPlaceholder) === null || _b === void 0 ? void 0 : _b.call(_a)) ? null : this.placeholder;\n        if (placeholder !== this._previousPlaceholder) {\n            const element = this._elementRef.nativeElement;\n            this._previousPlaceholder = placeholder;\n            placeholder ?\n                element.setAttribute('placeholder', placeholder) : element.removeAttribute('placeholder');\n        }\n    }\n    /** Does some manual dirty checking on the native input `value` property. */\n    _dirtyCheckNativeValue() {\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /** Make sure the input is a supported type. */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /** Checks whether the input type is one of the types that are never empty. */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /** Checks whether the input is invalid based on the native validation. */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        let validity = this._elementRef.nativeElement.validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n            !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            const selectElement = this._elementRef.nativeElement;\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return this.focused || selectElement.multiple || !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        if (ids.length) {\n            this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            this._elementRef.nativeElement.removeAttribute('aria-describedby');\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n}\nMatInput.ɵfac = function MatInput_Factory(t) { return new (t || MatInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AutofillMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8)); };\nMatInput.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatInput, selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]], hostAttrs: [1, \"mat-input-element\", \"mat-form-field-autofill-control\"], hostVars: 9, hostBindings: function MatInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatInput_focus_HostBindingHandler() { return ctx._focusChanged(true); })(\"blur\", function MatInput_blur_HostBindingHandler() { return ctx._focusChanged(false); })(\"input\", function MatInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"data-placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-invalid\", ctx.errorState)(\"aria-required\", ctx.required.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-input-server\", ctx._isServer);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", required: \"required\", type: \"type\", value: \"value\", readonly: \"readonly\", placeholder: \"placeholder\", errorStateMatcher: \"errorStateMatcher\", userAriaDescribedBy: [\"aria-describedby\", \"userAriaDescribedBy\"] }, exportAs: [\"matInput\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatInput }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nMatInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] }] },\n    { type: AutofillMonitor },\n    { type: NgZone },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] }\n];\nMatInput.propDecorators = {\n    disabled: [{ type: Input }],\n    id: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    type: [{ type: Input }],\n    errorStateMatcher: [{ type: Input }],\n    userAriaDescribedBy: [{ type: Input, args: ['aria-describedby',] }],\n    value: [{ type: Input }],\n    readonly: [{ type: Input }],\n    _focusChanged: [{ type: HostListener, args: ['focus', ['true'],] }, { type: HostListener, args: ['blur', ['false'],] }],\n    _onInput: [{ type: HostListener, args: ['input',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatInput, [{\n        type: Directive,\n        args: [{\n                selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                exportAs: 'matInput',\n                host: {\n                    /**\n                     * @breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                     */\n                    'class': 'mat-input-element mat-form-field-autofill-control',\n                    '[class.mat-input-server]': '_isServer',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[attr.id]': 'id',\n                    // At the time of writing, we have a lot of customer tests that look up the input based on its\n                    // placeholder. Since we sometimes omit the placeholder attribute from the DOM to prevent screen\n                    // readers from reading it twice, we have to keep it somewhere in the DOM for the lookup.\n                    '[attr.data-placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-required]': 'required.toString()'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatInput }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [MAT_INPUT_VALUE_ACCESSOR]\n            }] }, { type: ɵngcc4.AutofillMonitor }, { type: ɵngcc0.NgZone }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }]; }, { id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    /** Callback for the cases where the focused state of the input changes. */\n    // tslint:disable:no-host-decorator-in-concrete\n    // tslint:enable:no-host-decorator-in-concrete\n    _focusChanged: [{\n            type: HostListener,\n            args: ['focus', ['true']]\n        }, {\n            type: HostListener,\n            args: ['blur', ['false']]\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _onInput: [{\n            type: HostListener,\n            args: ['input']\n        }], placeholder: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }], userAriaDescribedBy: [{\n            type: Input,\n            args: ['aria-describedby']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatInputModule {\n}\nMatInputModule.ɵfac = function MatInputModule_Factory(t) { return new (t || MatInputModule)(); };\nMatInputModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatInputModule });\nMatInputModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [ErrorStateMatcher], imports: [[\n            TextFieldModule,\n            MatFormFieldModule,\n        ], TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatInput, MatTextareaAutosize],\n                imports: [\n                    TextFieldModule,\n                    MatFormFieldModule,\n                ],\n                exports: [\n                    TextFieldModule,\n                    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                    // be used together with `MatFormField`.\n                    MatFormFieldModule,\n                    MatInput,\n                    MatTextareaAutosize,\n                ],\n                providers: [ErrorStateMatcher]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatInputModule, { declarations: function () { return [MatInput, MatTextareaAutosize]; }, imports: function () { return [TextFieldModule,\n        MatFormFieldModule]; }, exports: function () { return [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule, MatInput, MatTextareaAutosize]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, MatTextareaAutosize, getMatInputUnsupportedTypeError };\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SpaceInputComponent } from './space-input.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {TranslationsModule} from '../../translations/translations.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        TranslationsModule,\n    ],\n    declarations: [\n        SpaceInputComponent\n    ],\n    exports: [\n        SpaceInputComponent,\n    ]\n})\nexport class SpaceInputModule {\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const RECAPTCHA_ACTIONS = new InjectionToken<any>('RECAPTCHA_ACTIONS');\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {InfoPopoverComponent} from '@common/core/ui/info-popover/info-popover.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\n\n@NgModule({\n    declarations: [InfoPopoverComponent],\n    imports: [\n        CommonModule,\n\n        // material\n        MatIconModule,\n        MatButtonModule,\n    ],\n    exports: [InfoPopoverComponent],\n})\nexport class InfoPopoverModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SettingsComponent} from './settings.component';\nimport {AuthenticationSettingsComponent} from './authentication/authentication-settings.component';\nimport {CacheSettingsComponent} from './cache/cache-settings.component';\nimport {AnalyticsSettingsComponent} from './analytics/analytics-settings.component';\nimport {LocalizationSettingsComponent} from './localization/localization-settings.component';\nimport {MailSettingsComponent} from './mail/mail-settings.component';\nimport {LoggingSettingsComponent} from './logging/logging-settings.component';\nimport {QueueSettingsComponent} from './queue/queue-settings.component';\nimport {SettingsResolve} from './settings-resolve.service';\nimport {SettingsState} from './settings-state.service';\nimport {RouterModule} from '@angular/router';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {GeneralSettingsComponent} from './general/general-settings.component';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {BillingSettingsComponent} from './billing/billing-settings.component';\nimport {SpaceInputModule} from '../../core/ui/space-input/space-input.module';\nimport {UploadingSettingsComponent} from './uploading/uploading-settings.component';\nimport {ChipsModule} from '../../core/ui/chips/chips.module';\nimport {FtpFormComponent} from './uploading/storage-forms/ftp-form/ftp-form.component';\nimport {DropboxFormComponent} from './uploading/storage-forms/dropbox-form/dropbox-form.component';\nimport {RackspaceFormComponent} from './uploading/storage-forms/rackspace-form/rackspace-form.component';\nimport {S3FormComponent} from './uploading/storage-forms/s3-form/s3-form.component';\nimport {DigitaloceanFormComponent} from './uploading/storage-forms/digitalocean-form/digitalocean-form.component';\nimport {RecaptchaSettingsComponent} from './recaptcha/recaptcha-settings.component';\nimport {BackblazeFormComponent} from './uploading/storage-forms/backblaze-form/backblaze-form.component';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\nimport {MatIconModule} from '@angular/material/icon';\nimport {FormatPipesModule} from '@common/core/ui/format-pipes/format-pipes.module';\nimport {GdprSettingsComponent} from './gdpr-settings/gdpr-settings.component';\nimport {RECAPTCHA_ACTIONS} from '@common/admin/settings/recaptcha/recaptcha-actions.token';\nimport {SearchSettingsComponent} from '@common/admin/settings/search/search-settings.component';\nimport {InfoPopoverModule} from '../../core/ui/info-popover/info-popover.module';\n\n@NgModule({\n    imports: [\n        RouterModule,\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SpaceInputModule,\n        ChipsModule,\n        TranslationsModule,\n        FormatPipesModule,\n        InfoPopoverModule,\n\n        // material\n        MatButtonModule,\n        MatIconModule,\n        MatSnackBarModule,\n        MatCheckboxModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatMenuModule,\n        MatSlideToggleModule,\n        MatAutocompleteModule,\n        MatInputModule,\n        MatChipsModule,\n        MatProgressBarModule,\n        MatTabsModule,\n        MatRadioModule,\n    ],\n    declarations: [\n        SettingsComponent,\n        AuthenticationSettingsComponent,\n        CacheSettingsComponent,\n        AnalyticsSettingsComponent,\n        LocalizationSettingsComponent,\n        MailSettingsComponent,\n        LoggingSettingsComponent,\n        QueueSettingsComponent,\n        GeneralSettingsComponent,\n        BillingSettingsComponent,\n        RecaptchaSettingsComponent,\n        SearchSettingsComponent,\n\n        // uploading\n        UploadingSettingsComponent,\n        FtpFormComponent,\n        DropboxFormComponent,\n        RackspaceFormComponent,\n        S3FormComponent,\n        DigitaloceanFormComponent,\n        BackblazeFormComponent,\n        GdprSettingsComponent,\n    ],\n    providers: [\n        SettingsResolve,\n        SettingsState,\n        {\n            provide: RECAPTCHA_ACTIONS,\n            multi: true,\n            useValue: [\n                {\n                    name: 'Registration Recaptcha',\n                    key: 'recaptcha.enable_for_registration',\n                    description: 'Enable recaptcha integration for registration page.',\n                },\n                {\n                    name: 'Contact Recaptcha',\n                    key: 'recaptcha.enable_for_contact',\n                    description: 'Enable recaptcha integration for \"contact us\" page.',\n                },\n            ],\n        },\n    ],\n    exports: [ChipsModule],\n})\nexport class SettingsModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {TextEditorComponent} from './text-editor.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        TranslationsModule,\n\n        // material\n        MatButtonModule,\n        MatSnackBarModule,\n        MatCheckboxModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatMenuModule,\n        MatIconModule,\n    ],\n    declarations: [\n        TextEditorComponent,\n    ],\n    exports: [\n        TextEditorComponent,\n    ],\n})\nexport class TextEditorModule { }\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { ɵɵdefineInjectable, Injectable, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, NgZone, Input, Output, Directive, Optional, SkipSelf, InjectionToken, ChangeDetectorRef, Inject, ViewChild, forwardRef, ViewContainerRef, Attribute, ContentChild, InjectFlags, Injector, Self, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { DateAdapter, MAT_DATE_FORMATS, mixinColor, ErrorStateMatcher, mixinErrorState } from '@angular/material/core';\nimport { Subject, Subscription, merge, of } from 'rxjs';\nimport { ESCAPE, SPACE, ENTER, PAGE_DOWN, PAGE_UP, END, HOME, DOWN_ARROW, UP_ARROW, RIGHT_ARROW, LEFT_ARROW, BACKSPACE } from '@angular/cdk/keycodes';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { take, startWith, filter } from 'rxjs/operators';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, Validators, NgControl, NgForm, FormGroupDirective, ControlContainer } from '@angular/forms';\nimport { MatFormField, MAT_FORM_FIELD, MatFormFieldControl } from '@angular/material/form-field';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/material/button';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/portal';\nimport * as ɵngcc7 from '@angular/material/dialog';\nimport * as ɵngcc8 from '@angular/cdk/overlay';\nimport * as ɵngcc9 from '@angular/material/form-field';\nimport * as ɵngcc10 from '@angular/forms';\n\nconst _c0 = [\"mat-calendar-body\", \"\"];\nfunction MatCalendarBody_tr_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 2);\n    ɵngcc0.ɵɵelementStart(1, \"td\", 3);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r0._cellPadding)(\"padding-bottom\", ctx_r0._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r0.numCols);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.label, \" \");\n} }\nfunction MatCalendarBody_tr_1_td_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r4._cellPadding)(\"padding-bottom\", ctx_r4._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r4._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r4._firstRowOffset >= ctx_r4.labelMinRequiredCells ? ctx_r4.label : \"\", \" \");\n} }\nfunction MatCalendarBody_tr_1_td_2_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function MatCalendarBody_tr_1_td_2_Template_td_click_0_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r9); const item_r6 = restoredCtx.$implicit; const ctx_r8 = ɵngcc0.ɵɵnextContext(2); return ctx_r8._cellClicked(item_r6, $event); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 9);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(3, \"div\", 10);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    const colIndex_r7 = ctx.index;\n    const rowIndex_r3 = ɵngcc0.ɵɵnextContext().index;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r5._cellWidth)(\"padding-top\", ctx_r5._cellPadding)(\"padding-bottom\", ctx_r5._cellPadding);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-disabled\", !item_r6.enabled)(\"mat-calendar-body-active\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7))(\"mat-calendar-body-range-start\", ctx_r5._isRangeStart(item_r6.compareValue))(\"mat-calendar-body-range-end\", ctx_r5._isRangeEnd(item_r6.compareValue))(\"mat-calendar-body-in-range\", ctx_r5._isInRange(item_r6.compareValue))(\"mat-calendar-body-comparison-bridge-start\", ctx_r5._isComparisonBridgeStart(item_r6.compareValue, rowIndex_r3, colIndex_r7))(\"mat-calendar-body-comparison-bridge-end\", ctx_r5._isComparisonBridgeEnd(item_r6.compareValue, rowIndex_r3, colIndex_r7))(\"mat-calendar-body-comparison-start\", ctx_r5._isComparisonStart(item_r6.compareValue))(\"mat-calendar-body-comparison-end\", ctx_r5._isComparisonEnd(item_r6.compareValue))(\"mat-calendar-body-in-comparison-range\", ctx_r5._isInComparisonRange(item_r6.compareValue))(\"mat-calendar-body-preview-start\", ctx_r5._isPreviewStart(item_r6.compareValue))(\"mat-calendar-body-preview-end\", ctx_r5._isPreviewEnd(item_r6.compareValue))(\"mat-calendar-body-in-preview\", ctx_r5._isInPreview(item_r6.compareValue));\n    ɵngcc0.ɵɵproperty(\"ngClass\", item_r6.cssClasses)(\"tabindex\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7) ? 0 : -1);\n    ɵngcc0.ɵɵattribute(\"data-mat-row\", rowIndex_r3)(\"data-mat-col\", colIndex_r7)(\"aria-label\", item_r6.ariaLabel)(\"aria-disabled\", !item_r6.enabled || null)(\"aria-selected\", ctx_r5._isSelected(item_r6.compareValue));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-selected\", ctx_r5._isSelected(item_r6.compareValue))(\"mat-calendar-body-comparison-identical\", ctx_r5._isComparisonIdentical(item_r6.compareValue))(\"mat-calendar-body-today\", ctx_r5.todayValue === item_r6.compareValue);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", item_r6.displayValue, \" \");\n} }\nfunction MatCalendarBody_tr_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 4);\n    ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_td_1_Template, 2, 6, \"td\", 5);\n    ɵngcc0.ɵɵtemplate(2, MatCalendarBody_tr_1_td_2_Template, 4, 46, \"td\", 6);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const row_r2 = ctx.$implicit;\n    const rowIndex_r3 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", rowIndex_r3 === 0 && ctx_r1._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", row_r2);\n} }\nfunction MatMonthView_th_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const day_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵattribute(\"aria-label\", day_r1.long);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(day_r1.narrow);\n} }\nconst _c1 = [\"*\"];\nfunction MatCalendar_ng_template_0_Template(rf, ctx) { }\nfunction MatCalendar_mat_month_view_2_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-month-view\", 5);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.activeDate = $event; })(\"_userSelection\", function MatCalendar_mat_month_view_2_Template_mat_month_view__userSelection_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6._dateSelected($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r1.activeDate)(\"selected\", ctx_r1.selected)(\"dateFilter\", ctx_r1.dateFilter)(\"maxDate\", ctx_r1.maxDate)(\"minDate\", ctx_r1.minDate)(\"dateClass\", ctx_r1.dateClass)(\"comparisonStart\", ctx_r1.comparisonStart)(\"comparisonEnd\", ctx_r1.comparisonEnd);\n} }\nfunction MatCalendar_mat_year_view_3_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-year-view\", 6);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.activeDate = $event; })(\"monthSelected\", function MatCalendar_mat_year_view_3_Template_mat_year_view_monthSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9._monthSelectedInYearView($event); })(\"selectedChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._goToDateInView($event, \"month\"); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r2.activeDate)(\"selected\", ctx_r2.selected)(\"dateFilter\", ctx_r2.dateFilter)(\"maxDate\", ctx_r2.maxDate)(\"minDate\", ctx_r2.minDate)(\"dateClass\", ctx_r2.dateClass);\n} }\nfunction MatCalendar_mat_multi_year_view_4_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-multi-year-view\", 7);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.activeDate = $event; })(\"yearSelected\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_yearSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13._yearSelectedInMultiYearView($event); })(\"selectedChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14._goToDateInView($event, \"year\"); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r3.activeDate)(\"selected\", ctx_r3.selected)(\"dateFilter\", ctx_r3.dateFilter)(\"maxDate\", ctx_r3.maxDate)(\"minDate\", ctx_r3.minDate)(\"dateClass\", ctx_r3.dateClass);\n} }\nconst _c2 = [\"button\"];\nfunction MatDatepickerToggle__svg_svg_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"svg\", 3);\n    ɵngcc0.ɵɵelement(1, \"path\", 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"\", \"matDatepickerToggleIcon\", \"\"]]];\nconst _c4 = [\"[matDatepickerToggleIcon]\"];\nconst _c5 = [[[\"input\", \"matStartDate\", \"\"]], [[\"input\", \"matEndDate\", \"\"]]];\nconst _c6 = [\"input[matStartDate]\", \"input[matEndDate]\"];\nfunction createMissingDateImplError(provider) {\n    return Error(`MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n        `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\n        `custom implementation.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Datepicker data that requires internationalization. */\nclass MatDatepickerIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the calendar popup (used by screen readers). */\n        this.calendarLabel = 'Calendar';\n        /** A label for the button used to open the calendar popup (used by screen readers). */\n        this.openCalendarLabel = 'Open calendar';\n        /** A label for the previous month button (used by screen readers). */\n        this.prevMonthLabel = 'Previous month';\n        /** A label for the next month button (used by screen readers). */\n        this.nextMonthLabel = 'Next month';\n        /** A label for the previous year button (used by screen readers). */\n        this.prevYearLabel = 'Previous year';\n        /** A label for the next year button (used by screen readers). */\n        this.nextYearLabel = 'Next year';\n        /** A label for the previous multi-year button (used by screen readers). */\n        this.prevMultiYearLabel = 'Previous 20 years';\n        /** A label for the next multi-year button (used by screen readers). */\n        this.nextMultiYearLabel = 'Next 20 years';\n        /** A label for the 'switch to month view' button (used by screen readers). */\n        this.switchToMonthViewLabel = 'Choose date';\n        /** A label for the 'switch to year view' button (used by screen readers). */\n        this.switchToMultiYearViewLabel = 'Choose month and year';\n    }\n    /** Formats a range of years. */\n    formatYearRange(start, end) {\n        return `${start} \\u2013 ${end}`;\n    }\n}\nMatDatepickerIntl.ɵfac = function MatDatepickerIntl_Factory(t) { return new (t || MatDatepickerIntl)(); };\nMatDatepickerIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatDatepickerIntl_Factory() { return new MatDatepickerIntl(); }, token: MatDatepickerIntl, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nclass MatCalendarCell {\n    constructor(value, displayValue, ariaLabel, enabled, cssClasses = {}, compareValue = value, rawValue) {\n        this.value = value;\n        this.displayValue = displayValue;\n        this.ariaLabel = ariaLabel;\n        this.enabled = enabled;\n        this.cssClasses = cssClasses;\n        this.compareValue = compareValue;\n        this.rawValue = rawValue;\n    }\n}\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\nclass MatCalendarBody {\n    constructor(_elementRef, _ngZone) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /** The number of columns in the table. */\n        this.numCols = 7;\n        /** The cell number of the active cell in the table. */\n        this.activeCell = 0;\n        /** Whether a range is being selected. */\n        this.isRange = false;\n        /**\n         * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n         * maintained even as the table resizes.\n         */\n        this.cellAspectRatio = 1;\n        /** Start of the preview range. */\n        this.previewStart = null;\n        /** End of the preview range. */\n        this.previewEnd = null;\n        /** Emits when a new value is selected. */\n        this.selectedValueChange = new EventEmitter();\n        /** Emits when the preview has changed as a result of a user action. */\n        this.previewChange = new EventEmitter();\n        /**\n         * Event handler for when the user enters an element\n         * inside the calendar body (e.g. by hovering in or focus).\n         */\n        this._enterHandler = (event) => {\n            if (this._skipNextFocus && event.type === 'focus') {\n                this._skipNextFocus = false;\n                return;\n            }\n            // We only need to hit the zone when we're selecting a range.\n            if (event.target && this.isRange) {\n                const cell = this._getCellFromElement(event.target);\n                if (cell) {\n                    this._ngZone.run(() => this.previewChange.emit({ value: cell.enabled ? cell : null, event }));\n                }\n            }\n        };\n        /**\n         * Event handler for when the user's pointer leaves an element\n         * inside the calendar body (e.g. by hovering out or blurring).\n         */\n        this._leaveHandler = (event) => {\n            // We only need to hit the zone when we're selecting a range.\n            if (this.previewEnd !== null && this.isRange) {\n                // Only reset the preview end value when leaving cells. This looks better, because\n                // we have a gap between the cells and the rows and we don't want to remove the\n                // range just for it to show up again when the user moves a few pixels to the side.\n                if (event.target && isTableCell(event.target)) {\n                    this._ngZone.run(() => this.previewChange.emit({ value: null, event }));\n                }\n            }\n        };\n        _ngZone.runOutsideAngular(() => {\n            const element = _elementRef.nativeElement;\n            element.addEventListener('mouseenter', this._enterHandler, true);\n            element.addEventListener('focus', this._enterHandler, true);\n            element.addEventListener('mouseleave', this._leaveHandler, true);\n            element.addEventListener('blur', this._leaveHandler, true);\n        });\n    }\n    /** Called when a cell is clicked. */\n    _cellClicked(cell, event) {\n        if (cell.enabled) {\n            this.selectedValueChange.emit({ value: cell.value, event });\n        }\n    }\n    /** Returns whether a cell should be marked as selected. */\n    _isSelected(value) {\n        return this.startValue === value || this.endValue === value;\n    }\n    ngOnChanges(changes) {\n        const columnChanges = changes['numCols'];\n        const { rows, numCols } = this;\n        if (changes['rows'] || columnChanges) {\n            this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n        if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n            this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n        }\n        if (columnChanges || !this._cellWidth) {\n            this._cellWidth = `${100 / numCols}%`;\n        }\n    }\n    ngOnDestroy() {\n        const element = this._elementRef.nativeElement;\n        element.removeEventListener('mouseenter', this._enterHandler, true);\n        element.removeEventListener('focus', this._enterHandler, true);\n        element.removeEventListener('mouseleave', this._leaveHandler, true);\n        element.removeEventListener('blur', this._leaveHandler, true);\n    }\n    /** Returns whether a cell is active. */\n    _isActiveCell(rowIndex, colIndex) {\n        let cellNumber = rowIndex * this.numCols + colIndex;\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this._firstRowOffset;\n        }\n        return cellNumber == this.activeCell;\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell(movePreview = true) {\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                const activeCell = this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n                if (activeCell) {\n                    if (!movePreview) {\n                        this._skipNextFocus = true;\n                    }\n                    activeCell.focus();\n                }\n            });\n        });\n    }\n    /** Gets whether a value is the start of the main range. */\n    _isRangeStart(value) {\n        return isStart(value, this.startValue, this.endValue);\n    }\n    /** Gets whether a value is the end of the main range. */\n    _isRangeEnd(value) {\n        return isEnd(value, this.startValue, this.endValue);\n    }\n    /** Gets whether a value is within the currently-selected range. */\n    _isInRange(value) {\n        return isInRange(value, this.startValue, this.endValue, this.isRange);\n    }\n    /** Gets whether a value is the start of the comparison range. */\n    _isComparisonStart(value) {\n        return isStart(value, this.comparisonStart, this.comparisonEnd);\n    }\n    /** Whether the cell is a start bridge cell between the main and comparison ranges. */\n    _isComparisonBridgeStart(value, rowIndex, colIndex) {\n        if (!this._isComparisonStart(value) || this._isRangeStart(value) || !this._isInRange(value)) {\n            return false;\n        }\n        let previousCell = this.rows[rowIndex][colIndex - 1];\n        if (!previousCell) {\n            const previousRow = this.rows[rowIndex - 1];\n            previousCell = previousRow && previousRow[previousRow.length - 1];\n        }\n        return previousCell && !this._isRangeEnd(previousCell.compareValue);\n    }\n    /** Whether the cell is an end bridge cell between the main and comparison ranges. */\n    _isComparisonBridgeEnd(value, rowIndex, colIndex) {\n        if (!this._isComparisonEnd(value) || this._isRangeEnd(value) || !this._isInRange(value)) {\n            return false;\n        }\n        let nextCell = this.rows[rowIndex][colIndex + 1];\n        if (!nextCell) {\n            const nextRow = this.rows[rowIndex + 1];\n            nextCell = nextRow && nextRow[0];\n        }\n        return nextCell && !this._isRangeStart(nextCell.compareValue);\n    }\n    /** Gets whether a value is the end of the comparison range. */\n    _isComparisonEnd(value) {\n        return isEnd(value, this.comparisonStart, this.comparisonEnd);\n    }\n    /** Gets whether a value is within the current comparison range. */\n    _isInComparisonRange(value) {\n        return isInRange(value, this.comparisonStart, this.comparisonEnd, this.isRange);\n    }\n    /**\n     * Gets whether a value is the same as the start and end of the comparison range.\n     * For context, the functions that we use to determine whether something is the start/end of\n     * a range don't allow for the start and end to be on the same day, because we'd have to use\n     * much more specific CSS selectors to style them correctly in all scenarios. This is fine for\n     * the regular range, because when it happens, the selected styles take over and still show where\n     * the range would've been, however we don't have these selected styles for a comparison range.\n     * This function is used to apply a class that serves the same purpose as the one for selected\n     * dates, but it only applies in the context of a comparison range.\n     */\n    _isComparisonIdentical(value) {\n        // Note that we don't need to null check the start/end\n        // here, because the `value` will always be defined.\n        return this.comparisonStart === this.comparisonEnd && value === this.comparisonStart;\n    }\n    /** Gets whether a value is the start of the preview range. */\n    _isPreviewStart(value) {\n        return isStart(value, this.previewStart, this.previewEnd);\n    }\n    /** Gets whether a value is the end of the preview range. */\n    _isPreviewEnd(value) {\n        return isEnd(value, this.previewStart, this.previewEnd);\n    }\n    /** Gets whether a value is inside the preview range. */\n    _isInPreview(value) {\n        return isInRange(value, this.previewStart, this.previewEnd, this.isRange);\n    }\n    /** Finds the MatCalendarCell that corresponds to a DOM node. */\n    _getCellFromElement(element) {\n        let cell;\n        if (isTableCell(element)) {\n            cell = element;\n        }\n        else if (isTableCell(element.parentNode)) {\n            cell = element.parentNode;\n        }\n        if (cell) {\n            const row = cell.getAttribute('data-mat-row');\n            const col = cell.getAttribute('data-mat-col');\n            if (row && col) {\n                return this.rows[parseInt(row)][parseInt(col)];\n            }\n        }\n        return null;\n    }\n}\nMatCalendarBody.ɵfac = function MatCalendarBody_Factory(t) { return new (t || MatCalendarBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatCalendarBody.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatCalendarBody, selectors: [[\"\", \"mat-calendar-body\", \"\"]], hostAttrs: [\"role\", \"grid\", \"aria-readonly\", \"true\", 1, \"mat-calendar-body\"], inputs: { numCols: \"numCols\", activeCell: \"activeCell\", isRange: \"isRange\", cellAspectRatio: \"cellAspectRatio\", previewStart: \"previewStart\", previewEnd: \"previewEnd\", label: \"label\", rows: \"rows\", todayValue: \"todayValue\", startValue: \"startValue\", endValue: \"endValue\", labelMinRequiredCells: \"labelMinRequiredCells\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, outputs: { selectedValueChange: \"selectedValueChange\", previewChange: \"previewChange\" }, exportAs: [\"matCalendarBody\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], attrs: _c0, decls: 2, vars: 2, consts: [[\"aria-hidden\", \"true\", 4, \"ngIf\"], [\"role\", \"row\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\"], [1, \"mat-calendar-body-label\"], [\"role\", \"row\"], [\"aria-hidden\", \"true\", \"class\", \"mat-calendar-body-label\", 3, \"paddingTop\", \"paddingBottom\", 4, \"ngIf\"], [\"role\", \"gridcell\", \"class\", \"mat-calendar-body-cell\", 3, \"ngClass\", \"tabindex\", \"mat-calendar-body-disabled\", \"mat-calendar-body-active\", \"mat-calendar-body-range-start\", \"mat-calendar-body-range-end\", \"mat-calendar-body-in-range\", \"mat-calendar-body-comparison-bridge-start\", \"mat-calendar-body-comparison-bridge-end\", \"mat-calendar-body-comparison-start\", \"mat-calendar-body-comparison-end\", \"mat-calendar-body-in-comparison-range\", \"mat-calendar-body-preview-start\", \"mat-calendar-body-preview-end\", \"mat-calendar-body-in-preview\", \"width\", \"paddingTop\", \"paddingBottom\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-body-label\"], [\"role\", \"gridcell\", 1, \"mat-calendar-body-cell\", 3, \"ngClass\", \"tabindex\", \"click\"], [1, \"mat-calendar-body-cell-content\", \"mat-focus-indicator\"], [1, \"mat-calendar-body-cell-preview\"]], template: function MatCalendarBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendarBody_tr_0_Template, 3, 6, \"tr\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_Template, 3, 2, \"tr\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._firstRowOffset < ctx.labelMinRequiredCells);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.rows);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgClass], styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}[dir=rtl] .mat-calendar-body-label{text-align:right}@media(hover: none){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:transparent}}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatCalendarBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nMatCalendarBody.propDecorators = {\n    label: [{ type: Input }],\n    rows: [{ type: Input }],\n    todayValue: [{ type: Input }],\n    startValue: [{ type: Input }],\n    endValue: [{ type: Input }],\n    labelMinRequiredCells: [{ type: Input }],\n    numCols: [{ type: Input }],\n    activeCell: [{ type: Input }],\n    isRange: [{ type: Input }],\n    cellAspectRatio: [{ type: Input }],\n    comparisonStart: [{ type: Input }],\n    comparisonEnd: [{ type: Input }],\n    previewStart: [{ type: Input }],\n    previewEnd: [{ type: Input }],\n    selectedValueChange: [{ type: Output }],\n    previewChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendarBody, [{\n        type: Component,\n        args: [{\n                selector: '[mat-calendar-body]',\n                template: \"<!--\\n  If there's not enough space in the first row, create a separate label row. We mark this row as\\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\\n-->\\n<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\">\\n  <td class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"numCols\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{label}}\\n  </td>\\n</tr>\\n\\n<!-- Create the first row separately so we can include a special spacer cell. -->\\n<tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\">\\n  <!--\\n    We mark this cell as aria-hidden so it doesn't get read out as one of the days in the week.\\n    The aspect ratio of the table cells is maintained by setting the top and bottom padding as a\\n    percentage of the width (a variant of the trick described here:\\n    https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\\n  -->\\n  <td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\"\\n      aria-hidden=\\\"true\\\"\\n      class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"_firstRowOffset\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{_firstRowOffset >= labelMinRequiredCells ? label : ''}}\\n  </td>\\n  <td *ngFor=\\\"let item of row; let colIndex = index\\\"\\n      role=\\\"gridcell\\\"\\n      class=\\\"mat-calendar-body-cell\\\"\\n      [ngClass]=\\\"item.cssClasses\\\"\\n      [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\"\\n      [attr.data-mat-row]=\\\"rowIndex\\\"\\n      [attr.data-mat-col]=\\\"colIndex\\\"\\n      [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\"\\n      [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-range-start]=\\\"_isRangeStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-range-end]=\\\"_isRangeEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-range]=\\\"_isInRange(item.compareValue)\\\"\\n      [class.mat-calendar-body-comparison-bridge-start]=\\\"_isComparisonBridgeStart(item.compareValue, rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-comparison-bridge-end]=\\\"_isComparisonBridgeEnd(item.compareValue, rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-comparison-start]=\\\"_isComparisonStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-comparison-end]=\\\"_isComparisonEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-comparison-range]=\\\"_isInComparisonRange(item.compareValue)\\\"\\n      [class.mat-calendar-body-preview-start]=\\\"_isPreviewStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-preview-end]=\\\"_isPreviewEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-preview]=\\\"_isInPreview(item.compareValue)\\\"\\n      [attr.aria-label]=\\\"item.ariaLabel\\\"\\n      [attr.aria-disabled]=\\\"!item.enabled || null\\\"\\n      [attr.aria-selected]=\\\"_isSelected(item.compareValue)\\\"\\n      (click)=\\\"_cellClicked(item, $event)\\\"\\n      [style.width]=\\\"_cellWidth\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n      <div class=\\\"mat-calendar-body-cell-content mat-focus-indicator\\\"\\n        [class.mat-calendar-body-selected]=\\\"_isSelected(item.compareValue)\\\"\\n        [class.mat-calendar-body-comparison-identical]=\\\"_isComparisonIdentical(item.compareValue)\\\"\\n        [class.mat-calendar-body-today]=\\\"todayValue === item.compareValue\\\">\\n        {{item.displayValue}}\\n      </div>\\n      <div class=\\\"mat-calendar-body-cell-preview\\\"></div>\\n  </td>\\n</tr>\\n\",\n                host: {\n                    'class': 'mat-calendar-body',\n                    'role': 'grid',\n                    'aria-readonly': 'true'\n                },\n                exportAs: 'matCalendarBody',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}[dir=rtl] .mat-calendar-body-label{text-align:right}@media(hover: none){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:transparent}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { numCols: [{\n            type: Input\n        }], activeCell: [{\n            type: Input\n        }], isRange: [{\n            type: Input\n        }], cellAspectRatio: [{\n            type: Input\n        }], previewStart: [{\n            type: Input\n        }], previewEnd: [{\n            type: Input\n        }], selectedValueChange: [{\n            type: Output\n        }], previewChange: [{\n            type: Output\n        }], label: [{\n            type: Input\n        }], rows: [{\n            type: Input\n        }], todayValue: [{\n            type: Input\n        }], startValue: [{\n            type: Input\n        }], endValue: [{\n            type: Input\n        }], labelMinRequiredCells: [{\n            type: Input\n        }], comparisonStart: [{\n            type: Input\n        }], comparisonEnd: [{\n            type: Input\n        }] }); })();\n/** Checks whether a node is a table cell element. */\nfunction isTableCell(node) {\n    return node.nodeName === 'TD';\n}\n/** Checks whether a value is the start of a range. */\nfunction isStart(value, start, end) {\n    return end !== null && start !== end && value < end && value === start;\n}\n/** Checks whether a value is the end of a range. */\nfunction isEnd(value, start, end) {\n    return start !== null && start !== end && value >= start && value === end;\n}\n/** Checks whether a value is inside of a range. */\nfunction isInRange(value, start, end, rangeEnabled) {\n    return rangeEnabled && start !== null && end !== null && start !== end &&\n        value >= start && value <= end;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** A class representing a range of dates. */\nclass DateRange {\n    constructor(\n    /** The start date of the range. */\n    start, \n    /** The end date of the range. */\n    end) {\n        this.start = start;\n        this.end = end;\n    }\n}\n/** A selection model containing a date selection. */\nclass MatDateSelectionModel {\n    constructor(\n    /** The current selection. */\n    selection, _adapter) {\n        this.selection = selection;\n        this._adapter = _adapter;\n        this._selectionChanged = new Subject();\n        /** Emits when the selection has changed. */\n        this.selectionChanged = this._selectionChanged;\n        this.selection = selection;\n    }\n    /**\n     * Updates the current selection in the model.\n     * @param value New selection that should be assigned.\n     * @param source Object that triggered the selection change.\n     */\n    updateSelection(value, source) {\n        this.selection = value;\n        this._selectionChanged.next({ selection: value, source });\n    }\n    ngOnDestroy() {\n        this._selectionChanged.complete();\n    }\n    _isValidDateInstance(date) {\n        return this._adapter.isDateInstance(date) && this._adapter.isValid(date);\n    }\n}\nMatDateSelectionModel.ɵfac = function MatDateSelectionModel_Factory(t) { return new (t || MatDateSelectionModel)(ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter)); };\nMatDateSelectionModel.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDateSelectionModel });\nMatDateSelectionModel.ctorParameters = () => [\n    { type: undefined },\n    { type: DateAdapter }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDateSelectionModel, [{\n        type: Directive\n    }], function () { return [{ type: undefined }, { type: ɵngcc2.DateAdapter }]; }, null); })();\n/**  A selection model that contains a single date. */\nclass MatSingleDateSelectionModel extends MatDateSelectionModel {\n    constructor(adapter) {\n        super(null, adapter);\n    }\n    /**\n     * Adds a date to the current selection. In the case of a single date selection, the added date\n     * simply overwrites the previous selection\n     */\n    add(date) {\n        super.updateSelection(date, this);\n    }\n    /** Checks whether the current selection is valid. */\n    isValid() {\n        return this.selection != null && this._isValidDateInstance(this.selection);\n    }\n    /**\n     * Checks whether the current selection is complete. In the case of a single date selection, this\n     * is true if the current selection is not null.\n     */\n    isComplete() {\n        return this.selection != null;\n    }\n}\nMatSingleDateSelectionModel.ɵfac = function MatSingleDateSelectionModel_Factory(t) { return new (t || MatSingleDateSelectionModel)(ɵngcc0.ɵɵinject(ɵngcc2.DateAdapter)); };\nMatSingleDateSelectionModel.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: MatSingleDateSelectionModel, factory: MatSingleDateSelectionModel.ɵfac });\nMatSingleDateSelectionModel.ctorParameters = () => [\n    { type: DateAdapter }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSingleDateSelectionModel, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc2.DateAdapter }]; }, null); })();\n/**  A selection model that contains a date range. */\nclass MatRangeDateSelectionModel extends MatDateSelectionModel {\n    constructor(adapter) {\n        super(new DateRange(null, null), adapter);\n    }\n    /**\n     * Adds a date to the current selection. In the case of a date range selection, the added date\n     * fills in the next `null` value in the range. If both the start and the end already have a date,\n     * the selection is reset so that the given date is the new `start` and the `end` is null.\n     */\n    add(date) {\n        let { start, end } = this.selection;\n        if (start == null) {\n            start = date;\n        }\n        else if (end == null) {\n            end = date;\n        }\n        else {\n            start = date;\n            end = null;\n        }\n        super.updateSelection(new DateRange(start, end), this);\n    }\n    /** Checks whether the current selection is valid. */\n    isValid() {\n        const { start, end } = this.selection;\n        // Empty ranges are valid.\n        if (start == null && end == null) {\n            return true;\n        }\n        // Complete ranges are only valid if both dates are valid and the start is before the end.\n        if (start != null && end != null) {\n            return this._isValidDateInstance(start) && this._isValidDateInstance(end) &&\n                this._adapter.compareDate(start, end) <= 0;\n        }\n        // Partial ranges are valid if the start/end is valid.\n        return (start == null || this._isValidDateInstance(start)) &&\n            (end == null || this._isValidDateInstance(end));\n    }\n    /**\n     * Checks whether the current selection is complete. In the case of a date range selection, this\n     * is true if the current selection has a non-null `start` and `end`.\n     */\n    isComplete() {\n        return this.selection.start != null && this.selection.end != null;\n    }\n}\nMatRangeDateSelectionModel.ɵfac = function MatRangeDateSelectionModel_Factory(t) { return new (t || MatRangeDateSelectionModel)(ɵngcc0.ɵɵinject(ɵngcc2.DateAdapter)); };\nMatRangeDateSelectionModel.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: MatRangeDateSelectionModel, factory: MatRangeDateSelectionModel.ɵfac });\nMatRangeDateSelectionModel.ctorParameters = () => [\n    { type: DateAdapter }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRangeDateSelectionModel, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc2.DateAdapter }]; }, null); })();\n/** @docs-private */\nfunction MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n    return parent || new MatSingleDateSelectionModel(adapter);\n}\n/** Used to provide a single selection model to a component. */\nconst MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER = {\n    provide: MatDateSelectionModel,\n    deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n    useFactory: MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY,\n};\n/** @docs-private */\nfunction MAT_RANGE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n    return parent || new MatRangeDateSelectionModel(adapter);\n}\n/** Used to provide a range selection model to a component. */\nconst MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER = {\n    provide: MatDateSelectionModel,\n    deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n    useFactory: MAT_RANGE_DATE_SELECTION_MODEL_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token used to customize the date range selection behavior. */\nconst MAT_DATE_RANGE_SELECTION_STRATEGY = new InjectionToken('MAT_DATE_RANGE_SELECTION_STRATEGY');\n/** Provides the default date range selection behavior. */\nclass DefaultMatCalendarRangeStrategy {\n    constructor(_dateAdapter) {\n        this._dateAdapter = _dateAdapter;\n    }\n    selectionFinished(date, currentRange) {\n        let { start, end } = currentRange;\n        if (start == null) {\n            start = date;\n        }\n        else if (end == null && date && this._dateAdapter.compareDate(date, start) >= 0) {\n            end = date;\n        }\n        else {\n            start = date;\n            end = null;\n        }\n        return new DateRange(start, end);\n    }\n    createPreview(activeDate, currentRange) {\n        let start = null;\n        let end = null;\n        if (currentRange.start && !currentRange.end && activeDate) {\n            start = currentRange.start;\n            end = activeDate;\n        }\n        return new DateRange(start, end);\n    }\n}\nDefaultMatCalendarRangeStrategy.ɵfac = function DefaultMatCalendarRangeStrategy_Factory(t) { return new (t || DefaultMatCalendarRangeStrategy)(ɵngcc0.ɵɵinject(ɵngcc2.DateAdapter)); };\nDefaultMatCalendarRangeStrategy.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DefaultMatCalendarRangeStrategy, factory: DefaultMatCalendarRangeStrategy.ɵfac });\nDefaultMatCalendarRangeStrategy.ctorParameters = () => [\n    { type: DateAdapter }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DefaultMatCalendarRangeStrategy, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc2.DateAdapter }]; }, null); })();\n/** @docs-private */\nfunction MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY(parent, adapter) {\n    return parent || new DefaultMatCalendarRangeStrategy(adapter);\n}\n/** @docs-private */\nconst MAT_CALENDAR_RANGE_STRATEGY_PROVIDER = {\n    provide: MAT_DATE_RANGE_SELECTION_STRATEGY,\n    deps: [[new Optional(), new SkipSelf(), MAT_DATE_RANGE_SELECTION_STRATEGY], DateAdapter],\n    useFactory: MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DAYS_PER_WEEK = 7;\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\nclass MatMonthView {\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir, _rangeStrategy) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rangeStrategy = _rangeStrategy;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new date is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits when any date is selected. */\n        this._userSelection = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     */\n    get activeDate() { return this._activeDate; }\n    set activeDate(value) {\n        const oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setRanges(this._selected);\n    }\n    /** The minimum selectable date. */\n    get minDate() { return this._minDate; }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() { return this._maxDate; }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnChanges(changes) {\n        const comparisonChange = changes['comparisonStart'] || changes['comparisonEnd'];\n        if (comparisonChange && !comparisonChange.firstChange) {\n            this._setRanges(this.selected);\n        }\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Handles when a new date is selected. */\n    _dateSelected(event) {\n        const date = event.value;\n        const selectedYear = this._dateAdapter.getYear(this.activeDate);\n        const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n        const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n        let rangeStartDate;\n        let rangeEndDate;\n        if (this._selected instanceof DateRange) {\n            rangeStartDate = this._getDateInCurrentMonth(this._selected.start);\n            rangeEndDate = this._getDateInCurrentMonth(this._selected.end);\n        }\n        else {\n            rangeStartDate = rangeEndDate = this._getDateInCurrentMonth(this._selected);\n        }\n        if (rangeStartDate !== date || rangeEndDate !== date) {\n            this.selectedChange.emit(selectedDate);\n        }\n        this._userSelection.emit({ value: selectedDate, event: event.event });\n    }\n    /** Handles keydown events on the calendar body when calendar is in month view. */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n                    this._dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this._dateSelected({ value: this._dateAdapter.getDate(this._activeDate), event });\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n                return;\n            case ESCAPE:\n                // Abort the current range selection if the user presses escape mid-selection.\n                if (this._previewEnd != null) {\n                    this._previewStart = this._previewEnd = null;\n                    this.selectedChange.emit(null);\n                    this._userSelection.emit({ value: null, event });\n                    event.preventDefault();\n                    event.stopPropagation(); // Prevents the overlay from closing.\n                }\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /** Initializes this month view. */\n    _init() {\n        this._setRanges(this.selected);\n        this._todayDate = this._getCellCompareValue(this._dateAdapter.today());\n        this._monthLabel =\n            this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n                .toLocaleUpperCase();\n        let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n        this._firstWeekOffset =\n            (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n                this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n        this._initWeekdays();\n        this._createWeekCells();\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell(movePreview) {\n        this._matCalendarBody._focusActiveCell(movePreview);\n    }\n    /** Called when the user has activated a new cell and the preview needs to be updated. */\n    _previewChanged({ event, value: cell }) {\n        if (this._rangeStrategy) {\n            // We can assume that this will be a range, because preview\n            // events aren't fired for single date selections.\n            const value = cell ? cell.rawValue : null;\n            const previewRange = this._rangeStrategy.createPreview(value, this.selected, event);\n            this._previewStart = this._getCellCompareValue(previewRange.start);\n            this._previewEnd = this._getCellCompareValue(previewRange.end);\n            // Note that here we need to use `detectChanges`, rather than `markForCheck`, because\n            // the way `_focusActiveCell` is set up at the moment makes it fire at the wrong time\n            // when navigating one month back using the keyboard which will cause this handler\n            // to throw a \"changed after checked\" error when updating the preview state.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /** Initializes the weekdays. */\n    _initWeekdays() {\n        const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n        const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n        const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        let weekdays = longWeekdays.map((long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        });\n        this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n    }\n    /** Creates MatCalendarCells for the dates in this month. */\n    _createWeekCells() {\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n        const dateNames = this._dateAdapter.getDateNames();\n        this._weeks = [[]];\n        for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell == DAYS_PER_WEEK) {\n                this._weeks.push([]);\n                cell = 0;\n            }\n            const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n            const enabled = this._shouldEnableDate(date);\n            const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n            const cellClasses = this.dateClass ? this.dateClass(date, 'month') : undefined;\n            this._weeks[this._weeks.length - 1].push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses, this._getCellCompareValue(date), date));\n        }\n    }\n    /** Date filter for the month */\n    _shouldEnableDate(date) {\n        return !!date &&\n            (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0) &&\n            (!this.dateFilter || this.dateFilter(date));\n    }\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     */\n    _getDateInCurrentMonth(date) {\n        return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n            this._dateAdapter.getDate(date) : null;\n    }\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n    _hasSameMonthAndYear(d1, d2) {\n        return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n            this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n    }\n    /** Gets the value that will be used to one cell to another. */\n    _getCellCompareValue(date) {\n        if (date) {\n            // We use the time since the Unix epoch to compare dates in this view, rather than the\n            // cell values, because we need to support ranges that span across multiple months/years.\n            const year = this._dateAdapter.getYear(date);\n            const month = this._dateAdapter.getMonth(date);\n            const day = this._dateAdapter.getDate(date);\n            return new Date(year, month, day).getTime();\n        }\n        return null;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the current range based on a model value. */\n    _setRanges(selectedValue) {\n        if (selectedValue instanceof DateRange) {\n            this._rangeStart = this._getCellCompareValue(selectedValue.start);\n            this._rangeEnd = this._getCellCompareValue(selectedValue.end);\n            this._isRange = true;\n        }\n        else {\n            this._rangeStart = this._rangeEnd = this._getCellCompareValue(selectedValue);\n            this._isRange = false;\n        }\n        this._comparisonRangeStart = this._getCellCompareValue(this.comparisonStart);\n        this._comparisonRangeEnd = this._getCellCompareValue(this.comparisonEnd);\n    }\n}\nMatMonthView.ɵfac = function MatMonthView_Factory(t) { return new (t || MatMonthView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_SELECTION_STRATEGY, 8)); };\nMatMonthView.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatMonthView, selectors: [[\"mat-month-view\"]], viewQuery: function MatMonthView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, outputs: { selectedChange: \"selectedChange\", _userSelection: \"_userSelection\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMonthView\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 7, vars: 13, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"scope\", \"col\", 4, \"ngFor\", \"ngForOf\"], [\"colspan\", \"7\", \"aria-hidden\", \"true\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"comparisonStart\", \"comparisonEnd\", \"previewStart\", \"previewEnd\", \"isRange\", \"labelMinRequiredCells\", \"activeCell\", \"selectedValueChange\", \"previewChange\", \"keydown\"], [\"scope\", \"col\"]], template: function MatMonthView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵtemplate(3, MatMonthView_th_3_Template, 2, 2, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tr\");\n        ɵngcc0.ɵɵelement(5, \"th\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"tbody\", 4);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMonthView_Template_tbody_selectedValueChange_6_listener($event) { return ctx._dateSelected($event); })(\"previewChange\", function MatMonthView_Template_tbody_previewChange_6_listener($event) { return ctx._previewChanged($event); })(\"keydown\", function MatMonthView_Template_tbody_keydown_6_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._weekdays);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._monthLabel)(\"rows\", ctx._weeks)(\"todayValue\", ctx._todayDate)(\"startValue\", ctx._rangeStart)(\"endValue\", ctx._rangeEnd)(\"comparisonStart\", ctx._comparisonRangeStart)(\"comparisonEnd\", ctx._comparisonRangeEnd)(\"previewStart\", ctx._previewStart)(\"previewEnd\", ctx._previewEnd)(\"isRange\", ctx._isRange)(\"labelMinRequiredCells\", 3)(\"activeCell\", ctx._dateAdapter.getDate(ctx.activeDate) - 1);\n    } }, directives: [ɵngcc1.NgForOf, MatCalendarBody], encapsulation: 2, changeDetection: 0 });\nMatMonthView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATE_RANGE_SELECTION_STRATEGY,] }, { type: Optional }] }\n];\nMatMonthView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    comparisonStart: [{ type: Input }],\n    comparisonEnd: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMonthView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-month-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr>\\n      <th scope=\\\"col\\\" *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">{{day.narrow}}</th>\\n    </tr>\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\" aria-hidden=\\\"true\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_monthLabel\\\"\\n         [rows]=\\\"_weeks\\\"\\n         [todayValue]=\\\"_todayDate!\\\"\\n         [startValue]=\\\"_rangeStart!\\\"\\n         [endValue]=\\\"_rangeEnd!\\\"\\n         [comparisonStart]=\\\"_comparisonRangeStart\\\"\\n         [comparisonEnd]=\\\"_comparisonRangeEnd\\\"\\n         [previewStart]=\\\"_previewStart\\\"\\n         [previewEnd]=\\\"_previewEnd\\\"\\n         [isRange]=\\\"_isRange\\\"\\n         [labelMinRequiredCells]=\\\"3\\\"\\n         [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\"\\n         (selectedValueChange)=\\\"_dateSelected($event)\\\"\\n         (previewChange)=\\\"_previewChanged($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matMonthView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATE_RANGE_SELECTION_STRATEGY]\n            }, {\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], comparisonStart: [{\n            type: Input\n        }], comparisonEnd: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst yearsPerPage = 24;\nconst yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\nclass MatMultiYearView {\n    constructor(_changeDetectorRef, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new year is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits the selected year. This doesn't imply a change on the selected date */\n        this.yearSelected = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /** The date to display in this multi-year view (everything other than the year is ignored). */\n    get activeDate() { return this._activeDate; }\n    set activeDate(value) {\n        let oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!isSameMultiYearView(this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setSelectedYear(value);\n    }\n    /** The minimum selectable date. */\n    get minDate() { return this._minDate; }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() { return this._maxDate; }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Initializes this multi-year view. */\n    _init() {\n        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n        // We want a range years such that we maximize the number of\n        // enabled dates visible at once. This prevents issues where the minimum year\n        // is the last item of a page OR the maximum year is the first item of a page.\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view.\n        const activeYear = this._dateAdapter.getYear(this._activeDate);\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n        this._years = [];\n        for (let i = 0, row = []; i < yearsPerPage; i++) {\n            row.push(minYearOfPage + i);\n            if (row.length == yearsPerRow) {\n                this._years.push(row.map(year => this._createCellForYear(year)));\n                row = [];\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Handles when a new year is selected. */\n    _yearSelected(event) {\n        const year = event.value;\n        this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n        let month = this._dateAdapter.getMonth(this.activeDate);\n        let daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n    _handleCalendarBodyKeydown(event) {\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this._yearSelected({ value: this._dateAdapter.getYear(this._activeDate), event });\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    _getActiveCell() {\n        return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /** Creates an MatCalendarCell for the given year. */\n    _createCellForYear(year) {\n        const date = this._dateAdapter.createDate(year, 0, 1);\n        const yearName = this._dateAdapter.getYearName(date);\n        const cellClasses = this.dateClass ? this.dateClass(date, 'multi-year') : undefined;\n        return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year), cellClasses);\n    }\n    /** Whether the given year is enabled. */\n    _shouldEnableYear(year) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n        const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the currently-highlighted year based on a model value. */\n    _setSelectedYear(value) {\n        this._selectedYear = null;\n        if (value instanceof DateRange) {\n            const displayValue = value.start || value.end;\n            if (displayValue) {\n                this._selectedYear = this._dateAdapter.getYear(displayValue);\n            }\n        }\n        else if (value) {\n            this._selectedYear = this._dateAdapter.getYear(value);\n        }\n    }\n}\nMatMultiYearView.ɵfac = function MatMultiYearView_Factory(t) { return new (t || MatMultiYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatMultiYearView.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatMultiYearView, selectors: [[\"mat-multi-year-view\"]], viewQuery: function MatMultiYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMultiYearView\"], decls: 5, vars: 7, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatMultiYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMultiYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._yearSelected($event); })(\"keydown\", function MatMultiYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"rows\", ctx._years)(\"todayValue\", ctx._todayYear)(\"startValue\", ctx._selectedYear)(\"endValue\", ctx._selectedYear)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._getActiveCell());\n    } }, directives: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\nMatMultiYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatMultiYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMultiYearView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-multi-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [rows]=\\\"_years\\\"\\n         [todayValue]=\\\"_todayYear\\\"\\n         [startValue]=\\\"_selectedYear!\\\"\\n         [endValue]=\\\"_selectedYear!\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_getActiveCell()\\\"\\n         (selectedValueChange)=\\\"_yearSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matMultiYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\nfunction isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {\n    const year1 = dateAdapter.getYear(date1);\n    const year2 = dateAdapter.getYear(date2);\n    const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n    return Math.floor((year1 - startingYear) / yearsPerPage) ===\n        Math.floor((year2 - startingYear) / yearsPerPage);\n}\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n */\nfunction getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {\n    const activeYear = dateAdapter.getYear(activeDate);\n    return euclideanModulo((activeYear - getStartingYear(dateAdapter, minDate, maxDate)), yearsPerPage);\n}\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n */\nfunction getStartingYear(dateAdapter, minDate, maxDate) {\n    let startingYear = 0;\n    if (maxDate) {\n        const maxYear = dateAdapter.getYear(maxDate);\n        startingYear = maxYear - yearsPerPage + 1;\n    }\n    else if (minDate) {\n        startingYear = dateAdapter.getYear(minDate);\n    }\n    return startingYear;\n}\n/** Gets remainder that is non-negative, even if first number is negative */\nfunction euclideanModulo(a, b) {\n    return (a % b + b) % b;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\nclass MatYearView {\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new month is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits the selected month. This doesn't imply a change on the selected date */\n        this.monthSelected = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /** The date to display in this year view (everything other than the year is ignored). */\n    get activeDate() { return this._activeDate; }\n    set activeDate(value) {\n        let oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setSelectedMonth(value);\n    }\n    /** The minimum selectable date. */\n    get minDate() { return this._minDate; }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() { return this._maxDate; }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Handles when a new month is selected. */\n    _monthSelected(event) {\n        const month = event.value;\n        const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        this.monthSelected.emit(normalizedDate);\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n        this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /** Handles keydown events on the calendar body when calendar is in year view. */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this._monthSelected({ value: this._dateAdapter.getMonth(this._activeDate), event });\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /** Initializes this year view. */\n    _init() {\n        this._setSelectedMonth(this.selected);\n        this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n        this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n        let monthNames = this._dateAdapter.getMonthNames('short');\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(row => row.map(month => this._createCellForMonth(month, monthNames[month])));\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n    _getMonthInCurrentYear(date) {\n        return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n            this._dateAdapter.getMonth(date) : null;\n    }\n    /** Creates an MatCalendarCell for the given month. */\n    _createCellForMonth(month, monthName) {\n        const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.monthYearA11yLabel);\n        const cellClasses = this.dateClass ? this.dateClass(date, 'year') : undefined;\n        return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month), cellClasses);\n    }\n    /** Whether the given month is enabled. */\n    _shouldEnableMonth(month) {\n        const activeYear = this._dateAdapter.getYear(this.activeDate);\n        if (month === undefined || month === null ||\n            this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n        if (!this.dateFilter) {\n            return true;\n        }\n        const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     */\n    _isYearAndMonthAfterMaxDate(year, month) {\n        if (this.maxDate) {\n            const maxYear = this._dateAdapter.getYear(this.maxDate);\n            const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     */\n    _isYearAndMonthBeforeMinDate(year, month) {\n        if (this.minDate) {\n            const minYear = this._dateAdapter.getYear(this.minDate);\n            const minMonth = this._dateAdapter.getMonth(this.minDate);\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n        return false;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the currently-selected month based on a model value. */\n    _setSelectedMonth(value) {\n        if (value instanceof DateRange) {\n            this._selectedMonth = this._getMonthInCurrentYear(value.start) ||\n                this._getMonthInCurrentYear(value.end);\n        }\n        else {\n            this._selectedMonth = this._getMonthInCurrentYear(value);\n        }\n    }\n}\nMatYearView.ɵfac = function MatYearView_Factory(t) { return new (t || MatYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatYearView.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatYearView, selectors: [[\"mat-year-view\"]], viewQuery: function MatYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", monthSelected: \"monthSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matYearView\"], decls: 5, vars: 9, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"labelMinRequiredCells\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._monthSelected($event); })(\"keydown\", function MatYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._yearLabel)(\"rows\", ctx._months)(\"todayValue\", ctx._todayMonth)(\"startValue\", ctx._selectedMonth)(\"endValue\", ctx._selectedMonth)(\"labelMinRequiredCells\", 2)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._dateAdapter.getMonth(ctx.activeDate));\n    } }, directives: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\nMatYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatYearView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_yearLabel\\\"\\n         [rows]=\\\"_months\\\"\\n         [todayValue]=\\\"_todayMonth!\\\"\\n         [startValue]=\\\"_selectedMonth!\\\"\\n         [endValue]=\\\"_selectedMonth!\\\"\\n         [labelMinRequiredCells]=\\\"2\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\"\\n         (selectedValueChange)=\\\"_monthSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default header for MatCalendar */\nclass MatCalendarHeader {\n    constructor(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n        this._intl = _intl;\n        this.calendar = calendar;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    /** The label for the current calendar view. */\n    get periodButtonText() {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter\n                .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n                .toLocaleUpperCase();\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYearName(this.calendar.activeDate);\n        }\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view, and the last year is\n        // just yearsPerPage - 1 away.\n        const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n        const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n        const minYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\n        const maxYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\n        return this._intl.formatYearRange(minYearName, maxYearName);\n    }\n    get periodButtonLabel() {\n        return this.calendar.currentView == 'month' ?\n            this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n    }\n    /** The label for the previous button. */\n    get prevButtonLabel() {\n        return {\n            'month': this._intl.prevMonthLabel,\n            'year': this._intl.prevYearLabel,\n            'multi-year': this._intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /** The label for the next button. */\n    get nextButtonLabel() {\n        return {\n            'month': this._intl.nextMonthLabel,\n            'year': this._intl.nextYearLabel,\n            'multi-year': this._intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /** Handles user clicks on the period label. */\n    currentPeriodClicked() {\n        this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n    }\n    /** Handles user clicks on the previous button. */\n    previousClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n    }\n    /** Handles user clicks on the next button. */\n    nextClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n    }\n    /** Whether the previous period button is enabled. */\n    previousEnabled() {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n        return !this.calendar.minDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n    /** Whether the next period button is enabled. */\n    nextEnabled() {\n        return !this.calendar.maxDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\n    _isSameView(date1, date2) {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n                this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n        }\n        // Otherwise we are in 'multi-year' view.\n        return isSameMultiYearView(this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n    }\n}\nMatCalendarHeader.ɵfac = function MatCalendarHeader_Factory(t) { return new (t || MatCalendarHeader)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatCalendar)), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatCalendarHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatCalendarHeader, selectors: [[\"mat-calendar-header\"]], exportAs: [\"matCalendarHeader\"], ngContentSelectors: _c1, decls: 9, vars: 8, consts: [[1, \"mat-calendar-header\"], [1, \"mat-calendar-controls\"], [\"mat-button\", \"\", \"type\", \"button\", \"cdkAriaLive\", \"polite\", 1, \"mat-calendar-period-button\", 3, \"click\"], [1, \"mat-calendar-arrow\"], [1, \"mat-calendar-spacer\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-previous-button\", 3, \"disabled\", \"click\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-next-button\", 3, \"disabled\", \"click\"]], template: function MatCalendarHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"button\", 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_2_listener() { return ctx.currentPeriodClicked(); });\n        ɵngcc0.ɵɵtext(3);\n        ɵngcc0.ɵɵelement(4, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(5, \"div\", 4);\n        ɵngcc0.ɵɵprojection(6);\n        ɵngcc0.ɵɵelementStart(7, \"button\", 5);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_7_listener() { return ctx.previousClicked(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(8, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_8_listener() { return ctx.nextClicked(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.periodButtonLabel);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.periodButtonText, \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"mat-calendar-invert\", ctx.calendar.currentView != \"month\");\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.previousEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.prevButtonLabel);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.nextEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.nextButtonLabel);\n    } }, directives: [ɵngcc4.MatButton, ɵngcc5.CdkAriaLive], encapsulation: 2, changeDetection: 0 });\nMatCalendarHeader.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: MatCalendar, decorators: [{ type: Inject, args: [forwardRef(() => MatCalendar),] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendarHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-calendar-header',\n                template: \"<div class=\\\"mat-calendar-header\\\">\\n  <div class=\\\"mat-calendar-controls\\\">\\n    <button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\"\\n            (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\"\\n            cdkAriaLive=\\\"polite\\\">\\n      {{periodButtonText}}\\n      <div class=\\\"mat-calendar-arrow\\\"\\n           [class.mat-calendar-invert]=\\\"calendar.currentView != 'month'\\\"></div>\\n    </button>\\n\\n    <div class=\\\"mat-calendar-spacer\\\"></div>\\n\\n    <ng-content></ng-content>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\"\\n            [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\"\\n            [attr.aria-label]=\\\"prevButtonLabel\\\">\\n    </button>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\"\\n            [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\"\\n            [attr.aria-label]=\\\"nextButtonLabel\\\">\\n    </button>\\n  </div>\\n</div>\\n\",\n                exportAs: 'matCalendarHeader',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: MatCalendar, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatCalendar)]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\nclass MatCalendar {\n    constructor(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Used for scheduling that focus should be moved to the active cell on the next tick.\n         * We need to schedule it, rather than do it immediately, because we have to wait\n         * for Angular to re-evaluate the view children.\n         */\n        this._moveFocusOnNextTick = false;\n        /** Whether the calendar should be started in month or year view. */\n        this.startView = 'month';\n        /**\n         * Emits when the currently selected date changes.\n         * @breaking-change 11.0.0 Emitted value to change to `D | null`.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the year chosen in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits the month chosen in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /** Emits when any date is selected. */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits whenever there is a state change that the header may need to respond to.\n         */\n        this.stateChanges = new Subject();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._intlChanges = _intl.changes.subscribe(() => {\n            _changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n    /** A date representing the period (month or year) to start the calendar in. */\n    get startAt() { return this._startAt; }\n    set startAt(value) {\n        this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The currently selected date. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n    }\n    /** The minimum selectable date. */\n    get minDate() { return this._minDate; }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() { return this._maxDate; }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     */\n    get activeDate() { return this._clampedActiveDate; }\n    set activeDate(value) {\n        this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether the calendar is in month view. */\n    get currentView() { return this._currentView; }\n    set currentView(value) {\n        this._currentView = value;\n        this._moveFocusOnNextTick = true;\n        this._changeDetectorRef.markForCheck();\n    }\n    ngAfterContentInit() {\n        this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n        this.activeDate = this.startAt || this._dateAdapter.today();\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n    ngAfterViewChecked() {\n        if (this._moveFocusOnNextTick) {\n            this._moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    ngOnChanges(changes) {\n        const change = changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n        if (change && !change.firstChange) {\n            const view = this._getCurrentViewComponent();\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n                this._changeDetectorRef.detectChanges();\n                view._init();\n            }\n        }\n        this.stateChanges.next();\n    }\n    focusActiveCell() {\n        this._getCurrentViewComponent()._focusActiveCell(false);\n    }\n    /** Updates today's date after an update of the active date */\n    updateTodaysDate() {\n        const currentView = this.currentView;\n        let view;\n        if (currentView === 'month') {\n            view = this.monthView;\n        }\n        else if (currentView === 'year') {\n            view = this.yearView;\n        }\n        else {\n            view = this.multiYearView;\n        }\n        view._init();\n    }\n    /** Handles date selection in the month view. */\n    _dateSelected(event) {\n        const date = event.value;\n        if (this.selected instanceof DateRange ||\n            (date && !this._dateAdapter.sameDate(date, this.selected))) {\n            // @breaking-change 11.0.0 remove non-null assertion\n            // once the `selectedChange` is allowed to be null.\n            this.selectedChange.emit(date);\n        }\n        this._userSelection.emit(event);\n    }\n    /** Handles year selection in the multiyear view. */\n    _yearSelectedInMultiYearView(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /** Handles month selection in the year view. */\n    _monthSelectedInYearView(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /** Handles year/month selection in the multi-year/year views. */\n    _goToDateInView(date, view) {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n    /** Returns the component instance that corresponds to the current calendar view. */\n    _getCurrentViewComponent() {\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\nMatCalendar.ɵfac = function MatCalendar_Factory(t) { return new (t || MatCalendar)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatCalendar.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatCalendar, selectors: [[\"mat-calendar\"]], viewQuery: function MatCalendar_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatMonthView, 5);\n        ɵngcc0.ɵɵviewQuery(MatYearView, 5);\n        ɵngcc0.ɵɵviewQuery(MatMultiYearView, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.monthView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.yearView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.multiYearView = _t.first);\n    } }, hostAttrs: [1, \"mat-calendar\"], inputs: { startView: \"startView\", startAt: \"startAt\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", headerComponent: \"headerComponent\", dateFilter: \"dateFilter\", dateClass: \"dateClass\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", _userSelection: \"_userSelection\" }, exportAs: [\"matCalendar\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER]), ɵngcc0.ɵɵNgOnChangesFeature], decls: 5, vars: 5, consts: [[3, \"cdkPortalOutlet\"], [\"cdkMonitorSubtreeFocus\", \"\", \"tabindex\", \"-1\", 1, \"mat-calendar-content\", 3, \"ngSwitch\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"activeDateChange\", \"_userSelection\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"monthSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"yearSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"activeDateChange\", \"_userSelection\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"monthSelected\", \"selectedChange\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"yearSelected\", \"selectedChange\"]], template: function MatCalendar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendar_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatCalendar_mat_month_view_2_Template, 1, 8, \"mat-month-view\", 2);\n        ɵngcc0.ɵɵtemplate(3, MatCalendar_mat_year_view_3_Template, 1, 6, \"mat-year-view\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatCalendar_mat_multi_year_view_4_Template, 1, 6, \"mat-multi-year-view\", 4);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._calendarHeaderPortal);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.currentView);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"month\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"year\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"multi-year\");\n    } }, directives: [ɵngcc6.CdkPortalOutlet, ɵngcc5.CdkMonitorFocus, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, MatMonthView, MatYearView, MatMultiYearView], styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatCalendar.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\nMatCalendar.propDecorators = {\n    headerComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    comparisonStart: [{ type: Input }],\n    comparisonEnd: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    monthView: [{ type: ViewChild, args: [MatMonthView,] }],\n    yearView: [{ type: ViewChild, args: [MatYearView,] }],\n    multiYearView: [{ type: ViewChild, args: [MatMultiYearView,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-calendar',\n                template: \"<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template>\\n\\n<div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\">\\n  <mat-month-view\\n      *ngSwitchCase=\\\"'month'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      [comparisonStart]=\\\"comparisonStart\\\"\\n      [comparisonEnd]=\\\"comparisonEnd\\\"\\n      (_userSelection)=\\\"_dateSelected($event)\\\">\\n  </mat-month-view>\\n\\n  <mat-year-view\\n      *ngSwitchCase=\\\"'year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (monthSelected)=\\\"_monthSelectedInYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'month')\\\">\\n  </mat-year-view>\\n\\n  <mat-multi-year-view\\n      *ngSwitchCase=\\\"'multi-year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'year')\\\">\\n  </mat-multi-year-view>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-calendar'\n                },\n                exportAs: 'matCalendar',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER],\n                styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}\\n\"]\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { startView: [{\n            type: Input\n        }], selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], startAt: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], headerComponent: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], comparisonStart: [{\n            type: Input\n        }], comparisonEnd: [{\n            type: Input\n        }], monthView: [{\n            type: ViewChild,\n            args: [MatMonthView]\n        }], yearView: [{\n            type: ViewChild,\n            args: [MatYearView]\n        }], multiYearView: [{\n            type: ViewChild,\n            args: [MatMultiYearView]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material datepicker.\n * @docs-private\n */\nconst matDatepickerAnimations = {\n    /** Transforms the height of the datepicker's calendar. */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)'\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n    /** Fades in the content of the calendar. */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n        // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n/** Injection token that determines the scroll handling while the calendar is open. */\nconst MAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('mat-datepicker-scroll-strategy');\n/** @docs-private */\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n// Boilerplate for applying mixins to MatDatepickerContent.\n/** @docs-private */\nclass MatDatepickerContentBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatDatepickerContentMixinBase = mixinColor(MatDatepickerContentBase);\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\nclass MatDatepickerContent extends _MatDatepickerContentMixinBase {\n    constructor(elementRef, \n    /**\n     * @deprecated `_changeDetectorRef`, `_model` and `_rangeSelectionStrategy`\n     * parameters to become required.\n     * @breaking-change 11.0.0\n     */\n    _changeDetectorRef, _model, _dateAdapter, _rangeSelectionStrategy) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._model = _model;\n        this._dateAdapter = _dateAdapter;\n        this._rangeSelectionStrategy = _rangeSelectionStrategy;\n        this._subscriptions = new Subscription();\n        /** Current state of the animation. */\n        this._animationState = 'enter';\n        /** Emits when an animation has finished. */\n        this._animationDone = new Subject();\n    }\n    ngAfterViewInit() {\n        // @breaking-change 11.0.0 Remove null check for `_changeDetectorRef.\n        if (this._changeDetectorRef) {\n            this._subscriptions.add(this.datepicker._stateChanges.subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n        this._calendar.focusActiveCell();\n    }\n    ngOnDestroy() {\n        this._subscriptions.unsubscribe();\n        this._animationDone.complete();\n    }\n    _handleUserSelection(event) {\n        // @breaking-change 11.0.0 Remove null checks for _model,\n        // _rangeSelectionStrategy and _dateAdapter.\n        if (this._model && this._dateAdapter) {\n            const selection = this._model.selection;\n            const value = event.value;\n            const isRange = selection instanceof DateRange;\n            // If we're selecting a range and we have a selection strategy, always pass the value through\n            // there. Otherwise don't assign null values to the model, unless we're selecting a range.\n            // A null value when picking a range means that the user cancelled the selection (e.g. by\n            // pressing escape), whereas when selecting a single value it means that the value didn't\n            // change. This isn't very intuitive, but it's here for backwards-compatibility.\n            if (isRange && this._rangeSelectionStrategy) {\n                const newSelection = this._rangeSelectionStrategy.selectionFinished(value, selection, event.event);\n                this._model.updateSelection(newSelection, this);\n            }\n            else if (value && (isRange ||\n                !this._dateAdapter.sameDate(value, selection))) {\n                this._model.add(value);\n            }\n        }\n        if (!this._model || this._model.isComplete()) {\n            this.datepicker.close();\n        }\n    }\n    _startExitAnimation() {\n        this._animationState = 'void';\n        // @breaking-change 11.0.0 Remove null check for `_changeDetectorRef`.\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    _getSelected() {\n        // @breaking-change 11.0.0 Remove null check for `_model`.\n        return this._model ? this._model.selection : null;\n    }\n}\nMatDatepickerContent.ɵfac = function MatDatepickerContent_Factory(t) { return new (t || MatDatepickerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatDateSelectionModel), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_SELECTION_STRATEGY, 8)); };\nMatDatepickerContent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerContent, selectors: [[\"mat-datepicker-content\"]], viewQuery: function MatDatepickerContent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendar, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._calendar = _t.first);\n    } }, hostAttrs: [1, \"mat-datepicker-content\"], hostVars: 3, hostBindings: function MatDatepickerContent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@transformPanel.done\", function MatDatepickerContent_animation_transformPanel_done_HostBindingHandler() { return ctx._animationDone.next(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@transformPanel\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-content-touch\", ctx.datepicker.touchUi);\n    } }, inputs: { color: \"color\" }, exportAs: [\"matDatepickerContent\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 13, consts: [[\"cdkTrapFocus\", \"\", 3, \"id\", \"ngClass\", \"startAt\", \"startView\", \"minDate\", \"maxDate\", \"dateFilter\", \"headerComponent\", \"selected\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"yearSelected\", \"monthSelected\", \"_userSelection\"]], template: function MatDatepickerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-calendar\", 0);\n        ɵngcc0.ɵɵlistener(\"yearSelected\", function MatDatepickerContent_Template_mat_calendar_yearSelected_0_listener($event) { return ctx.datepicker._selectYear($event); })(\"monthSelected\", function MatDatepickerContent_Template_mat_calendar_monthSelected_0_listener($event) { return ctx.datepicker._selectMonth($event); })(\"_userSelection\", function MatDatepickerContent_Template_mat_calendar__userSelection_0_listener($event) { return ctx._handleUserSelection($event); });\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx.datepicker.id)(\"ngClass\", ctx.datepicker.panelClass)(\"startAt\", ctx.datepicker.startAt)(\"startView\", ctx.datepicker.startView)(\"minDate\", ctx.datepicker._getMinDate())(\"maxDate\", ctx.datepicker._getMaxDate())(\"dateFilter\", ctx.datepicker._getDateFilter())(\"headerComponent\", ctx.datepicker.calendarHeaderComponent)(\"selected\", ctx._getSelected())(\"dateClass\", ctx.datepicker.dateClass)(\"comparisonStart\", ctx.comparisonStart)(\"comparisonEnd\", ctx.comparisonEnd)(\"@fadeInCalendar\", \"enter\");\n    } }, directives: [MatCalendar, ɵngcc5.CdkTrapFocus, ɵngcc1.NgClass], styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\\n\"], encapsulation: 2, data: { animation: [\n            matDatepickerAnimations.transformPanel,\n            matDatepickerAnimations.fadeInCalendar,\n        ] }, changeDetection: 0 });\nMatDatepickerContent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatDateSelectionModel },\n    { type: DateAdapter },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_RANGE_SELECTION_STRATEGY,] }] }\n];\nMatDatepickerContent.propDecorators = {\n    _calendar: [{ type: ViewChild, args: [MatCalendar,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker-content',\n                template: \"<mat-calendar cdkTrapFocus\\n    [id]=\\\"datepicker.id\\\"\\n    [ngClass]=\\\"datepicker.panelClass\\\"\\n    [startAt]=\\\"datepicker.startAt\\\"\\n    [startView]=\\\"datepicker.startView\\\"\\n    [minDate]=\\\"datepicker._getMinDate()\\\"\\n    [maxDate]=\\\"datepicker._getMaxDate()\\\"\\n    [dateFilter]=\\\"datepicker._getDateFilter()\\\"\\n    [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\"\\n    [selected]=\\\"_getSelected()\\\"\\n    [dateClass]=\\\"datepicker.dateClass\\\"\\n    [comparisonStart]=\\\"comparisonStart\\\"\\n    [comparisonEnd]=\\\"comparisonEnd\\\"\\n    [@fadeInCalendar]=\\\"'enter'\\\"\\n    (yearSelected)=\\\"datepicker._selectYear($event)\\\"\\n    (monthSelected)=\\\"datepicker._selectMonth($event)\\\"\\n    (_userSelection)=\\\"_handleUserSelection($event)\\\">\\n</mat-calendar>\\n\",\n                host: {\n                    'class': 'mat-datepicker-content',\n                    '[@transformPanel]': '_animationState',\n                    '(@transformPanel.done)': '_animationDone.next()',\n                    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi'\n                },\n                animations: [\n                    matDatepickerAnimations.transformPanel,\n                    matDatepickerAnimations.fadeInCalendar,\n                ],\n                exportAs: 'matDatepickerContent',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['color'],\n                styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatDateSelectionModel }, { type: ɵngcc2.DateAdapter }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_RANGE_SELECTION_STRATEGY]\n            }] }]; }, { _calendar: [{\n            type: ViewChild,\n            args: [MatCalendar]\n        }] }); })();\n/** Base class for a datepicker. */\nclass MatDatepickerBase {\n    constructor(_dialog, _overlay, _ngZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, _document, _model) {\n        this._dialog = _dialog;\n        this._overlay = _overlay;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._document = _document;\n        this._model = _model;\n        this._inputStateChanges = Subscription.EMPTY;\n        /** The view that the calendar should start in. */\n        this.startView = 'month';\n        this._touchUi = false;\n        /** Preferred position of the datepicker in the X axis. */\n        this.xPosition = 'start';\n        /** Preferred position of the datepicker in the Y axis. */\n        this.yPosition = 'below';\n        /**\n         * Emits selected year in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits selected month in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /** Emits when the datepicker has been opened. */\n        this.openedStream = new EventEmitter();\n        /** Emits when the datepicker has been closed. */\n        this.closedStream = new EventEmitter();\n        this._opened = false;\n        /** The id for the datepicker calendar. */\n        this.id = `mat-datepicker-${datepickerUid++}`;\n        /** The element that was focused before the datepicker was opened. */\n        this._focusedElementBeforeOpen = null;\n        /** Unique class that will be added to the backdrop so that the test harnesses can look it up. */\n        this._backdropHarnessClass = `${this.id}-backdrop`;\n        /** Emits when the datepicker's state changes. */\n        this._stateChanges = new Subject();\n        if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /** The date to open the calendar to initially. */\n    get startAt() {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this._datepickerInput ? this._datepickerInput.getStartValue() : null);\n    }\n    set startAt(value) {\n        this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** Color palette to use on the datepicker's calendar. */\n    get color() {\n        return this._color ||\n            (this._datepickerInput ? this._datepickerInput.getThemePalette() : undefined);\n    }\n    set color(value) {\n        this._color = value;\n    }\n    /**\n     * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n     * than a popup and elements have more padding to allow for bigger touch targets.\n     */\n    get touchUi() { return this._touchUi; }\n    set touchUi(value) {\n        this._touchUi = coerceBooleanProperty(value);\n    }\n    /** Whether the datepicker pop-up should be disabled. */\n    get disabled() {\n        return this._disabled === undefined && this._datepickerInput ?\n            this._datepickerInput.disabled : !!this._disabled;\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._stateChanges.next(undefined);\n        }\n    }\n    /** Whether the calendar is open. */\n    get opened() { return this._opened; }\n    set opened(value) {\n        coerceBooleanProperty(value) ? this.open() : this.close();\n    }\n    /** The minimum selectable date. */\n    _getMinDate() {\n        return this._datepickerInput && this._datepickerInput.min;\n    }\n    /** The maximum selectable date. */\n    _getMaxDate() {\n        return this._datepickerInput && this._datepickerInput.max;\n    }\n    _getDateFilter() {\n        return this._datepickerInput && this._datepickerInput.dateFilter;\n    }\n    ngOnChanges(changes) {\n        const positionChange = changes['xPosition'] || changes['yPosition'];\n        if (positionChange && !positionChange.firstChange && this._popupRef) {\n            this._setConnectedPositions(this._popupRef.getConfig().positionStrategy);\n            if (this.opened) {\n                this._popupRef.updatePosition();\n            }\n        }\n        this._stateChanges.next(undefined);\n    }\n    ngOnDestroy() {\n        this._destroyPopup();\n        this.close();\n        this._inputStateChanges.unsubscribe();\n        this._stateChanges.complete();\n    }\n    /** Selects the given date */\n    select(date) {\n        this._model.add(date);\n    }\n    /** Emits the selected year in multiyear view */\n    _selectYear(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /** Emits selected month in year view */\n    _selectMonth(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * Register an input with this datepicker.\n     * @param input The datepicker input to register with this datepicker.\n     * @returns Selection model that the input should hook itself up to.\n     */\n    _registerInput(input) {\n        if (this._datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('A MatDatepicker can only be associated with a single input.');\n        }\n        this._inputStateChanges.unsubscribe();\n        this._datepickerInput = input;\n        this._inputStateChanges =\n            input.stateChanges.subscribe(() => this._stateChanges.next(undefined));\n        return this._model;\n    }\n    /** Open the calendar. */\n    open() {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this._datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Attempted to open an MatDatepicker with no associated input.');\n        }\n        if (this._document) {\n            this._focusedElementBeforeOpen = this._document.activeElement;\n        }\n        this.touchUi ? this._openAsDialog() : this._openAsPopup();\n        this._opened = true;\n        this.openedStream.emit();\n    }\n    /** Close the calendar. */\n    close() {\n        if (!this._opened) {\n            return;\n        }\n        if (this._popupComponentRef && this._popupRef) {\n            const instance = this._popupComponentRef.instance;\n            instance._startExitAnimation();\n            instance._animationDone.pipe(take(1)).subscribe(() => this._destroyPopup());\n        }\n        if (this._dialogRef) {\n            this._dialogRef.close();\n            this._dialogRef = null;\n        }\n        const completeClose = () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this._focusedElementBeforeOpen = null;\n            }\n        };\n        if (this._focusedElementBeforeOpen &&\n            typeof this._focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this._focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        }\n        else {\n            completeClose();\n        }\n    }\n    /** Open the calendar as a dialog. */\n    _openAsDialog() {\n        // Usually this would be handled by `open` which ensures that we can only have one overlay\n        // open at a time, however since we reset the variables in async handlers some overlays\n        // may slip through if the user opens and closes multiple times in quick succession (e.g.\n        // by holding down the enter key).\n        if (this._dialogRef) {\n            this._dialogRef.close();\n        }\n        this._dialogRef = this._dialog.open(MatDatepickerContent, {\n            direction: this._dir ? this._dir.value : 'ltr',\n            viewContainerRef: this._viewContainerRef,\n            panelClass: 'mat-datepicker-dialog',\n            // These values are all the same as the defaults, but we set them explicitly so that the\n            // datepicker dialog behaves consistently even if the user changed the defaults.\n            hasBackdrop: true,\n            disableClose: false,\n            backdropClass: ['cdk-overlay-dark-backdrop', this._backdropHarnessClass],\n            width: '',\n            height: '',\n            minWidth: '',\n            minHeight: '',\n            maxWidth: '80vw',\n            maxHeight: '',\n            position: {},\n            autoFocus: true,\n            // `MatDialog` has focus restoration built in, however we want to disable it since the\n            // datepicker also has focus restoration for dropdown mode. We want to do this, in order\n            // to ensure that the timing is consistent between dropdown and dialog modes since `MatDialog`\n            // restores focus when the animation is finished, but the datepicker does it immediately.\n            // Furthermore, this avoids any conflicts where the datepicker consumer might move focus\n            // inside the `closed` event which is dispatched immediately.\n            restoreFocus: false\n        });\n        this._dialogRef.afterClosed().subscribe(() => this.close());\n        this._forwardContentValues(this._dialogRef.componentInstance);\n    }\n    /** Open the calendar as a popup. */\n    _openAsPopup() {\n        const portal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n        this._destroyPopup();\n        this._createPopup();\n        this._popupComponentRef = this._popupRef.attach(portal);\n        this._forwardContentValues(this._popupComponentRef.instance);\n        // Update the position once the calendar has rendered.\n        this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n            this._popupRef.updatePosition();\n        });\n    }\n    /** Forwards relevant values from the datepicker to the datepicker content inside the overlay. */\n    _forwardContentValues(instance) {\n        instance.datepicker = this;\n        instance.color = this.color;\n    }\n    /** Create the popup. */\n    _createPopup() {\n        const positionStrategy = this._overlay.position()\n            .flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin())\n            .withTransformOriginOn('.mat-datepicker-content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition();\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this._setConnectedPositions(positionStrategy),\n            hasBackdrop: true,\n            backdropClass: ['mat-overlay-transparent-backdrop', this._backdropHarnessClass],\n            direction: this._dir,\n            scrollStrategy: this._scrollStrategy(),\n            panelClass: 'mat-datepicker-popup',\n        });\n        this._popupRef = this._overlay.create(overlayConfig);\n        this._popupRef.overlayElement.setAttribute('role', 'dialog');\n        merge(this._popupRef.backdropClick(), this._popupRef.detachments(), this._popupRef.keydownEvents().pipe(filter(event => {\n            // Closing on alt + up is only valid when there's an input associated with the datepicker.\n            return event.keyCode === ESCAPE ||\n                (this._datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n        }))).subscribe(event => {\n            if (event) {\n                event.preventDefault();\n            }\n            this.close();\n        });\n    }\n    /** Destroys the current popup overlay. */\n    _destroyPopup() {\n        if (this._popupRef) {\n            this._popupRef.dispose();\n            this._popupRef = this._popupComponentRef = null;\n        }\n    }\n    /** Sets the positions of the datepicker in dropdown mode based on the current configuration. */\n    _setConnectedPositions(strategy) {\n        const primaryX = this.xPosition === 'end' ? 'end' : 'start';\n        const secondaryX = primaryX === 'start' ? 'end' : 'start';\n        const primaryY = this.yPosition === 'above' ? 'bottom' : 'top';\n        const secondaryY = primaryY === 'top' ? 'bottom' : 'top';\n        return strategy.withPositions([\n            {\n                originX: primaryX,\n                originY: secondaryY,\n                overlayX: primaryX,\n                overlayY: primaryY\n            },\n            {\n                originX: primaryX,\n                originY: primaryY,\n                overlayX: primaryX,\n                overlayY: secondaryY\n            },\n            {\n                originX: secondaryX,\n                originY: secondaryY,\n                overlayX: secondaryX,\n                overlayY: primaryY\n            },\n            {\n                originX: secondaryX,\n                originY: primaryY,\n                overlayX: secondaryX,\n                overlayY: secondaryY\n            }\n        ]);\n    }\n}\nMatDatepickerBase.ɵfac = function MatDatepickerBase_Factory(t) { return new (t || MatDatepickerBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc7.MatDialog), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATEPICKER_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MatDateSelectionModel)); };\nMatDatepickerBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerBase, inputs: { startView: \"startView\", xPosition: \"xPosition\", yPosition: \"yPosition\", startAt: \"startAt\", color: \"color\", touchUi: \"touchUi\", disabled: \"disabled\", opened: \"opened\", calendarHeaderComponent: \"calendarHeaderComponent\", panelClass: \"panelClass\", dateClass: \"dateClass\" }, outputs: { yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", openedStream: \"opened\", closedStream: \"closed\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nMatDatepickerBase.ctorParameters = () => [\n    { type: MatDialog },\n    { type: Overlay },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATEPICKER_SCROLL_STRATEGY,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDateSelectionModel }\n];\nMatDatepickerBase.propDecorators = {\n    calendarHeaderComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    color: [{ type: Input }],\n    touchUi: [{ type: Input }],\n    disabled: [{ type: Input }],\n    xPosition: [{ type: Input }],\n    yPosition: [{ type: Input }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    panelClass: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    openedStream: [{ type: Output, args: ['opened',] }],\n    closedStream: [{ type: Output, args: ['closed',] }],\n    opened: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc7.MatDialog }, { type: ɵngcc8.Overlay }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATEPICKER_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDateSelectionModel }]; }, { startView: [{\n            type: Input\n        }], xPosition: [{\n            type: Input\n        }], yPosition: [{\n            type: Input\n        }], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], startAt: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], touchUi: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], calendarHeaderComponent: [{\n            type: Input\n        }], panelClass: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\nclass MatDatepicker extends MatDatepickerBase {\n}\nMatDatepicker.ɵfac = /*@__PURE__*/ function () { let ɵMatDatepicker_BaseFactory; return function MatDatepicker_Factory(t) { return (ɵMatDatepicker_BaseFactory || (ɵMatDatepicker_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatDatepicker)))(t || MatDatepicker); }; }();\nMatDatepicker.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDatepicker, selectors: [[\"mat-datepicker\"]], exportAs: [\"matDatepicker\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function MatDatepicker_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepicker, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker',\n                template: '',\n                exportAs: 'matDatepicker',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n */\nclass MatDatepickerInputEvent {\n    constructor(\n    /** Reference to the datepicker input component that emitted the event. */\n    target, \n    /** Reference to the native input element associated with the datepicker input. */\n    targetElement) {\n        this.target = target;\n        this.targetElement = targetElement;\n        this.value = this.target.value;\n    }\n}\n/** Base class for datepicker inputs. */\nclass MatDatepickerInputBase {\n    constructor(_elementRef, _dateAdapter, _dateFormats) {\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        /** Emits when a `change` event is fired on this `<input>`. */\n        this.dateChange = new EventEmitter();\n        /** Emits when an `input` event is fired on this `<input>`. */\n        this.dateInput = new EventEmitter();\n        /** Emits when the value changes (either due to user input or programmatic change). */\n        this._valueChange = new EventEmitter();\n        /** Emits when the internal state has changed */\n        this.stateChanges = new Subject();\n        this._onTouched = () => { };\n        this._validatorOnChange = () => { };\n        this._cvaOnChange = () => { };\n        this._valueChangesSubscription = Subscription.EMPTY;\n        this._localeSubscription = Subscription.EMPTY;\n        /** The form control validator for whether the input parses. */\n        this._parseValidator = () => {\n            return this._lastValueValid ?\n                null : { 'matDatepickerParse': { 'text': this._elementRef.nativeElement.value } };\n        };\n        /** The form control validator for the date filter. */\n        this._filterValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const dateFilter = this._getDateFilter();\n            return !dateFilter || !controlValue || dateFilter(controlValue) ?\n                null : { 'matDatepickerFilter': true };\n        };\n        /** The form control validator for the min date. */\n        this._minValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const min = this._getMinDate();\n            return (!min || !controlValue ||\n                this._dateAdapter.compareDate(min, controlValue) <= 0) ?\n                null : { 'matDatepickerMin': { 'min': min, 'actual': controlValue } };\n        };\n        /** The form control validator for the max date. */\n        this._maxValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const max = this._getMaxDate();\n            return (!max || !controlValue ||\n                this._dateAdapter.compareDate(max, controlValue) >= 0) ?\n                null : { 'matDatepickerMax': { 'max': max, 'actual': controlValue } };\n        };\n        /** Whether the last value set on the input was valid. */\n        this._lastValueValid = false;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        // Update the displayed date when the locale changes.\n        this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n            this.value = this.value;\n        });\n    }\n    /** The value of the input. */\n    get value() {\n        return this._model ? this._getValueFromModel(this._model.selection) : this._pendingValue;\n    }\n    set value(value) {\n        value = this._dateAdapter.deserialize(value);\n        this._lastValueValid = this._isValidValue(value);\n        value = this._dateAdapter.getValidDateOrNull(value);\n        const oldDate = this.value;\n        this._assignValue(value);\n        this._formatValue(value);\n        if (!this._dateAdapter.sameDate(oldDate, value)) {\n            this._valueChange.emit(value);\n        }\n    }\n    /** Whether the datepicker-input is disabled. */\n    get disabled() { return !!this._disabled || this._parentDisabled(); }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        const element = this._elementRef.nativeElement;\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this.stateChanges.next(undefined);\n        }\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        // In Ivy static bindings are invoked earlier, before the element is attached to the DOM.\n        // This can cause an error to be thrown in some browsers (IE/Edge) which assert that the\n        // element has been inserted.\n        if (newValue && this._isInitialized && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n    /** Gets the base validator functions. */\n    _getValidators() {\n        return [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator];\n    }\n    /** Registers a date selection model with the input. */\n    _registerModel(model) {\n        this._model = model;\n        this._valueChangesSubscription.unsubscribe();\n        if (this._pendingValue) {\n            this._assignValue(this._pendingValue);\n        }\n        this._valueChangesSubscription = this._model.selectionChanged.subscribe(event => {\n            if (event.source !== this) {\n                const value = this._getValueFromModel(event.selection);\n                this._lastValueValid = this._isValidValue(value);\n                this._cvaOnChange(value);\n                this._onTouched();\n                this._formatValue(value);\n                // Note that we can't wrap the entire block with this logic, because for the range inputs\n                // we want to revalidate whenever either one of the inputs changes and we don't have a\n                // good way of distinguishing it at the moment.\n                if (this._canEmitChangeEvent(event)) {\n                    this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n                    this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n                }\n                if (this._outsideValueChanged) {\n                    this._outsideValueChanged();\n                }\n            }\n        });\n    }\n    ngAfterViewInit() {\n        this._isInitialized = true;\n    }\n    ngOnChanges(changes) {\n        if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n            this.stateChanges.next(undefined);\n        }\n    }\n    ngOnDestroy() {\n        this._valueChangesSubscription.unsubscribe();\n        this._localeSubscription.unsubscribe();\n        this._valueChange.complete();\n        this.stateChanges.complete();\n    }\n    /** @docs-private */\n    registerOnValidatorChange(fn) {\n        this._validatorOnChange = fn;\n    }\n    /** @docs-private */\n    validate(c) {\n        return this._validator ? this._validator(c) : null;\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this.value = value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._cvaOnChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    _onKeydown(event) {\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n        if (isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n            this._openPopup();\n            event.preventDefault();\n        }\n    }\n    _onInput(value) {\n        const lastValueWasValid = this._lastValueValid;\n        let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n        this._lastValueValid = this._isValidValue(date);\n        date = this._dateAdapter.getValidDateOrNull(date);\n        if (!this._dateAdapter.sameDate(date, this.value)) {\n            this._assignValue(date);\n            this._cvaOnChange(date);\n            this._valueChange.emit(date);\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }\n        else {\n            // Call the CVA change handler for invalid values\n            // since this is what marks the control as dirty.\n            if (value && !this.value) {\n                this._cvaOnChange(date);\n            }\n            if (lastValueWasValid !== this._lastValueValid) {\n                this._validatorOnChange();\n            }\n        }\n    }\n    _onChange() {\n        this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n    /** Handles blur events on the input. */\n    _onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this._formatValue(this.value);\n        }\n        this._onTouched();\n    }\n    /** Formats a value and sets it on the input element. */\n    _formatValue(value) {\n        this._elementRef.nativeElement.value =\n            value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n    }\n    /** Assigns a value to the model. */\n    _assignValue(value) {\n        // We may get some incoming values before the model was\n        // assigned. Save the value so that we can assign it later.\n        if (this._model) {\n            this._assignValueToModel(value);\n            this._pendingValue = null;\n        }\n        else {\n            this._pendingValue = value;\n        }\n    }\n    /** Whether a value is considered valid. */\n    _isValidValue(value) {\n        return !value || this._dateAdapter.isValid(value);\n    }\n    /**\n     * Checks whether a parent control is disabled. This is in place so that it can be overridden\n     * by inputs extending this one which can be placed inside of a group that can be disabled.\n     */\n    _parentDisabled() {\n        return false;\n    }\n}\nMatDatepickerInputBase.ɵfac = function MatDatepickerInputBase_Factory(t) { return new (t || MatDatepickerInputBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8)); };\nMatDatepickerInputBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerInputBase, inputs: { value: \"value\", disabled: \"disabled\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nMatDatepickerInputBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] }\n];\nMatDatepickerInputBase.propDecorators = {\n    value: [{ type: Input }],\n    disabled: [{ type: Input }],\n    dateChange: [{ type: Output }],\n    dateInput: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerInputBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }]; }, { dateChange: [{\n            type: Output\n        }], dateInput: [{\n            type: Output\n        }], value: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n/**\n * Checks whether the `SimpleChanges` object from an `ngOnChanges`\n * callback has any changes, accounting for date objects.\n */\nfunction dateInputsHaveChanged(changes, adapter) {\n    const keys = Object.keys(changes);\n    for (let key of keys) {\n        const { previousValue, currentValue } = changes[key];\n        if (adapter.isDateInstance(previousValue) && adapter.isDateInstance(currentValue)) {\n            if (!adapter.sameDate(previousValue, currentValue)) {\n                return true;\n            }\n        }\n        else {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nconst MAT_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatDatepickerInput),\n    multi: true\n};\n/** @docs-private */\nconst MAT_DATEPICKER_VALIDATORS = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatDatepickerInput),\n    multi: true\n};\n/** Directive used to connect an input to a MatDatepicker. */\nclass MatDatepickerInput extends MatDatepickerInputBase {\n    constructor(elementRef, dateAdapter, dateFormats, _formField) {\n        super(elementRef, dateAdapter, dateFormats);\n        this._formField = _formField;\n        this._validator = Validators.compose(super._getValidators());\n    }\n    /** The datepicker that this input is associated with. */\n    set matDatepicker(datepicker) {\n        if (datepicker) {\n            this._datepicker = datepicker;\n            this._registerModel(datepicker._registerInput(this));\n        }\n    }\n    /** The minimum valid date. */\n    get min() { return this._min; }\n    set min(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._min)) {\n            this._min = validValue;\n            this._validatorOnChange();\n        }\n    }\n    /** The maximum valid date. */\n    get max() { return this._max; }\n    set max(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._max)) {\n            this._max = validValue;\n            this._validatorOnChange();\n        }\n    }\n    /** Function that can be used to filter out dates within the datepicker. */\n    get dateFilter() { return this._dateFilter; }\n    set dateFilter(value) {\n        this._dateFilter = value;\n        this._validatorOnChange();\n    }\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return The element to connect the popup to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /** Returns the palette used by the input's form field, if any. */\n    getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /** Gets the value at which the calendar should start. */\n    getStartValue() {\n        return this.value;\n    }\n    /**\n     * @deprecated\n     * @breaking-change 8.0.0 Use `getConnectedOverlayOrigin` instead\n     */\n    getPopupConnectionElementRef() {\n        return this.getConnectedOverlayOrigin();\n    }\n    /** Opens the associated datepicker. */\n    _openPopup() {\n        if (this._datepicker) {\n            this._datepicker.open();\n        }\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue;\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            this._model.updateSelection(value, this);\n        }\n    }\n    /** Gets the input's minimum date. */\n    _getMinDate() {\n        return this._min;\n    }\n    /** Gets the input's maximum date. */\n    _getMaxDate() {\n        return this._max;\n    }\n    /** Gets the input's date filtering function. */\n    _getDateFilter() {\n        return this._dateFilter;\n    }\n    _canEmitChangeEvent() {\n        return true;\n    }\n}\nMatDatepickerInput.ɵfac = function MatDatepickerInput_Factory(t) { return new (t || MatDatepickerInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8)); };\nMatDatepickerInput.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerInput, selectors: [[\"input\", \"matDatepicker\", \"\"]], hostAttrs: [1, \"mat-datepicker-input\"], hostVars: 6, hostBindings: function MatDatepickerInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function MatDatepickerInput_input_HostBindingHandler($event) { return ctx._onInput($event.target.value); })(\"change\", function MatDatepickerInput_change_HostBindingHandler() { return ctx._onChange(); })(\"blur\", function MatDatepickerInput_blur_HostBindingHandler() { return ctx._onBlur(); })(\"keydown\", function MatDatepickerInput_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx._datepicker ? \"dialog\" : null)(\"aria-owns\", (ctx._datepicker == null ? null : ctx._datepicker.opened) && ctx._datepicker.id || null)(\"min\", ctx.min ? ctx._dateAdapter.toIso8601(ctx.min) : null)(\"max\", ctx.max ? ctx._dateAdapter.toIso8601(ctx.max) : null)(\"data-mat-calendar\", ctx._datepicker ? ctx._datepicker.id : null);\n    } }, inputs: { matDatepicker: \"matDatepicker\", min: \"min\", max: \"max\", dateFilter: [\"matDatepickerFilter\", \"dateFilter\"] }, exportAs: [\"matDatepickerInput\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_DATEPICKER_VALUE_ACCESSOR,\n            MAT_DATEPICKER_VALIDATORS,\n            { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatDatepickerInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] }\n];\nMatDatepickerInput.propDecorators = {\n    matDatepicker: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    dateFilter: [{ type: Input, args: ['matDatepickerFilter',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matDatepicker]',\n                providers: [\n                    MAT_DATEPICKER_VALUE_ACCESSOR,\n                    MAT_DATEPICKER_VALIDATORS,\n                    { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n                ],\n                host: {\n                    'class': 'mat-datepicker-input',\n                    '[attr.aria-haspopup]': '_datepicker ? \"dialog\" : null',\n                    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n                    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n                    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n                    // Used by the test harness to tie this input to its calendar. We can't depend on\n                    // `aria-owns` for this, because it's only defined while the calendar is open.\n                    '[attr.data-mat-calendar]': '_datepicker ? _datepicker.id : null',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)'\n                },\n                exportAs: 'matDatepickerInput'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc9.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }]; }, { matDatepicker: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input,\n            args: ['matDatepickerFilter']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Can be used to override the icon of a `matDatepickerToggle`. */\nclass MatDatepickerToggleIcon {\n}\nMatDatepickerToggleIcon.ɵfac = function MatDatepickerToggleIcon_Factory(t) { return new (t || MatDatepickerToggleIcon)(); };\nMatDatepickerToggleIcon.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerToggleIcon, selectors: [[\"\", \"matDatepickerToggleIcon\", \"\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerToggleIcon, [{\n        type: Directive,\n        args: [{\n                selector: '[matDatepickerToggleIcon]'\n            }]\n    }], null, null); })();\nclass MatDatepickerToggle {\n    constructor(_intl, _changeDetectorRef, defaultTabIndex) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._stateChanges = Subscription.EMPTY;\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n    }\n    /** Whether the toggle button is disabled. */\n    get disabled() {\n        if (this._disabled === undefined && this.datepicker) {\n            return this.datepicker.disabled;\n        }\n        return !!this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnChanges(changes) {\n        if (changes['datepicker']) {\n            this._watchStateChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.unsubscribe();\n    }\n    ngAfterContentInit() {\n        this._watchStateChanges();\n    }\n    _open(event) {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n    _watchStateChanges() {\n        const datepickerStateChanged = this.datepicker ? this.datepicker._stateChanges : of();\n        const inputStateChanged = this.datepicker && this.datepicker._datepickerInput ?\n            this.datepicker._datepickerInput.stateChanges : of();\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            of();\n        this._stateChanges.unsubscribe();\n        this._stateChanges = merge(this._intl.changes, datepickerStateChanged, inputStateChanged, datepickerToggled).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n}\nMatDatepickerToggle.ɵfac = function MatDatepickerToggle_Factory(t) { return new (t || MatDatepickerToggle)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatDatepickerToggle.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerToggle, selectors: [[\"mat-datepicker-toggle\"]], contentQueries: function MatDatepickerToggle_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDatepickerToggleIcon, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._customIcon = _t.first);\n    } }, viewQuery: function MatDatepickerToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c2, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._button = _t.first);\n    } }, hostAttrs: [1, \"mat-datepicker-toggle\"], hostVars: 8, hostBindings: function MatDatepickerToggle_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatDatepickerToggle_focus_HostBindingHandler() { return ctx._button.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : -1)(\"data-mat-calendar\", ctx.datepicker ? ctx.datepicker.id : null);\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-toggle-active\", ctx.datepicker && ctx.datepicker.opened)(\"mat-accent\", ctx.datepicker && ctx.datepicker.color === \"accent\")(\"mat-warn\", ctx.datepicker && ctx.datepicker.color === \"warn\");\n    } }, inputs: { tabIndex: \"tabIndex\", disabled: \"disabled\", datepicker: [\"for\", \"datepicker\"], disableRipple: \"disableRipple\" }, exportAs: [\"matDatepickerToggle\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c4, decls: 4, vars: 6, consts: [[\"mat-icon-button\", \"\", \"type\", \"button\", 3, \"disabled\", \"disableRipple\", \"click\"], [\"button\", \"\"], [\"class\", \"mat-datepicker-toggle-default-icon\", \"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 4, \"ngIf\"], [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 1, \"mat-datepicker-toggle-default-icon\"], [\"d\", \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"]], template: function MatDatepickerToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatDatepickerToggle_Template_button_click_0_listener($event) { return ctx._open($event); });\n        ɵngcc0.ɵɵtemplate(2, MatDatepickerToggle__svg_svg_2_Template, 2, 0, \"svg\", 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled)(\"disableRipple\", ctx.disableRipple);\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx.datepicker ? \"dialog\" : null)(\"aria-label\", ctx._intl.openCalendarLabel)(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._customIcon);\n    } }, directives: [ɵngcc4.MatButton, ɵngcc1.NgIf], styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDatepickerToggle.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatDatepickerToggle.propDecorators = {\n    datepicker: [{ type: Input, args: ['for',] }],\n    tabIndex: [{ type: Input }],\n    disabled: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    _customIcon: [{ type: ContentChild, args: [MatDatepickerToggleIcon,] }],\n    _button: [{ type: ViewChild, args: ['button',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker-toggle',\n                template: \"<button\\n  #button\\n  mat-icon-button\\n  type=\\\"button\\\"\\n  [attr.aria-haspopup]=\\\"datepicker ? 'dialog' : null\\\"\\n  [attr.aria-label]=\\\"_intl.openCalendarLabel\\\"\\n  [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n  [disabled]=\\\"disabled\\\"\\n  [disableRipple]=\\\"disableRipple\\\"\\n  (click)=\\\"_open($event)\\\">\\n\\n  <svg\\n    *ngIf=\\\"!_customIcon\\\"\\n    class=\\\"mat-datepicker-toggle-default-icon\\\"\\n    viewBox=\\\"0 0 24 24\\\"\\n    width=\\\"24px\\\"\\n    height=\\\"24px\\\"\\n    fill=\\\"currentColor\\\"\\n    focusable=\\\"false\\\">\\n    <path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/>\\n  </svg>\\n\\n  <ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content>\\n</button>\\n\",\n                host: {\n                    'class': 'mat-datepicker-toggle',\n                    // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n                    // consumer may have provided, while still being able to receive focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n                    '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n                    '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n                    // Used by the test harness to tie this toggle to its datepicker.\n                    '[attr.data-mat-calendar]': 'datepicker ? datepicker.id : null',\n                    '(focus)': '_button.focus()'\n                },\n                exportAs: 'matDatepickerToggle',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\\n\"]\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], datepicker: [{\n            type: Input,\n            args: ['for']\n        }], disableRipple: [{\n            type: Input\n        }], _customIcon: [{\n            type: ContentChild,\n            args: [MatDatepickerToggleIcon]\n        }], _button: [{\n            type: ViewChild,\n            args: ['button']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide the date range input wrapper component\n * to the parts without circular dependencies.\n */\nconst MAT_DATE_RANGE_INPUT_PARENT = new InjectionToken('MAT_DATE_RANGE_INPUT_PARENT');\n/**\n * Base class for the individual inputs that can be projected inside a `mat-date-range-input`.\n */\nclass MatDateRangeInputPartBase extends MatDatepickerInputBase {\n    constructor(_rangeInput, elementRef, _defaultErrorStateMatcher, _injector, _parentForm, _parentFormGroup, dateAdapter, dateFormats) {\n        super(elementRef, dateAdapter, dateFormats);\n        this._rangeInput = _rangeInput;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._injector = _injector;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this._outsideValueChanged = () => {\n            // Whenever the value changes outside the input we need to revalidate, because\n            // the validation state of each of the inputs depends on the other one.\n            this._validatorOnChange();\n        };\n    }\n    ngOnInit() {\n        // We need the date input to provide itself as a `ControlValueAccessor` and a `Validator`, while\n        // injecting its `NgControl` so that the error state is handled correctly. This introduces a\n        // circular dependency, because both `ControlValueAccessor` and `Validator` depend on the input\n        // itself. Usually we can work around it for the CVA, but there's no API to do it for the\n        // validator. We work around it here by injecting the `NgControl` in `ngOnInit`, after\n        // everything has been resolved.\n        const ngControl = this._injector.get(NgControl, null, InjectFlags.Self);\n        if (ngControl) {\n            this.ngControl = ngControl;\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n    /** Gets whether the input is empty. */\n    isEmpty() {\n        return this._elementRef.nativeElement.value.length === 0;\n    }\n    /** Gets the placeholder of the input. */\n    _getPlaceholder() {\n        return this._elementRef.nativeElement.placeholder;\n    }\n    /** Focuses the input. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    /** Handles `input` events on the input element. */\n    _onInput(value) {\n        super._onInput(value);\n        this._rangeInput._handleChildValueChange();\n    }\n    /** Opens the datepicker associated with the input. */\n    _openPopup() {\n        this._rangeInput._openDatepicker();\n    }\n    /** Gets the minimum date from the range input. */\n    _getMinDate() {\n        return this._rangeInput.min;\n    }\n    /** Gets the maximum date from the range input. */\n    _getMaxDate() {\n        return this._rangeInput.max;\n    }\n    /** Gets the date filter function from the range input. */\n    _getDateFilter() {\n        return this._rangeInput.dateFilter;\n    }\n    _parentDisabled() {\n        return this._rangeInput._groupDisabled;\n    }\n}\nMatDateRangeInputPartBase.ɵfac = function MatDateRangeInputPartBase_Factory(t) { return new (t || MatDateRangeInputPartBase)(ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_INPUT_PARENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8)); };\nMatDateRangeInputPartBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDateRangeInputPartBase, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatDateRangeInputPartBase.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATE_RANGE_INPUT_PARENT,] }] },\n    { type: ElementRef },\n    { type: ErrorStateMatcher },\n    { type: Injector },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDateRangeInputPartBase, [{\n        type: Directive\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATE_RANGE_INPUT_PARENT]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc10.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc10.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }]; }, null); })();\nconst _MatDateRangeInputBase = \n// Needs to be `as any`, because the base class is abstract.\nmixinErrorState(MatDateRangeInputPartBase);\n/** Input for entering the start date in a `mat-date-range-input`. */\nclass MatStartDate extends _MatDateRangeInputBase {\n    constructor(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n        // TODO(crisbeto): this constructor shouldn't be necessary, but ViewEngine doesn't seem to\n        // handle DI correctly when it is inherited from `MatDateRangeInputPartBase`. We can drop this\n        // constructor once ViewEngine is removed.\n        super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n        /** Validator that checks that the start date isn't after the end date. */\n        this._startValidator = (control) => {\n            const start = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const end = this._model ? this._model.selection.end : null;\n            return (!start || !end ||\n                this._dateAdapter.compareDate(start, end) <= 0) ?\n                null : { 'matStartDateInvalid': { 'end': end, 'actual': start } };\n        };\n        this._validator = Validators.compose([...super._getValidators(), this._startValidator]);\n        this._canEmitChangeEvent = (event) => {\n            return event.source !== this._rangeInput._endInput;\n        };\n    }\n    ngOnInit() {\n        // Normally this happens automatically, but it seems to break if not added explicitly when all\n        // of the criteria below are met:\n        // 1) The class extends a TS mixin.\n        // 2) The application is running in ViewEngine.\n        // 3) The application is being transpiled through tsickle.\n        // This can be removed once google3 is completely migrated to Ivy.\n        super.ngOnInit();\n    }\n    ngDoCheck() {\n        // Normally this happens automatically, but it seems to break if not added explicitly when all\n        // of the criteria below are met:\n        // 1) The class extends a TS mixin.\n        // 2) The application is running in ViewEngine.\n        // 3) The application is being transpiled through tsickle.\n        // This can be removed once google3 is completely migrated to Ivy.\n        super.ngDoCheck();\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue.start;\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            const range = new DateRange(value, this._model.selection.end);\n            this._model.updateSelection(range, this);\n            this._cvaOnChange(value);\n        }\n    }\n    _formatValue(value) {\n        super._formatValue(value);\n        // Any time the input value is reformatted we need to tell the parent.\n        this._rangeInput._handleChildValueChange();\n    }\n    /** Gets the value that should be used when mirroring the input's size. */\n    getMirrorValue() {\n        const element = this._elementRef.nativeElement;\n        const value = element.value;\n        return value.length > 0 ? value : element.placeholder;\n    }\n}\nMatStartDate.ɵfac = function MatStartDate_Factory(t) { return new (t || MatStartDate)(ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_INPUT_PARENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8)); };\nMatStartDate.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatStartDate, selectors: [[\"input\", \"matStartDate\", \"\"]], hostAttrs: [\"type\", \"text\", 1, \"mat-start-date\", \"mat-date-range-input-inner\"], hostVars: 6, hostBindings: function MatStartDate_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function MatStartDate_input_HostBindingHandler($event) { return ctx._onInput($event.target.value); })(\"change\", function MatStartDate_change_HostBindingHandler() { return ctx._onChange(); })(\"keydown\", function MatStartDate_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); })(\"blur\", function MatStartDate_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"id\", ctx._rangeInput.id)(\"aria-haspopup\", ctx._rangeInput.rangePicker ? \"dialog\" : null)(\"aria-owns\", (ctx._rangeInput.rangePicker == null ? null : ctx._rangeInput.rangePicker.opened) && ctx._rangeInput.rangePicker.id || null)(\"min\", ctx._getMinDate() ? ctx._dateAdapter.toIso8601(ctx._getMinDate()) : null)(\"max\", ctx._getMaxDate() ? ctx._dateAdapter.toIso8601(ctx._getMaxDate()) : null);\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: NG_VALUE_ACCESSOR, useExisting: MatStartDate, multi: true },\n            { provide: NG_VALIDATORS, useExisting: MatStartDate, multi: true }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatStartDate.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATE_RANGE_INPUT_PARENT,] }] },\n    { type: ElementRef },\n    { type: ErrorStateMatcher },\n    { type: Injector },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStartDate, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matStartDate]',\n                host: {\n                    'class': 'mat-start-date mat-date-range-input-inner',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(keydown)': '_onKeydown($event)',\n                    '[attr.id]': '_rangeInput.id',\n                    '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n                    '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',\n                    '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n                    '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n                    '(blur)': '_onBlur()',\n                    'type': 'text'\n                },\n                providers: [\n                    { provide: NG_VALUE_ACCESSOR, useExisting: MatStartDate, multi: true },\n                    { provide: NG_VALIDATORS, useExisting: MatStartDate, multi: true }\n                ]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATE_RANGE_INPUT_PARENT]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc10.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc10.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }]; }, null); })();\n/** Input for entering the end date in a `mat-date-range-input`. */\nclass MatEndDate extends _MatDateRangeInputBase {\n    constructor(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n        // TODO(crisbeto): this constructor shouldn't be necessary, but ViewEngine doesn't seem to\n        // handle DI correctly when it is inherited from `MatDateRangeInputPartBase`. We can drop this\n        // constructor once ViewEngine is removed.\n        super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n        /** Validator that checks that the end date isn't before the start date. */\n        this._endValidator = (control) => {\n            const end = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const start = this._model ? this._model.selection.start : null;\n            return (!end || !start ||\n                this._dateAdapter.compareDate(end, start) >= 0) ?\n                null : { 'matEndDateInvalid': { 'start': start, 'actual': end } };\n        };\n        this._validator = Validators.compose([...super._getValidators(), this._endValidator]);\n        this._canEmitChangeEvent = (event) => {\n            return event.source !== this._rangeInput._startInput;\n        };\n    }\n    ngOnInit() {\n        // Normally this happens automatically, but it seems to break if not added explicitly when all\n        // of the criteria below are met:\n        // 1) The class extends a TS mixin.\n        // 2) The application is running in ViewEngine.\n        // 3) The application is being transpiled through tsickle.\n        // This can be removed once google3 is completely migrated to Ivy.\n        super.ngOnInit();\n    }\n    ngDoCheck() {\n        // Normally this happens automatically, but it seems to break if not added explicitly when all\n        // of the criteria below are met:\n        // 1) The class extends a TS mixin.\n        // 2) The application is running in ViewEngine.\n        // 3) The application is being transpiled through tsickle.\n        // This can be removed once google3 is completely migrated to Ivy.\n        super.ngDoCheck();\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue.end;\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            const range = new DateRange(this._model.selection.start, value);\n            this._model.updateSelection(range, this);\n            this._cvaOnChange(value);\n        }\n    }\n    _onKeydown(event) {\n        // If the user is pressing backspace on an empty end input, move focus back to the start.\n        if (event.keyCode === BACKSPACE && !this._elementRef.nativeElement.value) {\n            this._rangeInput._startInput.focus();\n        }\n        super._onKeydown(event);\n    }\n}\nMatEndDate.ɵfac = function MatEndDate_Factory(t) { return new (t || MatEndDate)(ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_INPUT_PARENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8)); };\nMatEndDate.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatEndDate, selectors: [[\"input\", \"matEndDate\", \"\"]], hostAttrs: [\"type\", \"text\", 1, \"mat-end-date\", \"mat-date-range-input-inner\"], hostVars: 5, hostBindings: function MatEndDate_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function MatEndDate_input_HostBindingHandler($event) { return ctx._onInput($event.target.value); })(\"change\", function MatEndDate_change_HostBindingHandler() { return ctx._onChange(); })(\"keydown\", function MatEndDate_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); })(\"blur\", function MatEndDate_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx._rangeInput.rangePicker ? \"dialog\" : null)(\"aria-owns\", (ctx._rangeInput.rangePicker == null ? null : ctx._rangeInput.rangePicker.opened) && ctx._rangeInput.rangePicker.id || null)(\"min\", ctx._getMinDate() ? ctx._dateAdapter.toIso8601(ctx._getMinDate()) : null)(\"max\", ctx._getMaxDate() ? ctx._dateAdapter.toIso8601(ctx._getMaxDate()) : null);\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: NG_VALUE_ACCESSOR, useExisting: MatEndDate, multi: true },\n            { provide: NG_VALIDATORS, useExisting: MatEndDate, multi: true }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatEndDate.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATE_RANGE_INPUT_PARENT,] }] },\n    { type: ElementRef },\n    { type: ErrorStateMatcher },\n    { type: Injector },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatEndDate, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matEndDate]',\n                host: {\n                    'class': 'mat-end-date mat-date-range-input-inner',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(keydown)': '_onKeydown($event)',\n                    '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n                    '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',\n                    '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n                    '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n                    '(blur)': '_onBlur()',\n                    'type': 'text'\n                },\n                providers: [\n                    { provide: NG_VALUE_ACCESSOR, useExisting: MatEndDate, multi: true },\n                    { provide: NG_VALIDATORS, useExisting: MatEndDate, multi: true }\n                ]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATE_RANGE_INPUT_PARENT]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc10.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc10.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDateRangePicker\"). We can change this to a\n// directive if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the date range picker popup/dialog. */\nclass MatDateRangePicker extends MatDatepickerBase {\n    _forwardContentValues(instance) {\n        super._forwardContentValues(instance);\n        const input = this._datepickerInput;\n        if (input) {\n            instance.comparisonStart = input.comparisonStart;\n            instance.comparisonEnd = input.comparisonEnd;\n        }\n    }\n}\nMatDateRangePicker.ɵfac = /*@__PURE__*/ function () { let ɵMatDateRangePicker_BaseFactory; return function MatDateRangePicker_Factory(t) { return (ɵMatDateRangePicker_BaseFactory || (ɵMatDateRangePicker_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatDateRangePicker)))(t || MatDateRangePicker); }; }();\nMatDateRangePicker.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDateRangePicker, selectors: [[\"mat-date-range-picker\"]], exportAs: [\"matDateRangePicker\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER,\n            MAT_CALENDAR_RANGE_STRATEGY_PROVIDER,\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function MatDateRangePicker_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDateRangePicker, [{\n        type: Component,\n        args: [{\n                selector: 'mat-date-range-picker',\n                template: '',\n                exportAs: 'matDateRangePicker',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [\n                    MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER,\n                    MAT_CALENDAR_RANGE_STRATEGY_PROVIDER,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\nclass MatDateRangeInput {\n    constructor(_changeDetectorRef, _elementRef, control, _dateAdapter, _formField) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._formField = _formField;\n        /** Unique ID for the input. */\n        this.id = `mat-date-range-input-${nextUniqueId++}`;\n        /** Whether the control is focused. */\n        this.focused = false;\n        /** Name of the form control. */\n        this.controlType = 'mat-date-range-input';\n        this._groupDisabled = false;\n        /** Value for the `aria-describedby` attribute of the inputs. */\n        this._ariaDescribedBy = null;\n        /** Separator text to be shown between the inputs. */\n        this.separator = '–';\n        /** Start of the comparison range that should be shown in the calendar. */\n        this.comparisonStart = null;\n        /** End of the comparison range that should be shown in the calendar. */\n        this.comparisonEnd = null;\n        /** Emits when the input's state has changed. */\n        this.stateChanges = new Subject();\n        if (!_dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        // TODO(crisbeto): remove `as any` after #18206 lands.\n        this.ngControl = control;\n    }\n    /** Current value of the range input. */\n    get value() {\n        return this._model ? this._model.selection : null;\n    }\n    /** Whether the control's label should float. */\n    get shouldLabelFloat() {\n        return this.focused || !this.empty;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * Set the placeholder attribute on `matStartDate` and `matEndDate`.\n     * @docs-private\n     */\n    get placeholder() {\n        var _a, _b;\n        const start = ((_a = this._startInput) === null || _a === void 0 ? void 0 : _a._getPlaceholder()) || '';\n        const end = ((_b = this._endInput) === null || _b === void 0 ? void 0 : _b._getPlaceholder()) || '';\n        return (start || end) ? `${start} ${this.separator} ${end}` : '';\n    }\n    /** The range picker that this input is associated with. */\n    get rangePicker() { return this._rangePicker; }\n    set rangePicker(rangePicker) {\n        if (rangePicker) {\n            this._model = rangePicker._registerInput(this);\n            this._rangePicker = rangePicker;\n            this._registerModel(this._model);\n        }\n    }\n    /** Whether the input is required. */\n    get required() { return !!this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Function that can be used to filter out dates within the date range picker. */\n    get dateFilter() { return this._dateFilter; }\n    set dateFilter(value) {\n        this._dateFilter = value;\n        this._revalidate();\n    }\n    /** The minimum valid date. */\n    get min() { return this._min; }\n    set min(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._min)) {\n            this._min = validValue;\n            this._revalidate();\n        }\n    }\n    /** The maximum valid date. */\n    get max() { return this._max; }\n    set max(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._max)) {\n            this._max = validValue;\n            this._revalidate();\n        }\n    }\n    /** Whether the input is disabled. */\n    get disabled() {\n        return (this._startInput && this._endInput) ?\n            (this._startInput.disabled && this._endInput.disabled) :\n            this._groupDisabled;\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._groupDisabled) {\n            this._groupDisabled = newValue;\n            this.stateChanges.next(undefined);\n        }\n    }\n    /** Whether the input is in an error state. */\n    get errorState() {\n        if (this._startInput && this._endInput) {\n            return this._startInput.errorState || this._endInput.errorState;\n        }\n        return false;\n    }\n    /** Whether the datepicker input is empty. */\n    get empty() {\n        const startEmpty = this._startInput ? this._startInput.isEmpty() : false;\n        const endEmpty = this._endInput ? this._endInput.isEmpty() : false;\n        return startEmpty && endEmpty;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedBy = ids.length ? ids.join(' ') : null;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    onContainerClick() {\n        if (!this.focused && !this.disabled) {\n            if (!this._model || !this._model.selection.start) {\n                this._startInput.focus();\n            }\n            else {\n                this._endInput.focus();\n            }\n        }\n    }\n    ngAfterContentInit() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._startInput) {\n                throw Error('mat-date-range-input must contain a matStartDate input');\n            }\n            if (!this._endInput) {\n                throw Error('mat-date-range-input must contain a matEndDate input');\n            }\n        }\n        if (this._model) {\n            this._registerModel(this._model);\n        }\n        // We don't need to unsubscribe from this, because we\n        // know that the input streams will be completed on destroy.\n        merge(this._startInput.stateChanges, this._endInput.stateChanges).subscribe(() => {\n            this.stateChanges.next(undefined);\n        });\n    }\n    ngOnChanges(changes) {\n        if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n            this.stateChanges.next(undefined);\n        }\n    }\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n    /** Gets the date at which the calendar should start. */\n    getStartValue() {\n        return this.value ? this.value.start : null;\n    }\n    /** Gets the input's theme palette. */\n    getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /** Gets the element to which the calendar overlay should be attached. */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /** Gets the value that is used to mirror the state input. */\n    _getInputMirrorValue() {\n        return this._startInput ? this._startInput.getMirrorValue() : '';\n    }\n    /** Whether the input placeholders should be hidden. */\n    _shouldHidePlaceholders() {\n        return this._startInput ? !this._startInput.isEmpty() : false;\n    }\n    /** Handles the value in one of the child inputs changing. */\n    _handleChildValueChange() {\n        this.stateChanges.next(undefined);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Opens the date range picker associated with the input. */\n    _openDatepicker() {\n        if (this._rangePicker) {\n            this._rangePicker.open();\n        }\n    }\n    /** Whether the separate text should be hidden. */\n    _shouldHideSeparator() {\n        return (!this._formField || this._formField._hideControlPlaceholder()) && this.empty;\n    }\n    /** Gets the value for the `aria-labelledby` attribute of the inputs. */\n    _getAriaLabelledby() {\n        const formField = this._formField;\n        return formField && formField._hasFloatingLabel() ? formField._labelId : null;\n    }\n    /** Re-runs the validators on the start/end inputs. */\n    _revalidate() {\n        if (this._startInput) {\n            this._startInput._validatorOnChange();\n        }\n        if (this._endInput) {\n            this._endInput._validatorOnChange();\n        }\n    }\n    /** Registers the current date selection model with the start/end inputs. */\n    _registerModel(model) {\n        if (this._startInput) {\n            this._startInput._registerModel(model);\n        }\n        if (this._endInput) {\n            this._endInput._registerModel(model);\n        }\n    }\n}\nMatDateRangeInput.ɵfac = function MatDateRangeInput_Factory(t) { return new (t || MatDateRangeInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.ControlContainer, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8)); };\nMatDateRangeInput.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDateRangeInput, selectors: [[\"mat-date-range-input\"]], contentQueries: function MatDateRangeInput_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStartDate, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatEndDate, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._startInput = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._endInput = _t.first);\n    } }, hostAttrs: [\"role\", \"group\", 1, \"mat-date-range-input\"], hostVars: 8, hostBindings: function MatDateRangeInput_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", null)(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-describedby\", ctx._ariaDescribedBy)(\"data-mat-calendar\", ctx.rangePicker ? ctx.rangePicker.id : null);\n        ɵngcc0.ɵɵclassProp(\"mat-date-range-input-hide-placeholders\", ctx._shouldHidePlaceholders())(\"mat-date-range-input-required\", ctx.required);\n    } }, inputs: { separator: \"separator\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\", rangePicker: \"rangePicker\", required: \"required\", dateFilter: \"dateFilter\", min: \"min\", max: \"max\", disabled: \"disabled\" }, exportAs: [\"matDateRangeInput\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatDateRangeInput },\n            { provide: MAT_DATE_RANGE_INPUT_PARENT, useExisting: MatDateRangeInput },\n        ]), ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c6, decls: 9, vars: 4, consts: [[\"cdkMonitorSubtreeFocus\", \"\", 1, \"mat-date-range-input-container\", 3, \"cdkFocusChange\"], [1, \"mat-date-range-input-start-wrapper\"], [\"aria-hidden\", \"true\", 1, \"mat-date-range-input-mirror\"], [1, \"mat-date-range-input-separator\"], [1, \"mat-date-range-input-end-wrapper\"]], template: function MatDateRangeInput_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c5);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"cdkFocusChange\", function MatDateRangeInput_Template_div_cdkFocusChange_0_listener($event) { return ctx.focused = $event !== null; });\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementStart(3, \"span\", 2);\n        ɵngcc0.ɵɵtext(4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"span\", 3);\n        ɵngcc0.ɵɵtext(6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 4);\n        ɵngcc0.ɵɵprojection(8, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵtextInterpolate(ctx._getInputMirrorValue());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"mat-date-range-input-separator-hidden\", ctx._shouldHideSeparator());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.separator);\n    } }, directives: [ɵngcc5.CdkMonitorFocus], styles: [\".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px}.mat-date-range-input-separator-hidden{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-inner{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%}.mat-date-range-input-inner::-ms-clear,.mat-date-range-input-inner::-ms-reveal{display:none}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-date-range-input-mirror{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-date-range-input-start-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-start-wrapper .mat-date-range-input-inner{position:absolute;top:0;left:0}.mat-date-range-input-end-wrapper{flex-grow:1;max-width:calc(50% - 4px)}.mat-form-field-type-mat-date-range-input .mat-form-field-infix{width:200px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDateRangeInput.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Self }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] }\n];\nMatDateRangeInput.propDecorators = {\n    rangePicker: [{ type: Input }],\n    required: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    disabled: [{ type: Input }],\n    separator: [{ type: Input }],\n    comparisonStart: [{ type: Input }],\n    comparisonEnd: [{ type: Input }],\n    _startInput: [{ type: ContentChild, args: [MatStartDate,] }],\n    _endInput: [{ type: ContentChild, args: [MatEndDate,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDateRangeInput, [{\n        type: Component,\n        args: [{\n                selector: 'mat-date-range-input',\n                template: \"<div\\n  class=\\\"mat-date-range-input-container\\\"\\n  cdkMonitorSubtreeFocus\\n  (cdkFocusChange)=\\\"focused = $event !== null\\\">\\n  <div class=\\\"mat-date-range-input-start-wrapper\\\">\\n    <ng-content select=\\\"input[matStartDate]\\\"></ng-content>\\n    <span\\n      class=\\\"mat-date-range-input-mirror\\\"\\n      aria-hidden=\\\"true\\\">{{_getInputMirrorValue()}}</span>\\n  </div>\\n\\n  <span\\n    class=\\\"mat-date-range-input-separator\\\"\\n    [class.mat-date-range-input-separator-hidden]=\\\"_shouldHideSeparator()\\\">{{separator}}</span>\\n\\n  <div class=\\\"mat-date-range-input-end-wrapper\\\">\\n    <ng-content select=\\\"input[matEndDate]\\\"></ng-content>\\n  </div>\\n</div>\\n\\n\",\n                exportAs: 'matDateRangeInput',\n                host: {\n                    'class': 'mat-date-range-input',\n                    '[class.mat-date-range-input-hide-placeholders]': '_shouldHidePlaceholders()',\n                    '[class.mat-date-range-input-required]': 'required',\n                    '[attr.id]': 'null',\n                    'role': 'group',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-describedby]': '_ariaDescribedBy',\n                    // Used by the test harness to tie this input to its calendar. We can't depend on\n                    // `aria-owns` for this, because it's only defined while the calendar is open.\n                    '[attr.data-mat-calendar]': 'rangePicker ? rangePicker.id : null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatDateRangeInput },\n                    { provide: MAT_DATE_RANGE_INPUT_PARENT, useExisting: MatDateRangeInput },\n                ],\n                styles: [\".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px}.mat-date-range-input-separator-hidden{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-inner{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%}.mat-date-range-input-inner::-ms-clear,.mat-date-range-input-inner::-ms-reveal{display:none}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-date-range-input-mirror{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-date-range-input-start-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-start-wrapper .mat-date-range-input-inner{position:absolute;top:0;left:0}.mat-date-range-input-end-wrapper{flex-grow:1;max-width:calc(50% - 4px)}.mat-form-field-type-mat-date-range-input .mat-form-field-infix{width:200px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc10.ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc9.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }]; }, { separator: [{\n            type: Input\n        }], comparisonStart: [{\n            type: Input\n        }], comparisonEnd: [{\n            type: Input\n        }], rangePicker: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], _startInput: [{\n            type: ContentChild,\n            args: [MatStartDate]\n        }], _endInput: [{\n            type: ContentChild,\n            args: [MatEndDate]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDatepickerModule {\n}\nMatDatepickerModule.ɵfac = function MatDatepickerModule_Factory(t) { return new (t || MatDatepickerModule)(); };\nMatDatepickerModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatDatepickerModule });\nMatDatepickerModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [\n        MatDatepickerIntl,\n        MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n    ], imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatDialogModule,\n            OverlayModule,\n            A11yModule,\n            PortalModule,\n        ], CdkScrollableModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatDialogModule,\n                    OverlayModule,\n                    A11yModule,\n                    PortalModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                    MatDateRangeInput,\n                    MatStartDate,\n                    MatEndDate,\n                    MatDateRangePicker,\n                ],\n                declarations: [\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                    MatDateRangeInput,\n                    MatStartDate,\n                    MatEndDate,\n                    MatDateRangePicker,\n                ],\n                providers: [\n                    MatDatepickerIntl,\n                    MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n                ],\n                entryComponents: [\n                    MatDatepickerContent,\n                    MatCalendarHeader,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDatepickerModule, { declarations: function () { return [MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader, MatDateRangeInput, MatStartDate, MatEndDate, MatDateRangePicker]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatDialogModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule]; }, exports: function () { return [CdkScrollableModule, MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader, MatDateRangeInput, MatStartDate, MatEndDate, MatDateRangePicker]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DateRange, DefaultMatCalendarRangeStrategy, MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_DATEPICKER_VALIDATORS, MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATE_RANGE_SELECTION_STRATEGY, MAT_RANGE_DATE_SELECTION_MODEL_FACTORY, MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER, MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY, MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER, MatCalendar, MatCalendarBody, MatCalendarCell, MatCalendarHeader, MatDateRangeInput, MatDateRangePicker, MatDateSelectionModel, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerInputEvent, MatDatepickerIntl, MatDatepickerModule, MatDatepickerToggle, MatDatepickerToggleIcon, MatEndDate, MatMonthView, MatMultiYearView, MatRangeDateSelectionModel, MatSingleDateSelectionModel, MatStartDate, MatYearView, matDatepickerAnimations, yearsPerPage, yearsPerRow, MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY as ɵangular_material_src_material_datepicker_datepicker_a, MAT_CALENDAR_RANGE_STRATEGY_PROVIDER as ɵangular_material_src_material_datepicker_datepicker_b, MatDatepickerBase as ɵangular_material_src_material_datepicker_datepicker_c, MatDatepickerInputBase as ɵangular_material_src_material_datepicker_datepicker_d, MAT_DATE_RANGE_INPUT_PARENT as ɵangular_material_src_material_datepicker_datepicker_e };\n\n","import {AppConfig} from '@common/core/config/app-config';\n\nexport const COMMON_ADMIN_CONFIG: AppConfig = {\n    admin: {\n        tagTypes: [{name: 'custom'}],\n        pages: [],\n    }\n};\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ImageZoomComponent} from './image-zoom.component';\nimport {ImageZoomOverlayComponent} from './image-zoom-overlay/image-zoom-overlay.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\n\n@NgModule({\n    declarations: [ImageZoomComponent, ImageZoomOverlayComponent],\n    imports: [\n        CommonModule,\n        MatButtonModule,\n        MatIconModule,\n    ],\n    exports: [\n        ImageZoomComponent,\n    ]\n})\nexport class ImageZoomModule {\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport {Settings} from '../core/config/settings.service';\nimport {CurrentUser} from '../auth/current-user';\nimport {MenuItem} from '@common/core/ui/custom-menu/menu-item';\nimport {SidenavComponent} from '@common/shared/sidenav/sidenav.component';\n\n@Component({\n    selector: 'admin',\n    templateUrl: './admin.component.html',\n    styleUrls: ['./admin.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AdminComponent implements OnInit {\n    @ViewChild(SidenavComponent, {static: true}) sidenav: SidenavComponent;\n    menu = this.generateMenu();\n\n    constructor(public settings: Settings) {}\n\n    ngOnInit() {\n        this.menu = this.generateMenu();\n    }\n\n    public getCustomSidebarItems() {\n        return this.settings.get('vebto.admin.pages');\n    }\n\n    // TODO: refactor this later, so can be changed from menu manager\n    private generateMenu() {\n        const items = [\n            {\n                name: 'analytics',\n                icon: 'pie-chart',\n                permission: 'reports.view',\n                route: 'analytics',\n            },\n            {\n                name: 'appearance',\n                icon: 'style',\n                permission: 'resources.defaults.permissions.update',\n                route: 'appearance',\n            },\n            {\n                name: 'settings',\n                icon: 'settings',\n                permission: 'settings.view',\n                route: 'settings',\n            },\n\n            {\n                name: 'plans',\n                icon: 'assignment',\n                permission: 'plans.view',\n                route: 'plans',\n            },\n            {\n                name: 'subscriptions',\n                icon: 'subscriptions',\n                permission: 'subscriptions.view',\n                route: 'subscriptions',\n            },\n\n            ...this.getCustomSidebarItems(),\n\n            {\n                name: 'users',\n                icon: 'person',\n                permission: 'users.view',\n                route: 'users',\n            },\n            {\n                name: 'roles',\n                icon: 'people',\n                permission: 'roles.view',\n                route: 'roles',\n            },\n            {\n                name: 'pages',\n                icon: 'page',\n                permission: 'pages.view',\n                route: 'custom-pages',\n            },\n            {\n                name: 'tags',\n                icon: 'local-offer',\n                permission: 'tags.view',\n                route: 'tags',\n            },\n            {\n                name: 'files',\n                icon: 'file',\n                permission: 'files.view',\n                route: 'files',\n            },\n            {\n                name: 'translations',\n                icon: 'translate',\n                permission: 'localizations.view',\n                route: 'translations',\n            },\n        ];\n\n        if (this.settings.get('vebto.admin.ads')) {\n            items.push({\n                name: 'ads',\n                icon: 'ads',\n                permission: 'settings.view',\n                route: 'ads',\n            });\n        }\n\n        return items.map(item => {\n            item.type = 'route';\n            item.label = item.name;\n            item.action = 'admin/' + item.route;\n            item.activeExact = false;\n            item.condition = function (user: CurrentUser, settings: Settings) {\n                let condition = true;\n                if (item.name === 'plans' || item.name === 'subscriptions') {\n                    condition = settings.get('billing.enable');\n                }\n                return condition && user.hasPermission(item.permission);\n            };\n            return item;\n        }) as MenuItem[];\n    }\n}\n","<material-navbar\n  menuPosition=\"admin-navbar\"\n  color=\"primary\"\n  [showToggleButton]=\"true\"\n  (toggleButtonClick)=\"sidenav.toggleSidebarMode()\"\n>\n</material-navbar>\n\n<sidenav>\n  <nav>\n    <custom-menu\n      [position]=\"menu\"\n      [vertical]=\"true\"\n      [compact]=\"sidenav.isCompact$ | async\"\n    ></custom-menu>\n    <div class=\"version\">{{ 'Version:' | trans }} {{ settings.get('version') }}</div>\n  </nav>\n  <main>\n    <div class=\"content-inner\">\n      <router-outlet></router-outlet>\n    </div>\n  </main>\n</sidenav>\n","<div class=\"modal-header\">\n    <h2 class=\"modal-title\" mat-dialog-title [transValues]=\"{resource: resourceName}\" trans>\n        Import :resource\n    </h2>\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form [formGroup]=\"form\" (ngSubmit)=\"import()\" ngNativeValidate>\n    <div class=\"many-inputs\" mat-dialog-content>\n        <div class=\"input-container spotify-id-container\">\n            <label for=\"import_media_spotify_id\" [transValues]=\"{resource: resourceName}\" trans\n                >Spotify :resource ID</label\n            >\n            <input\n                type=\"text\"\n                id=\"import_media_spotify_id\"\n                formControlName=\"spotifyId\"\n                required\n                minlength=\"22\"\n                maxlength=\"22\"\n            />\n            <mat-progress-bar\n                mode=\"indeterminate\"\n                color=\"accent\"\n                *ngIf=\"loading$ | async\"\n            ></mat-progress-bar>\n        </div>\n        <ng-container *ngIf=\"importingArtist\">\n            <mat-checkbox formControlName=\"importAlbums\">Import albums</mat-checkbox>\n            <mat-checkbox formControlName=\"importSimilarArtists\"\n                >Import similar artists</mat-checkbox\n            >\n        </ng-container>\n        <p *ngIf=\"importingAlbum\" trans>\n            This will also import all artists that collaborated on this album or any tracks that it\n            contains.\n        </p>\n        <ng-container *ngIf=\"importingTrack\">\n            <p trans>\n                This will also import all artists that collaborated on this track as well as album\n                track is attached to.\n            </p>\n            <mat-checkbox formControlName=\"importLyrics\">Import lyrics</mat-checkbox>\n        </ng-container>\n        <p *ngIf=\"importingPlaylist\" trans>Only public playlists can be imported.</p>\n    </div>\n\n    <mat-dialog-actions>\n        <button (click)=\"close()\" type=\"button\" mat-button trans>Cancel</button>\n        <button type=\"submit\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\" trans>\n            Import\n        </button>\n    </mat-dialog-actions>\n</form>\n","import {ChangeDetectionStrategy, Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {BehaviorSubject} from 'rxjs';\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {finalize} from 'rxjs/operators';\nimport {ARTIST_MODEL} from '../../models/Artist';\nimport {ALBUM_MODEL} from '../../models/Album';\nimport {TRACK_MODEL} from '../../models/Track';\nimport {PLAYLIST_MODEL} from '../../models/Playlist';\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\n\ninterface ImportMediaModalData {\n    modelType: string;\n}\n\n@Component({\n    selector: 'import-media-modal',\n    templateUrl: './import-media-modal.component.html',\n    styleUrls: ['./import-media-modal.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImportMediaModalComponent implements OnInit {\n    public loading$ = new BehaviorSubject<boolean>(false);\n    public form = new FormGroup({\n        spotifyId: new FormControl(),\n        importAlbums: new FormControl(true),\n        importLyrics: new FormControl(true),\n        importSimilarArtists: new FormControl(false),\n    });\n    public resourceName: string;\n    public importingArtist: boolean;\n    public importingAlbum: boolean;\n    public importingTrack: boolean;\n    public importingPlaylist: boolean;\n\n    constructor(\n        private dialogRef: MatDialogRef<ImportMediaModalComponent>,\n        private http: AppHttpClient,\n        private toast: Toast,\n        @Inject(MAT_DIALOG_DATA) public data: ImportMediaModalData,\n    ) {}\n\n    ngOnInit() {\n        this.resourceName = this.data.modelType.split('\\\\').pop();\n        this.importingArtist = this.data.modelType === ARTIST_MODEL;\n        this.importingAlbum = this.data.modelType === ALBUM_MODEL;\n        this.importingTrack = this.data.modelType === TRACK_MODEL;\n        this.importingPlaylist = this.data.modelType === PLAYLIST_MODEL;\n    }\n\n    public import() {\n        this.loading$.next(true);\n        this.http.post('import-media/single-item', {...this.data, ...this.form.value})\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.toast.open(`${this.resourceName} imported`);\n                this.close(response);\n            }, (err: BackendErrorResponse) => {\n                this.toast.open(err.message || 'Could not import media.');\n            });\n    }\n\n    public close(response?: any) {\n        this.dialogRef.close(response);\n    }\n}\n","import {ComponentType} from '@angular/cdk/portal';\nimport {NormalizedModel} from '@common/core/types/models/normalized-model';\n\nexport class DatatableFilter {\n    defaultValue: FilterValue | '';\n    defaultOperator: FilterOperator;\n    key: string;\n    label: string;\n    description: string;\n    required: boolean;\n    order: number;\n    type: FilterControlType;\n    inputType: 'string' | 'number';\n    options: {key?: string; value: string | boolean | object | number}[];\n    operators: FilterOperator[] | undefined;\n    component?: ComponentType<any>;\n    componentData?: any;\n\n    constructor(options: DatatableFilterOptions) {\n        this.defaultValue =\n            options.defaultValue !== undefined ? options.defaultValue : '';\n        this.key = options.key || '';\n        this.label = options.label || options.key || '';\n        this.description = options.description || '';\n        this.defaultOperator = options.defaultOperator || FilterOperator.eq;\n        this.required = !!options.required;\n        this.order = options.order === undefined ? 1 : options.order;\n        this.type = options.type || FilterControlType.Select;\n        this.inputType = options.inputType;\n        this.options = options.options || [];\n        this.operators = options.operators;\n        this.component = options.component;\n        this.componentData = options.componentData;\n    }\n}\n\nexport interface DatatableFilterOptions {\n    defaultValue?: FilterValue | '';\n    key?: string;\n    label?: string;\n    description: string;\n    component?: ComponentType<any>;\n    componentData?: any;\n    defaultOperator?: FilterOperator;\n    required?: boolean;\n    order?: number;\n    type?: FilterControlType;\n    inputType?: 'string' | 'number';\n    options?: {key?: string; value: string | boolean | object | number}[];\n    operators?: FilterOperator[];\n}\n\nexport enum FilterControlType {\n    Select = 'select',\n    DatePicker = 'datePicker',\n    SelectModel = 'selectModel',\n    Input = 'input',\n    StaticValue = 'staticValue',\n}\n\nexport enum FilterOperator {\n    eq = '=',\n    ne = '!=',\n    gt = '>',\n    gte = '>=',\n    lt = '<',\n    lte = '<=',\n    has = 'has',\n    doesntHave = 'doesntHave',\n}\n\nexport type FilterValueWithOperator = {\n    value: FilterValue;\n    operator: FilterOperator;\n};\nexport const ALL_PRIMITIVE_OPERATORS = [\n    FilterOperator.eq,\n    FilterOperator.ne,\n    FilterOperator.gt,\n    FilterOperator.gte,\n    FilterOperator.lt,\n    FilterOperator.lte,\n];\n\nexport type FilterValue =\n    | string\n    | number\n    | boolean\n    | NormalizedModel\n    | FilterValueWithOperator\n    | null;\n","import {\n    ALL_PRIMITIVE_OPERATORS,\n    DatatableFilter,\n    FilterControlType,\n    FilterOperator,\n} from './datatable-filter';\n\nexport class TimestampFilter extends DatatableFilter {\n    type = FilterControlType.DatePicker;\n    operators = ALL_PRIMITIVE_OPERATORS;\n    defaultOperator = FilterOperator.lte;\n    defaultValue = new Date().toISOString().split('T')[0];\n}\n\nexport class CreatedAtFilter extends TimestampFilter {\n  key = 'created_at';\n  label = 'Created At';\n}\n\nexport class UpdatedAtFilter extends TimestampFilter {\n  key = 'updated_at';\n  label = 'Updated At';\n}\n\n\n","import {\n    ALL_PRIMITIVE_OPERATORS,\n    DatatableFilter,\n    FilterControlType, FilterOperator,\n} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/datatable-filter';\nimport {\n    CreatedAtFilter,\n    UpdatedAtFilter,\n} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/timestamp-filter';\nimport {FindUserModalComponent} from '@common/auth/find-user-modal/find-user-modal.component';\n\nexport const ARTIST_INDEX_FILTERS: DatatableFilter[] = [\n    new DatatableFilter({\n        type: FilterControlType.Select,\n        key: 'verified',\n        label: 'Status',\n        defaultValue: false,\n        description: 'Whether artist is verified',\n        options: [\n            {\n                key: 'Verified',\n                value: true,\n            },\n            {\n                key: 'Not Verified',\n                value: false,\n            },\n        ],\n    }),\n\n    new DatatableFilter({\n        type: FilterControlType.Input,\n        inputType: 'number',\n        key: 'plays',\n        label: 'Plays',\n        defaultValue: 100,\n        description: 'Total number of plays for all artist tracks',\n        operators: ALL_PRIMITIVE_OPERATORS,\n        defaultOperator: FilterOperator.gte,\n    }),\n\n    new CreatedAtFilter({\n        description: 'Date artist was created',\n    }),\n    new UpdatedAtFilter({\n        description: 'Date artist was last updated',\n    }),\n];\n","<div class=\"table\">\n  <div class=\"filter-suggestion-header row\">\n    <div class=\"column\" trans>Field</div>\n    <div class=\"column\" trans>Description</div>\n  </div>\n  <div class=\"body\" role=\"list\">\n    <div\n      role=\"listitem\"\n      class=\"row filter-suggestion-item\"\n      *ngFor=\"let filter of filters | keyvalue: originalOrder; index as index\"\n      tabindex=\"0\"\n      #filterSuggestion\n      [attr.data-filter-key]=\"filter.key\"\n      [attr.data-index]=\"index\"\n      (click)=\"filterSelected.emit(filter.value)\"\n    >\n      <div class=\"column label-column\" trans>{{ filter.value.label }}</div>\n      <div class=\"column\" trans>{{ filter.value.description }}</div>\n    </div>\n  </div>\n</div>\n\n<div class=\"help-container\">\n  <mat-icon svgIcon=\"info\"></mat-icon>\n  <div trans>\n    Use arrows, tab or mouse to navigate added filters. Backspace or delete key to remove them.\n  </div>\n</div>\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    Output,\n    QueryList,\n    ViewChildren,\n} from '@angular/core';\nimport {DatatableFilter} from '../filter-config/datatable-filter';\n\nconst ITEM_CLASS = 'filter-suggestion-item';\n\n@Component({\n    selector: 'filter-suggestions',\n    templateUrl: './filter-suggestions.component.html',\n    styleUrls: ['./filter-suggestions.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilterSuggestionsComponent {\n    @Input() filters: {[key: string]: DatatableFilter};\n    @Output() filterSelected = new EventEmitter<DatatableFilter>();\n    @ViewChildren('filterSuggestion') items: QueryList<ElementRef<HTMLElement>>;\n\n    anyFocused(): boolean {\n        return document.activeElement.classList.contains(ITEM_CLASS);\n    }\n\n    focusItemAt(index: number) {\n        this.items.get(index).nativeElement.focus();\n    }\n\n    getFocusedFilter(): DatatableFilter {\n        if (this.anyFocused()) {\n            const k = (document.activeElement as HTMLElement).dataset.filterKey;\n            return this.filters[k];\n        }\n    }\n\n    getFocusedIndex(): number {\n        if (this.anyFocused()) {\n            const el = document.activeElement as HTMLElement;\n            return parseInt(el.dataset.index);\n        }\n    }\n\n    originalOrder = (): number => {\n        return 0;\n    };\n}\n","<ng-container *ngIf=\"value$ | async as value; else defaultHint\">\n    <img class=\"image\" [src]=\"value.image\" />\n    <div class=\"name\">{{ value.name }}</div>\n</ng-container>\n<ng-template #defaultHint>\n    <div trans>Click to select</div>\n</ng-template>\n","import {ChangeDetectionStrategy, Component, HostListener, Input} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {BehaviorSubject} from 'rxjs';\nimport {NormalizedModel} from '@common/core/types/models/normalized-model';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {DatatableFilter} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/datatable-filter';\n\ntype propagateFn = (value: NormalizedModel) => void;\n\n@Component({\n    selector: 'select-model-control',\n    templateUrl: './select-model-control.component.html',\n    styleUrls: ['./select-model-control.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: SelectModelControlComponent,\n            multi: true,\n        },\n    ],\n})\nexport class SelectModelControlComponent implements ControlValueAccessor {\n    @Input() filter: DatatableFilter;\n    private propagateChange: propagateFn;\n    value$ = new BehaviorSubject<NormalizedModel>(null);\n\n    constructor(private dialog: Modal) {}\n\n    registerOnChange(fn: propagateFn): void {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {}\n\n    writeValue(value: NormalizedModel) {\n        this.value$.next(value);\n    }\n\n    @HostListener('click')\n    onClick() {\n        this.openSelectModelDialog();\n    }\n\n    openSelectModelDialog() {\n        this.dialog\n            .open(this.filter.component, this.filter.componentData)\n            .afterClosed()\n            .subscribe((model: NormalizedModel) => {\n                if (model) {\n                    this.value$.next(model);\n                    this.propagateChange(model);\n                }\n            });\n    }\n}\n","import { FilterOperator } from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/datatable-filter';\n\nexport const FILTER_OPERATOR_NAMES: {[op in FilterOperator]: string} = {\n  '=': 'is',\n  '!=': 'is not',\n  '>': 'is greater than',\n  '>=': 'is greater than or equal to',\n  '<': 'is less than',\n  '<=': 'is less than or equal to',\n  has: 'Include',\n  doesntHave: 'Do not include',\n};\n\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {FilterOperator} from '../../filter-config/datatable-filter';\nimport {FILTER_OPERATOR_NAMES} from '../../../filter-operator-names';\nimport {BreakpointsService} from '../../../../../core/ui/breakpoints.service';\n\n@Pipe({\n    name: 'operatorDisplayName',\n})\nexport class OperatorDisplayNamePipe implements PipeTransform {\n    constructor(private breakpoints: BreakpointsService) {}\n    transform(value: FilterOperator, compact: boolean): string {\n        return compact || this.breakpoints.isMobile$.value\n            ? value\n            : FILTER_OPERATOR_NAMES[value];\n    }\n}\n","<ng-container [formGroup]=\"formGroup\">\n    <select\n        class=\"operator-select\"\n        formControlName=\"operator\"\n        #select\n        (ngModelChange)=\"resizeSelect()\"\n    >\n        <option [value]=\"operator\" *ngFor=\"let operator of operators\">\n            {{ operator | operatorDisplayName:compact }}\n        </option>\n    </select>\n</ng-container>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    Input,\n    ViewChild,\n} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\nimport {FilterOperator} from '../../filter-config/datatable-filter';\n\n@Component({\n    selector: 'operator-select',\n    templateUrl: './operator-select.component.html',\n    styleUrls: ['./operator-select.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OperatorSelectComponent implements AfterViewInit {\n    @Input() compact: boolean;\n    @Input() formGroup: FormGroup;\n    @Input() operators: FilterOperator[];\n    @ViewChild('select') select: ElementRef<HTMLSelectElement>;\n\n    ngAfterViewInit() {\n        this.resizeSelect();\n    }\n\n    resizeSelect() {\n        const select = this.select?.nativeElement;\n        if (select && select.selectedIndex > -1) {\n            const valueLength =\n                select.options[select.selectedIndex].label.length;\n            select.style.width = `${valueLength + 5}ch`;\n        }\n    }\n}\n","<ng-container [formGroup]=\"formGroup\" *ngIf=\"form.controls[key] as formGroup\">\n  <div class=\"filter-label\" (click)=\"el.nativeElement.focus()\" trans>{{ filter.label }}</div>\n  <operator-select\n    *ngIf=\"filter.operators\"\n    [compact]=\"compact\"\n    [formGroup]=\"formGroup\"\n    [operators]=\"filter.operators\"\n  ></operator-select>\n  <ng-container [ngSwitch]=\"filter.type\">\n    <div class=\"filter-input-container\" *ngSwitchCase=\"'select'\">\n      <select\n        [id]=\"key\"\n        #valueInput\n        class=\"filter-input filter-value\"\n        formControlName=\"value\"\n        (ngModelChange)=\"resizeInput()\"\n        [compareWith]=\"compareFilterValueFn\"\n      >\n        <option *ngFor=\"let option of filter.options\" [ngValue]=\"option.value\" trans>\n          {{ option.key || option.value }}\n        </option>\n      </select>\n      <svg viewBox=\"0 0 24 24\" class=\"caret-svg\">\n        <path d=\"M7 10l5 5 5-5z\"></path>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n      </svg>\n    </div>\n    <div class=\"date-picker-container\" *ngSwitchCase=\"'datePicker'\">\n      <input\n        type=\"date\"\n        class=\"date-input filter-value\"\n        #valueInput\n        [id]=\"key\"\n        formControlName=\"value\"\n      />\n    </div>\n    <select-model-control\n      [filter]=\"filter\"\n      *ngSwitchCase=\"'selectModel'\"\n      #valueInput\n      [id]=\"key\"\n      formControlName=\"value\"\n      class=\"filter-value select-model-input\"\n    ></select-model-control>\n    <div class=\"filter-input-container\" *ngSwitchCase=\"'input'\">\n      <input\n        #valueInput\n        [id]=\"key\"\n        formControlName=\"value\"\n        (ngModelChange)=\"resizeInput()\"\n        [type]=\"filter.inputType || 'text'\"\n        class=\"filter-input filter-value\"\n        min=\"1\"\n        required\n      />\n    </div>\n  </ng-container>\n</ng-container>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    HostBinding,\n    Input,\n    ViewChild,\n} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\nimport {\n    DatatableFilter,\n    FilterValue,\n} from '../../filter-config/datatable-filter';\nimport * as deepequal from 'fast-deep-equal';\nimport {SelectModelControlComponent} from '../select-model-control/select-model-control.component';\n\n@Component({\n    selector: 'active-filter',\n    templateUrl: './active-filter.component.html',\n    styleUrls: ['./active-filter.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        tabIndex: '0',\n        role: 'button',\n    },\n})\nexport class ActiveFilterComponent implements AfterViewInit {\n    @HostBinding('attr.data-control-key') @Input() key: string;\n    @Input() compact: boolean;\n    @Input() form: FormGroup;\n    @Input() filter: DatatableFilter;\n    @ViewChild('valueInput') valueInput:\n        | SelectModelControlComponent\n        | ElementRef<HTMLSelectElement | HTMLInputElement>;\n\n    constructor(public el: ElementRef<HTMLElement>) {}\n\n    ngAfterViewInit() {\n        this.resizeInput();\n    }\n\n    focus() {\n        this.el.nativeElement.focus();\n    }\n\n    focusValueInput() {\n        if (this.valueInput instanceof SelectModelControlComponent) {\n            this.valueInput.openSelectModelDialog();\n        } else if (this.valueInput?.nativeElement) {\n            this.valueInput.nativeElement.focus();\n        }\n    }\n\n    resizeInput() {\n        const el = (this.valueInput as ElementRef)?.nativeElement;\n        if (el?.nodeName === 'SELECT') {\n            const select = el as HTMLSelectElement;\n            if (select.selectedIndex > -1) {\n                const valueLength =\n                    select.options[select.selectedIndex].label.length;\n                select.style.width = `${valueLength + 5}ch`;\n            }\n        } else if (el?.nodeName === 'INPUT' && el.type !== 'date') {\n            const input = el as HTMLInputElement;\n            input.style.width = `${input.value.length + 7}ch`;\n        }\n    }\n\n    compareFilterValueFn = (val1: FilterValue, val2: FilterValue) => {\n        return deepequal(val1, val2);\n    };\n}\n","<ng-container *ngFor=\"let control of form.controls | keyvalue; index as index\">\n    <active-filter\n        [compact]=\"compact\"\n        [key]=\"control.key\"\n        [form]=\"form\"\n        [filter]=\"filter\"\n        *ngIf=\"config[control.value.value.key] as filter\"\n        [attr.data-index]=\"index\"\n    ></active-filter>\n</ng-container>\n<ng-content></ng-content>\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    Input,\n    QueryList,\n    ViewChildren,\n} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {DatatableFilter} from '../filter-config/datatable-filter';\nimport {randomString} from '@common/core/utils/random-string';\nimport {ActiveFilterComponent} from './active-filter/active-filter.component';\n\ninterface AddFilterOptions {\n    value?: any;\n    operator?: string;\n    focus?: boolean;\n}\n\n@Component({\n    selector: 'active-filters',\n    templateUrl: './active-filters.component.html',\n    styleUrls: ['./active-filters.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ActiveFiltersComponent {\n    @Input() compact: boolean;\n    @Input() form: FormGroup;\n    @Input() config: DatatableFilter;\n    @ViewChildren(ActiveFilterComponent)\n    filters: QueryList<ActiveFilterComponent>;\n\n    constructor(\n        private fb: FormBuilder,\n        private cd: ChangeDetectorRef,\n        public el: ElementRef<HTMLElement>\n    ) {}\n\n    add(config: DatatableFilter, opts: AddFilterOptions = {}) {\n        const value =\n            opts.value !== undefined ? opts.value : config.defaultValue;\n        const control = this.fb.group({\n            key: config.key,\n            value,\n            operator: opts.operator || config.defaultOperator,\n        });\n        const key = Object.keys(this.form.controls).length + randomString(8);\n        // don't reload the table if filter does not have any default value (select model/user filter for example)\n        this.form.addControl(key, control, {emitEvent: value !== ''});\n        this.cd.detectChanges();\n        if (opts.focus) {\n            this.filters.last.focusValueInput();\n        }\n    }\n\n    removeByKey(key: string) {\n        this.form.removeControl(key);\n        this.cd.markForCheck();\n    }\n\n    removeCurrentlyFocused() {\n        const activeEl = document.activeElement as HTMLElement;\n        this.removeByKey(activeEl.dataset.controlKey);\n    }\n\n    anyFocused(): boolean {\n        return document.activeElement.nodeName === 'ACTIVE-FILTER';\n    }\n\n    focusLast() {\n        if (this.filters.last) {\n            this.filters.last.focus();\n        }\n    }\n\n    focusPrevious() {\n        const i = this.getFocusedIndex();\n        const previous = this.filters.get(i - 1);\n        if (previous) {\n            previous.focus();\n        }\n    }\n\n    getByIndex(index: number) {\n        return this.filters.get(index);\n    }\n\n    lastIsFocused() {\n        const i = this.getFocusedIndex();\n        return i === this.filters.length - 1;\n    }\n\n    getFocusedIndex(): number {\n        const i = (document.activeElement as HTMLElement).dataset.index;\n        return i ? parseInt(i) : null;\n    }\n}\n","export enum Keycodes {\n    ENTER = 13,\n    SPACE = 32,\n    ESCAPE = 27,\n    DELETE = 46,\n    ARROW_UP = 38,\n    ARROW_RIGHT = 39,\n    ARROW_DOWN = 40,\n    ARROW_LEFT = 37,\n    BACKSPACE = 8,\n    TAB = 9,\n    S = 83,\n    N = 78,\n    A = 65,\n    T = 84,\n    B = 66,\n    C = 67,\n    O = 79,\n    P = 80,\n    R = 82,\n    F = 70,\n    Y = 89,\n    Z = 90,\n}\n","import {Injectable} from '@angular/core';\nimport {Keycodes} from './keycodes.enum';\nimport {fromEvent, Subscription} from 'rxjs';\n\ninterface ParsedKeybind {\n    ctrl: boolean;\n    shift: boolean;\n    key: string;\n}\n\n// TODO: refactor so keybinds are stored for a specific \"listenOn\" element instead of globally\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class Keybinds {\n    private bindings = [];\n\n    public add(keybinds: string|string[], callback: (e: KeyboardEvent) => void) {\n        if ( ! Array.isArray(keybinds)) {\n            keybinds = [keybinds];\n        }\n        keybinds.forEach(keybind => {\n            this.bindings.push({keybind: this.parseKeybindString(keybind), keybindString: keybind, callback});\n        });\n    }\n\n    public addWithPreventDefault(keybind: string, callback: Function) {\n        this.bindings.push({keybind: this.parseKeybindString(keybind), keybindString: keybind, callback, preventDefault: true});\n    }\n\n    public listenOn(el: HTMLElement|Document, options: {fireIfInputFocused?: boolean} = {}): Subscription {\n        return fromEvent(el, 'keydown').subscribe((e: KeyboardEvent) => {\n            if (options.fireIfInputFocused || !['input', 'select'].includes(document.activeElement.nodeName.toLowerCase())) {\n                this.executeBindings(e);\n            }\n        });\n    }\n\n    private executeBindings(e: KeyboardEvent) {\n        this.bindings.forEach(binding => {\n            if ( ! this.bindingMatches(binding.keybind, e)) return;\n            if (binding.preventDefault && e.preventDefault) e.preventDefault();\n            binding.callback(e);\n        });\n    }\n\n    private bindingMatches(keybind: ParsedKeybind, e: KeyboardEvent) {\n        return Keycodes[keybind.key.toUpperCase()] === e.keyCode &&\n          (e.ctrlKey === keybind.ctrl || e.metaKey === keybind.ctrl) &&\n          e.shiftKey === keybind.shift;\n    }\n\n    /**\n     * Parse keybind string into object.\n     */\n    private parseKeybindString(keybind: string): ParsedKeybind {\n        const parts = keybind.trim().split('+');\n        const parsed = {ctrl: false, shift: false, key: ''};\n\n        parts.forEach(part => {\n            part = part.trim().toLowerCase();\n\n            if (part === 'ctrl') {\n                parsed.ctrl = true;\n            } else if (part === 'shift') {\n                parsed.shift = true;\n            } else {\n                parsed.key = part;\n            }\n        });\n\n        return parsed;\n    }\n}\n","<active-filters [form]=\"form\" [config]=\"keyedFilters\" [compact]=\"compact\">\n    <div class=\"input-container search-input-container\">\n        <mat-icon class=\"search-icon\" svgIcon=\"search\"></mat-icon>\n        <input\n            type=\"text\"\n            class=\"search-input\"\n            #searchInput\n            [placeholder]=\"('Type to search for ' + pluralName) | trans\"\n            [formControl]=\"searchControl\"\n            (focus)=\"inputFocus.emit()\"\n        />\n    </div>\n</active-filters>\n\n<button type=\"button\" class=\"clear-button\" (click)=\"clearSearch()\" *ngIf=\"haveFiltersOrQuery$ | async\" mat-icon-button>\n    <mat-icon svgIcon=\"close\"></mat-icon>\n</button>\n\n<button\n    type=\"button\"\n    mat-button\n    class=\"filter-button\"\n    (click)=\"toggleFilterDropdown()\"\n    *ngIf=\"keyedFilters\"\n>\n    <mat-icon class=\"filter-button-icon\" svgIcon=\"filter-list\"></mat-icon>\n    <span class=\"filter-button-text\" *ngIf=\"!compact\" trans>Filter</span>\n</button>\n\n<filter-suggestions\n    [filters]=\"keyedFilters\"\n    (filterSelected)=\"addFilterFromDropdownClick($event)\"\n    [style.top]=\"filterBarHeight + 5 + 'px'\"\n    [class.visible]=\"filterDropdownVisible$ | async\"\n></filter-suggestions>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport {FormBuilder, FormControl} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {distinctUntilChanged, filter, map, startWith} from 'rxjs/operators';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    fromEvent,\n    merge,\n    Observable,\n    Subscription,\n} from 'rxjs';\nimport {\n    DatatableFilter,\n    FilterValue,\n} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/datatable-filter';\nimport {Keybinds} from '@common/core/keybinds/keybinds.service';\nimport {FilterSuggestionsComponent} from './filter-suggestions/filter-suggestions.component';\nimport {ActiveFiltersComponent} from './active-filters/active-filters.component';\n\ninterface FormData {\n    [key: string]: {\n        key: string;\n        value: {value: FilterValue; operator: string} | FilterValue;\n        operator: string;\n    };\n}\n\n@Component({\n    selector: 'search-input-with-filters',\n    templateUrl: './search-input-with-filters.component.html',\n    styleUrls: ['./search-input-with-filters.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SearchInputWithFiltersComponent implements OnInit, AfterViewInit, OnDestroy {\n    @Input() compact: boolean;\n    @Input() searchControl: FormControl;\n    @Input() pluralName: string;\n    @Input() set filters(filters: DatatableFilter[]) {\n        if (filters) {\n            this.keyedFilters = {};\n            (filters || []).forEach(filter => {\n                this.keyedFilters[filter.key] = filter;\n            });\n        } else {\n            this.keyedFilters = null;\n        }\n    }\n\n    @Output() filterChange = new EventEmitter<string>();\n    @Output() inputFocus = new EventEmitter();\n\n    @ViewChild('searchInput') searchInput: ElementRef<HTMLInputElement>;\n    @ViewChild(FilterSuggestionsComponent) suggestions: FilterSuggestionsComponent;\n    @ViewChild(ActiveFiltersComponent) activeFilters: ActiveFiltersComponent;\n    @ViewChildren('filterSuggestion') filterContainers: QueryList<\n        ElementRef<HTMLElement>\n    >;\n\n    keyedFilters: {[key: string]: DatatableFilter};\n\n    form = this.fb.group({});\n\n    filterBarHeight = 0;\n    filterDropdownVisible$ = new BehaviorSubject<boolean>(false);\n    private closeActionsStream$: Subscription;\n\n    haveFiltersOrQuery$: Observable<boolean>;\n\n    constructor(\n        private fb: FormBuilder,\n        private route: ActivatedRoute,\n        private el: ElementRef<HTMLElement>,\n        private keybinds: Keybinds,\n        private cd: ChangeDetectorRef,\n        private router: Router\n    ) {}\n\n    ngOnInit() {\n        this.haveFiltersOrQuery$ = combineLatest([\n            this.searchControl.valueChanges.pipe(startWith(null)),\n            this.form.valueChanges.pipe(startWith(null)),\n        ]).pipe(map(([s, f]) => s || (f && Object.keys(f).length !== 0)));\n    }\n\n    ngAfterViewInit() {\n        this.watchForSizeChanges();\n        this.setFiltersFromQuery();\n        this.setupKeybinds();\n        this.subscribeToCloseActions();\n        this.bindToFormValueChange();\n    }\n\n    @HostListener('click', ['$event'])\n    onClick(e: MouseEvent) {\n        if (\n            e.target === this.el.nativeElement ||\n            e.target === this.activeFilters.el.nativeElement\n        ) {\n            this.searchInput.nativeElement.focus();\n        }\n    }\n\n    ngOnDestroy() {\n        this.closeActionsStream$?.unsubscribe();\n    }\n\n    clearSearch() {\n        Object.keys(this.form.controls).forEach(key => {\n            this.activeFilters.removeByKey(key);\n        });\n        // prevent double datatable reload\n        this.searchControl.reset(null, {emitEvent: false});\n        this.form.reset();\n    }\n\n    toggleFilterDropdown() {\n        if (this.filterDropdownVisible$.value) {\n            this.filterDropdownVisible$.next(false);\n        } else {\n            this.filterDropdownVisible$.next(true);\n        }\n    }\n\n    addFilterFromDropdownClick(config: DatatableFilter) {\n        this.activeFilters.add(config, {focus: true});\n        this.filterDropdownVisible$.next(false);\n    }\n\n    private searchInputIsFocused(): boolean {\n        return document.activeElement === this.searchInput.nativeElement;\n    }\n\n    private cursorAtStartOfSearchInput(): boolean {\n        return (\n            this.searchInputIsFocused() &&\n            this.searchInput.nativeElement.selectionStart === 0\n        );\n    }\n\n    private cursorAtEndOfSearchInput(): boolean {\n        return (\n            this.searchInputIsFocused() &&\n            this.searchInput.nativeElement.selectionStart ===\n                this.searchInput.nativeElement.value.length\n        );\n    }\n\n    private bindToFormValueChange() {\n        this.form.valueChanges\n            .pipe(\n                map(v => (Object.keys(v).length ? v : null)),\n                distinctUntilChanged()\n            )\n            .subscribe((formData: FormData) => {\n                this.filterChange.emit(formData ? encodeFilterFormData(formData) : null);\n            });\n    }\n\n    private watchForSizeChanges() {\n        const resizeObserver = new ResizeObserver(entries => {\n            this.filterBarHeight = entries[0].contentRect.height;\n        });\n        resizeObserver.observe(this.el.nativeElement, {box: 'border-box'});\n    }\n\n    private setFiltersFromQuery() {\n        const qp = this.router.routerState.root.snapshot.queryParams;\n        if (qp.filters) {\n            const filterValues = decodeFilterString(qp.filters);\n            filterValues.forEach(filterValue => {\n                this.activeFilters.add(this.keyedFilters[filterValue.key], filterValue);\n            });\n        }\n        if (qp.query) {\n            this.searchControl.setValue(qp.query);\n        }\n    }\n\n    private setupKeybinds() {\n        this.keybinds.add(['backspace', 'delete'], () => {\n            if (this.cursorAtStartOfSearchInput()) {\n                return this.activeFilters.focusLast();\n            }\n            if (this.activeFilters.anyFocused()) {\n                this.activeFilters.removeCurrentlyFocused();\n                return this.searchInput.nativeElement.focus();\n            }\n        });\n\n        this.keybinds.add('arrow_left', e => {\n            if (this.cursorAtStartOfSearchInput()) {\n                this.activeFilters.focusLast();\n                e.preventDefault();\n            } else if (this.activeFilters.anyFocused()) {\n                this.activeFilters.focusPrevious();\n                e.preventDefault();\n            }\n        });\n\n        this.keybinds.add('arrow_right', e => {\n            if (this.activeFilters.anyFocused()) {\n                e.preventDefault();\n                const i = this.activeFilters.getFocusedIndex();\n                const next = this.activeFilters.getByIndex(i + 1);\n                if (next) {\n                    next.focus();\n                } else if (this.activeFilters.lastIsFocused()) {\n                    this.searchInput.nativeElement.focus();\n                }\n            }\n        });\n\n        this.keybinds.add(['arrow_down', 'tab'], e => {\n            if (this.cursorAtEndOfSearchInput() || this.suggestions.anyFocused()) {\n                e.preventDefault();\n                if (!this.filterDropdownVisible$.value) {\n                    this.toggleFilterDropdown();\n                }\n                const currentIndex = this.suggestions.getFocusedIndex();\n                let newIndex = currentIndex > -1 ? currentIndex : 0;\n                if (this.suggestions.anyFocused()) {\n                    newIndex += 1;\n                }\n                if (newIndex >= this.suggestions.items.length) {\n                    newIndex = 0;\n                }\n                this.suggestions.focusItemAt(newIndex);\n            }\n        });\n\n        this.keybinds.add(['arrow_up', 'shift+tab'], e => {\n            if (this.suggestions.anyFocused()) {\n                e.preventDefault();\n                const currentIndex = this.activeFilters.getFocusedIndex();\n                let newIndex = currentIndex > -1 ? currentIndex : 0;\n                newIndex -= 1;\n                if (newIndex === -1) {\n                    this.searchInput.nativeElement.focus();\n                } else {\n                    this.suggestions.focusItemAt(newIndex);\n                }\n            }\n        });\n\n        this.keybinds.add('enter', e => {\n            const focused = this.suggestions.getFocusedFilter();\n            if (focused) {\n                e.preventDefault();\n                this.activeFilters.add(focused, {focus: true});\n                this.filterDropdownVisible$.next(false);\n            }\n        });\n\n        this.keybinds.add('esc', e => {\n            if (this.filterDropdownVisible$.value) {\n                e.preventDefault();\n                this.filterDropdownVisible$.next(false);\n            }\n        });\n\n        this.keybinds.listenOn(document, {\n            fireIfInputFocused: true,\n        });\n    }\n\n    private subscribeToCloseActions() {\n        this.closeActionsStream$ = merge(\n            fromEvent(document, 'click') as Observable<MouseEvent>,\n            fromEvent(document, 'auxclick') as Observable<MouseEvent>,\n            fromEvent(document, 'touchend') as Observable<TouchEvent>\n        )\n            .pipe(\n                filter(event => {\n                    const clickTarget = event.target as HTMLElement;\n                    return (\n                        clickTarget !== this.el.nativeElement &&\n                        !this.el.nativeElement.contains(clickTarget)\n                    );\n                })\n            )\n            .subscribe(() => {\n                this.filterDropdownVisible$.next(false);\n            });\n    }\n}\n\nconst encodeFilterFormData = (formData: FormData): string => {\n    const filters = [];\n    Object.values(formData).forEach(filter => {\n        if (filter.value !== '') {\n            filters.push(filter);\n        }\n    });\n    if (!filters.length) {\n        return '';\n    }\n    return encodeURIComponent(btoa(JSON.stringify(filters)));\n};\n\nconst decodeFilterString = (filterString: string): DecodedValue[] => {\n    let filtersFromQuery = [];\n    try {\n        filtersFromQuery = JSON.parse(atob(decodeURIComponent(filterString)));\n    } catch (e) {\n        //\n    }\n    return filtersFromQuery;\n};\n\ninterface DecodedValue {\n    key: string;\n    value: {value: FilterValue; operator: string};\n    operator: string;\n}\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {DatatableService} from '@common/datatable/datatable.service';\nimport {Model} from '@common/core/types/models/model';\nimport {DatatableFilter} from './search-input-with-filters/filter-config/datatable-filter';\n\n@Component({\n    selector: 'datatable-filters',\n    templateUrl: './datatable-filters.component.html',\n    styleUrls: ['./datatable-filters.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DatatableFiltersComponent {\n    @Input() pluralName: string;\n    @Input() filters: DatatableFilter[];\n\n    constructor(public datable: DatatableService<Model>) {}\n\n    onFilterChange(filters: string) {\n        this.datable.filters$.next({\n            filters,\n        });\n    }\n}\n","<search-input-with-filters\n    [searchControl]=\"datable.searchControl\"\n    [pluralName]=\"pluralName\"\n    [filters]=\"filters\"\n    (filterChange)=\"onFilterChange($event)\"\n></search-input-with-filters>\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit} from '@angular/core';\nimport {DatatableService} from '../datatable.service';\nimport {Subscription} from 'rxjs';\nimport {Model} from '../../core/types/models/model';\n\n@Component({\n    selector: '[table-header-checkbox]',\n    template: `\n        <mat-checkbox\n            (change)=\"$event ? toggleAllRows() : null\"\n            [checked]=\"allRowsSelected()\"\n            [indeterminate]=\"anyRowsSelected() && ! allRowsSelected()\">\n        </mat-checkbox>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'class': 'table-checkbox'},\n})\nexport class TableHeaderCheckboxComponent implements OnInit, OnDestroy{\n    private changeRef: Subscription;\n    constructor(\n        public datatable: DatatableService<Model>,\n        private cd: ChangeDetectorRef,\n    ) {}\n\n    ngOnInit() {\n        this.changeRef = this.datatable.selectedRows$.subscribe(() => {\n            this.cd.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this.changeRef.unsubscribe();\n    }\n\n    public anyRowsSelected(): boolean {\n        return !!this.datatable.selectedRows$.value.length;\n    }\n\n    public allRowsSelected() {\n        return this.datatable.selectedRows$.value.length &&\n            this.datatable.selectedRows$.value.length === this.datatable.data$.value?.length;\n    }\n\n    public toggleAllRows() {\n        if (this.allRowsSelected()) {\n            this.datatable.selectedRows$.next([]);\n        } else {\n            this.datatable.selectedRows$.next(\n                this.datatable.data$.value.map(v => v.id)\n            );\n        }\n    }\n}\n","<div class=\"page-size\" *ngIf=\"!hidePerPage\">\n    <div class=\"page-size-label\" trans>Items per page</div>\n    <div class=\"input-container\">\n        <select class=\"page-size-input\" [formControl]=\"perPageControl\">\n            <option [ngValue]=\"10\">10</option>\n            <option [ngValue]=\"15\">15</option>\n            <option [ngValue]=\"20\">20</option>\n            <option [ngValue]=\"50\">50</option>\n            <option [ngValue]=\"100\">100</option>\n        </select>\n    </div>\n</div>\n<div class=\"range-actions\">\n    <div class=\"range-label\" *ngIf=\"from && to && totalRecords\">\n        {{from}} - {{to}} {{'of' | trans}} {{totalRecords | number}}\n    </div>\n    <button type=\"button\" [disabled]=\"!havePrevious || (datable.paginator.loading$ | async)\" class=\"range-button\" (click)=\"previousPage()\" mat-icon-button>\n        <mat-icon svgIcon=\"chevron-left\"></mat-icon>\n    </button>\n    <button type=\"button\" [disabled]=\"!haveNext || (datable.paginator.loading$ | async)\" class=\"range-button\" (click)=\"nextPage()\" mat-icon-button>\n        <mat-icon svgIcon=\"chevron-right\"></mat-icon>\n    </button>\n</div>\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {DatatableService} from '../datatable.service';\nimport {Subscription} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\n@Component({\n    selector: 'datatable-footer',\n    templateUrl: './datatable-footer.component.html',\n    styleUrls: ['./datatable-footer.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DatatableFooterComponent implements OnInit, OnDestroy {\n    @Input() hidePerPage = false;\n    public perPageControl = new FormControl(15);\n    public from: number;\n    public to: number;\n    public totalRecords: number;\n    public havePrevious: boolean;\n    public haveNext: boolean;\n    private changeRef: Subscription;\n\n    constructor(\n        public datable: DatatableService<any>,\n        private cd: ChangeDetectorRef,\n    ) {}\n\n    ngOnInit() {\n        this.changeRef = this.datable.paginator.response$\n            .pipe(filter(r => !!r?.pagination), map(r => r.pagination))\n            .subscribe(pagination => {\n                this.totalRecords = pagination.total;\n                this.to = Math.min((pagination.per_page * pagination.current_page), this.totalRecords);\n                this.from = Math.max((this.to - pagination.per_page), 1);\n                this.havePrevious = this.datable.paginator.canLoadPrevPage();\n                this.haveNext = this.datable.paginator.canLoadNextPage();\n                this.perPageControl.setValue(parseInt('' + pagination.per_page), {emitEvent: false});\n                this.cd.markForCheck();\n            });\n\n        this.perPageControl.valueChanges\n            .subscribe(perPage => {\n                this.datable.paginator.changePerPage(perPage);\n            });\n    }\n\n    ngOnDestroy() {\n        this.changeRef.unsubscribe();\n        this.datable.destroy();\n    }\n\n    public previousPage() {\n        this.datable.paginator.previousPage();\n    }\n\n    public nextPage() {\n        this.datable.paginator.nextPage();\n    }\n}\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {DatatableService} from '../datatable.service';\nimport {Subscription} from 'rxjs';\nimport {Model} from '../../core/types/models/model';\n\n@Component({\n    selector: '[table-body-checkbox]',\n    template: `\n        <mat-checkbox (click)=\"$event.stopPropagation()\"\n                      (change)=\"$event ? toggleRow(rowId) : null\"\n                      [checked]=\"isRowSelected(rowId)\">\n        </mat-checkbox>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'class': 'table-checkbox'}\n})\nexport class TableBodyCheckboxComponent implements OnInit, OnDestroy {\n    @Input('table-body-checkbox') rowId: number;\n    private changeRef: Subscription;\n\n    constructor(\n        public datatable: DatatableService<Model>,\n        private cd: ChangeDetectorRef,\n    ) {}\n\n    ngOnInit() {\n        this.changeRef = this.datatable.selectedRows$.subscribe(value => {\n            this.cd.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this.changeRef.unsubscribe();\n    }\n\n    public isRowSelected(id: number): boolean {\n        return this.datatable.selectedRows$.value.indexOf(id) > -1;\n    }\n\n    public toggleRow(id: number) {\n        if (this.isRowSelected(id)) {\n            const array = this.datatable.selectedRows$.value.slice();\n            const i = this.datatable.selectedRows$.value.indexOf(id);\n            array.splice(i, 1);\n            this.datatable.selectedRows$.next(array);\n        } else {\n            this.datatable.selectedRows$.next(\n                [...this.datatable.selectedRows$.value, id]\n            );\n        }\n    }\n}\n","<div class=\"datatable-page-header\">\n  <h1 trans>Artists</h1>\n  <div class=\"header\">\n    <datatable-filters pluralName=\"artists\" [filters]=\"filters\"></datatable-filters>\n    <div class=\"action-buttons\">\n      <button\n        mat-raised-button\n        color=\"accent\"\n        class=\"button-with-icon\"\n        [matMenuTriggerFor]=\"menu\"\n      >\n        <mat-icon svgIcon=\"add\"></mat-icon>\n        <span trans>New Artist</span>\n      </button>\n      <mat-menu #menu=\"matMenu\">\n        <a\n          mat-menu-item\n          *ngIf=\"currentUser.hasPermission('artists.create')\"\n          routerLink=\"/admin/backstage/artists/new\"\n          class=\"button-with-icon\"\n          trans\n        >\n          Create Artist\n        </a>\n        <button\n          mat-menu-item\n          type=\"button\"\n          *ngIf=\"settings.get('spotify_is_setup')\"\n          (click)=\"openImportMedialModal()\"\n          trans\n        >\n          Import Artist\n        </button>\n      </mat-menu>\n    </div>\n  </div>\n</div>\n\n<div class=\"datatable responsive-table\">\n  <mat-progress-bar\n    class=\"loading-bar\"\n    mode=\"indeterminate\"\n    color=\"accent\"\n    *ngIf=\"datatable.paginator && datatable.paginator.loading$ | async\"\n  ></mat-progress-bar>\n  <table class=\"material-table\">\n    <thead>\n      <tr>\n        <th table-header-checkbox></th>\n        <th trans>Artist</th>\n        <th table-sort-header=\"albums_count\" trans>Number of Albums</th>\n        <th table-sort-header=\"plays\" trans>Total Plays</th>\n        <th table-sort-header=\"views\" trans>Page Views</th>\n        <th table-sort-header=\"updated_at\" trans>Last Updated</th>\n        <th></th>\n      </tr>\n      <tr *ngIf=\"datatable.selectedRows$.value.length as selectedCount\">\n        <th colspan=\"7\">\n          <div\n            class=\"bulk-actions-title\"\n            [transValues]=\"{count: selectedCount, resource: 'artist(s)'}\"\n            trans\n          >\n            :count :resource selected:\n          </div>\n          <div class=\"bulk-actions\">\n            <button\n              mat-raised-button\n              color=\"warn\"\n              (click)=\"maybeDeleteSelectedArtists()\"\n              *ngIf=\"currentUser.hasPermission('artists.delete')\"\n              trans\n            >\n              Delete\n            </button>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let artist of artists$ | async\">\n        <td [table-body-checkbox]=\"artist.id\"></td>\n        <td>\n          <div class=\"column-with-image\">\n            <media-image [media]=\"artist\"></media-image>\n            <a [routerLink]=\"urls.artist(artist)\" class=\"link\" target=\"_blank\">{{ artist.name }}</a>\n          </div>\n        </td>\n        <td data-label=\"Number of Albums\">{{ artist.albums_count }}</td>\n        <td data-label=\"Popularity\">{{ artist.plays | number }}</td>\n        <td data-label=\"Page Views\">{{ artist.views | number }}</td>\n        <td data-label=\"Last Updated\">{{ artist.updated_at | formattedDate }}</td>\n        <td class=\"edit-column\">\n          <a\n            mat-icon-button\n            [routerLink]=\"urls.editArtist(artist.id, true)\"\n            *ngIf=\"currentUser.hasPermission('artists.update')\"\n            [matTooltip]=\"'Edit artist' | trans\"\n          >\n            <mat-icon svgIcon=\"edit\"></mat-icon>\n          </a>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <no-results-message svgImage=\"music.svg\" *ngIf=\"datatable.paginator.noResults$ | async\">\n    <span primary-text>No artists have been created yet</span>\n  </no-results-message>\n  <datatable-footer></datatable-footer>\n</div>\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {Artist, ARTIST_MODEL} from '../../models/Artist';\nimport {Artists} from '../../web-player/artists/artists.service';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {WebPlayerUrls} from '../../web-player/web-player-urls.service';\nimport {DatatableService} from '@common/datatable/datatable.service';\nimport {Observable} from 'rxjs';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {ImportMediaModalComponent} from '../import-media-modal/import-media-modal.component';\nimport {Settings} from '@common/core/config/settings.service';\nimport {ARTIST_INDEX_FILTERS} from './artist-index-filters';\n\n@Component({\n    selector: 'artist-index',\n    templateUrl: './artist-index.component.html',\n    encapsulation: ViewEncapsulation.None,\n    providers: [DatatableService],\n})\nexport class ArtistIndexComponent implements OnInit {\n    artists$ = this.datatable.data$ as Observable<Artist[]>;\n    filters = ARTIST_INDEX_FILTERS;\n    constructor(\n        public datatable: DatatableService<Artist>,\n        private artists: Artists,\n        public currentUser: CurrentUser,\n        public urls: WebPlayerUrls,\n        public modal: Modal,\n        public settings: Settings,\n    ) {}\n\n    ngOnInit() {\n        this.datatable.sort$.next({orderBy: 'plays'});\n        this.datatable.init({\n            uri: 'artists',\n        });\n    }\n\n    public maybeDeleteSelectedArtists() {\n        this.datatable.confirmResourceDeletion('artists').subscribe(() => {\n            this.artists.delete(this.datatable.selectedRows$.value).subscribe(() => {\n                this.datatable.reset();\n            });\n        });\n    }\n\n    public openImportMedialModal() {\n        this.modal.open(ImportMediaModalComponent, {modelType: ARTIST_MODEL})\n            .afterClosed()\n            .subscribe(response => {\n                if (response) {\n                    this.datatable.reset();\n                }\n            });\n    }\n}\n","import {\n    ALL_PRIMITIVE_OPERATORS,\n    DatatableFilter,\n    FilterControlType, FilterOperator,\n} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/datatable-filter';\nimport {\n    CreatedAtFilter, TimestampFilter,\n    UpdatedAtFilter,\n} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/timestamp-filter';\nimport {FindUserModalComponent} from '@common/auth/find-user-modal/find-user-modal.component';\n\nexport const ALBUM_INDEX_FILTERS: DatatableFilter[] = [\n    new DatatableFilter({\n        type: FilterControlType.Select,\n        key: 'image',\n        label: 'Artwork',\n        defaultValue: false,\n        description: 'Whether album has any artwork',\n        options: [\n            {\n                key: 'Has artwork',\n                value: {operator: FilterOperator.ne, value: null},\n            },\n            {\n                key: 'Does not have artwork',\n                value: null,\n            },\n        ],\n    }),\n\n    new DatatableFilter({\n        type: FilterControlType.Input,\n        inputType: 'number',\n        key: 'plays',\n        label: 'Plays',\n        defaultValue: 100,\n        description: 'Total number of plays for all album tracks',\n        operators: ALL_PRIMITIVE_OPERATORS,\n        defaultOperator: FilterOperator.gte,\n    }),\n\n    new TimestampFilter({\n        key: 'release_date',\n        label: 'Release Date',\n        description: 'Release date for the album',\n    }),\n    new CreatedAtFilter({\n        description: 'Date album was created',\n    }),\n    new UpdatedAtFilter({\n        description: 'Date album was last updated',\n    }),\n];\n","<div class=\"datatable-page-header\">\n  <h1 trans>Albums</h1>\n  <div class=\"header\">\n    <datatable-filters pluralName=\"albums\" [filters]=\"filters\"></datatable-filters>\n    <div class=\"action-buttons\">\n      <button mat-raised-button color=\"accent\" class=\"button-with-icon\" [matMenuTriggerFor]=\"menu\">\n        <mat-icon svgIcon=\"add\"></mat-icon>\n        <span trans>New Album</span>\n      </button>\n      <mat-menu #menu=\"matMenu\">\n        <a\n          mat-menu-item\n          *ngIf=\"currentUser.hasPermission('albums.create')\"\n          routerLink=\"/admin/backstage/albums/new\"\n          class=\"button-with-icon\"\n          trans\n        >\n          Create Album\n        </a>\n        <a\n          mat-menu-item\n          *ngIf=\"currentUser.hasPermission('albums.create')\"\n          routerLink=\"/admin/backstage/upload\"\n          class=\"button-with-icon\"\n          trans\n        >\n          Upload Tracks\n        </a>\n        <button\n          mat-menu-item\n          type=\"button\"\n          *ngIf=\"settings.get('spotify_is_setup')\"\n          (click)=\"openImportMedialModal()\"\n          trans\n        >\n          Import Album\n        </button>\n      </mat-menu>\n    </div>\n  </div>\n</div>\n\n<div class=\"datatable responsive-table\">\n  <mat-progress-bar\n    class=\"loading-bar\"\n    mode=\"indeterminate\"\n    color=\"accent\"\n    *ngIf=\"datatable.paginator && datatable.paginator.loading$ | async\"\n  ></mat-progress-bar>\n  <table class=\"material-table\">\n    <thead>\n      <tr>\n        <th table-header-checkbox></th>\n        <th trans>Album</th>\n        <th trans>Artist</th>\n        <th table-sort-header trans>Release Date</th>\n        <th trans>Number Of Tracks</th>\n        <th table-sort-header=\"plays\" trans>Plays</th>\n        <th table-sort-header=\"updated_at\" trans>Last Updated</th>\n        <th></th>\n      </tr>\n      <tr *ngIf=\"datatable.selectedRows$.value.length as selectedCount\">\n        <th colspan=\"8\">\n          <div\n            class=\"bulk-actions-title\"\n            [transValues]=\"{count: selectedCount, resource: 'album(s)'}\"\n            trans\n          >\n            :count :resource selected:\n          </div>\n          <div class=\"bulk-actions\">\n            <button\n              mat-raised-button\n              color=\"warn\"\n              (click)=\"maybeDeleteSelectedAlbums()\"\n              *ngIf=\"currentUser.hasPermission('albums.delete')\"\n              trans\n            >\n              Delete\n            </button>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let album of albums$ | async\">\n        <td [table-body-checkbox]=\"album.id\"></td>\n        <td>\n          <div class=\"column-with-image\">\n            <media-image [media]=\"album\" default=\"album\"></media-image>\n            <a [routerLink]=\"urls.album(album)\" class=\"link\">{{ album.name }}</a>\n          </div>\n        </td>\n        <td data-label=\"Artist\">\n          <div class=\"column-with-image\" *ngIf=\"album.artists[0] as artist\">\n            <media-image [media]=\"artist\" default=\"artist\"></media-image>\n            <a [routerLink]=\"urls.artist(artist)\" class=\"link\">{{ artist.name }}</a>\n          </div>\n        </td>\n        <td data-label=\"Release Date\">{{ album.release_date ? album.release_date : '&ndash;' }}</td>\n        <td data-label=\"Number of Tracks\">\n          {{ album.tracks_count ? album.tracks_count : '&ndash;' }}\n        </td>\n        <td data-label=\"Views\">{{ album.plays ? (album.plays | number) : '&ndash;' }}</td>\n        <td data-label=\"Last Updated\">{{ album.updated_at | formattedDate }}</td>\n        <td class=\"edit-column\">\n          <a\n            mat-icon-button\n            [routerLink]=\"urls.editAlbum(album, true)\"\n            *ngIf=\"currentUser.hasPermission('albums.update')\"\n            [matTooltip]=\"'Edit album' | trans\"\n          >\n            <mat-icon svgIcon=\"edit\"></mat-icon>\n          </a>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <no-results-message svgImage=\"music.svg\" *ngIf=\"datatable.paginator.noResults$ | async\">\n    <span primary-text>No albums have been created yet</span>\n  </no-results-message>\n  <datatable-footer></datatable-footer>\n</div>\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {Settings} from '@common/core/config/settings.service';\nimport {Albums} from '../../../web-player/albums/albums.service';\nimport {Album, ALBUM_MODEL} from '../../../models/Album';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {WebPlayerUrls} from '../../../web-player/web-player-urls.service';\nimport {WebPlayerImagesService} from '../../../web-player/web-player-images.service';\nimport {DatatableService} from '@common/datatable/datatable.service';\nimport {Observable} from 'rxjs';\nimport {ImportMediaModalComponent} from '../../import-media-modal/import-media-modal.component';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {ALBUM_INDEX_FILTERS} from './album-index-filters';\n\n@Component({\n    selector: 'album-index',\n    templateUrl: './album-index.component.html',\n    styleUrls: ['./album-index.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [DatatableService],\n})\nexport class AlbumIndexComponent implements OnInit {\n    albums$ = this.datatable.data$ as Observable<Album[]>;\n    filters = ALBUM_INDEX_FILTERS;\n    constructor(\n        public datatable: DatatableService<Album>,\n        public settings: Settings,\n        private albums: Albums,\n        public currentUser: CurrentUser,\n        public urls: WebPlayerUrls,\n        public images: WebPlayerImagesService,\n        private modal: Modal,\n    ) {}\n\n    ngOnInit() {\n        this.datatable.sort$.next({orderBy: 'plays'});\n        this.datatable.init({\n            uri: 'albums',\n            staticParams: {withCount: 'tracks'}\n        });\n    }\n\n    public maybeDeleteSelectedAlbums() {\n        this.datatable.confirmResourceDeletion('albums').subscribe(() => {\n            this.albums.delete(this.datatable.selectedRows$.value).subscribe(() => {\n                this.datatable.reset();\n            });\n        });\n    }\n\n    public openImportMedialModal() {\n        this.modal.open(ImportMediaModalComponent, {modelType: ALBUM_MODEL})\n            .afterClosed()\n            .subscribe(response => {\n                if (response) {\n                    this.datatable.reset();\n                }\n            });\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\nimport {Genre} from '../../models/Genre';\nimport {BackendResponse} from '@common/core/types/backend-response';\nimport {Channel} from '../../admin/channels/channel';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class Genres {\n    constructor(private httpClient: AppHttpClient) {}\n\n    public create(params: Partial<Genre>): BackendResponse<{genre: Genre}> {\n        return this.httpClient.post('genres', params);\n    }\n\n    public update(id: number, params: Partial<Genre>): BackendResponse<{genre: Genre}> {\n        return this.httpClient.put('genres/' + id, params);\n    }\n\n    public delete(ids: number[]): BackendResponse<void> {\n        return this.httpClient.delete('genres', {ids});\n    }\n\n    public get(name: string, params = {}): BackendResponse<{genre: Genre, channel: Channel}> {\n        return this.httpClient.get(`genres/${name}`, params);\n    }\n}\n","<div class=\"modal-header\">\n    <h2 class=\"modal-title\" mat-dialog-title trans>\n        <span *ngIf=\"updating\" trans>Update Genre</span>\n        <span *ngIf=\"!updating\" trans>New Genre</span>\n    </h2>\n    <button type=\"button\" (click)=\"close()\" tabindex=\"-1\" class=\"close-button no-style icon-button\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n\n    </button>\n</div>\n\n<form (ngSubmit)=\"confirm()\" ngNativeValidate>\n    <mat-dialog-content class=\"many-inputs\">\n        <div class=\"input-container\">\n            <label for=\"genre-name\" trans>Name</label>\n            <input type=\"text\" id=\"genre-name\" name=\"name\" [(ngModel)]=\"genre.name\" required>\n            <p trans>Will be used in the url.</p>\n            <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\n        </div>\n        <div class=\"input-container\">\n            <label for=\"genre-display-name\" trans>Display Name</label>\n            <input type=\"text\" id=\"genre-display-name\" name=\"display_name\" [(ngModel)]=\"genre.display_name\" required>\n            <p trans>Will be used across the site. If not provided, name will be used instead.</p>\n            <div class=\"error\" *ngIf=\"errors.display_name\">{{errors.display_name}}</div>\n        </div>\n        <div class=\"input-container image-input\">\n            <label for=\"image\" trans>Image</label>\n            <div class=\"inline-container\">\n                <button type=\"button\" mat-flat-button color=\"accent\" (click)=\"openUploadImageModal()\" [matTooltip]=\"'Upload genre image' | trans\">\n                    <mat-icon svgIcon=\"file-upload\"></mat-icon>\n                </button>\n                <input type=\"text\" id=\"image\" name=\"image\" [(ngModel)]=\"genre.image\">\n            </div>\n            <upload-progress-bar></upload-progress-bar>\n            <p trans>Upload genre image or enter image url.</p>\n            <div class=\"error\" *ngIf=\"errors.url\">{{errors.url}}</div>\n        </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <button type=\"button\" mat-button class=\"import-button\" *ngIf=\"genre?.id && settings.get('spotify_is_setup')\" (click)=\"importArtists()\" trans>Import Artists</button>\n        <button (click)=\"close()\" type=\"button\" mat-button class=\"cancel-button\" trans>Close</button>\n        <button type=\"submit\" mat-raised-button color=\"accent\" class=\"submit-button\" trans>\n            <span *ngIf=\"updating\" trans>Update</span>\n            <span *ngIf=\"!updating\" trans>Create</span>\n        </button>\n    </mat-dialog-actions>\n\n    <loading-indicator [isVisible]=\"loading\" class=\"overlay opacity-high\"></loading-indicator>\n</form>\n","import {Component, Inject, Optional} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Genres} from '../../../web-player/genres/genres.service';\nimport {Genre, GENRE_MODEL} from '../../../models/Genre';\nimport {ImageUploadValidator} from '../../../web-player/image-upload-validator';\nimport {UploadQueueService} from '@common/uploads/upload-queue/upload-queue.service';\nimport {Settings} from '@common/core/config/settings.service';\nimport {openUploadWindow} from '@common/uploads/utils/open-upload-window';\nimport {UploadInputTypes} from '@common/uploads/upload-input-config';\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\nimport {UploadApiConfig} from '@common/uploads/types/upload-api-config';\nimport {finalize} from 'rxjs/operators';\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\nimport {Toast} from '@common/core/ui/toast.service';\n\ninterface CrupdateGenreModalData {\n    genre?: Genre;\n}\n\n@Component({\n    selector: 'crupdate-genre-modal',\n    templateUrl: './crupdate-genre-modal.component.html',\n    styleUrls: ['./crupdate-genre-modal.component.scss'],\n    providers: [UploadQueueService],\n})\nexport class CrupdateGenreModalComponent {\n    public errors: any = {};\n    public updating = false;\n    public loading = false;\n    public genre: Partial<Genre> = {};\n\n    constructor(\n        public settings: Settings,\n        protected genres: Genres,\n        protected uploadQueue: UploadQueueService,\n        private dialogRef: MatDialogRef<CrupdateGenreModalComponent>,\n        private imageValidator: ImageUploadValidator,\n        private http: AppHttpClient,\n        private toast: Toast,\n        @Optional() @Inject(MAT_DIALOG_DATA) public data: CrupdateGenreModalData,\n    ) {\n        if (this.data.genre) {\n            this.genre = this.data.genre;\n            this.updating = true;\n        }\n    }\n\n    public confirm() {\n        let request;\n\n        if (this.updating) {\n            request = this.genres.update(this.genre.id, this.getPayload());\n        } else {\n            request = this.genres.create(this.getPayload());\n        }\n\n        request.subscribe(response => {\n            this.loading = false;\n            this.dialogRef.close(response.genre);\n        }, (errResponse: BackendErrorResponse) => {\n            this.loading = false;\n            this.errors = errResponse.errors;\n        });\n    }\n\n    public close(genre?: Genre) {\n        this.dialogRef.close(genre);\n    }\n\n    public openUploadImageModal() {\n        const params = {\n            uri: 'uploads/images',\n            httpParams: {diskPrefix: 'genre_media', disk: 'public'},\n            validator: this.imageValidator\n        } as UploadApiConfig;\n        openUploadWindow({types: [UploadInputTypes.image]}).then(uploadedFiles => {\n            if ( ! uploadedFiles) return;\n            this.uploadQueue.start(uploadedFiles, params).subscribe(response => {\n                this.genre.image = response.fileEntry.url;\n            });\n        });\n    }\n\n    private getPayload() {\n        return {\n            name: this.genre.name,\n            display_name: this.genre.display_name,\n            image: this.genre.image,\n        };\n    }\n\n    public importArtists() {\n        this.loading = true;\n        this.http.post('import-media/single-item', {modelType: GENRE_MODEL, genreId: this.genre.id})\n            .pipe(finalize(() => this.loading = false))\n            .subscribe(() => {\n                this.toast.open(`Genre artists imported.`);\n            }, () => this.toast.open('Could not import genre artists.'));\n    }\n}\n","import {DatatableFilter} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/datatable-filter';\nimport {\n    CreatedAtFilter,\n    UpdatedAtFilter,\n} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/timestamp-filter';\n\nexport const GENRE_INDEX_FILTERS: DatatableFilter[] = [\n    new CreatedAtFilter({\n        description: 'Date genre was created',\n    }),\n    new UpdatedAtFilter({\n        description: 'Date genre was last updated',\n    }),\n];\n","<div class=\"datatable-page-header\">\n  <h1 trans>Genres</h1>\n  <div class=\"header\">\n    <datatable-filters pluralName=\"genres\" [filters]=\"filters\"></datatable-filters>\n    <div class=\"action-buttons\">\n      <button\n        mat-raised-button\n        color=\"accent\"\n        (click)=\"openCrupdateGenreModal()\"\n        *ngIf=\"currentUser.hasPermission('genres.create')\"\n        class=\"button-with-icon\"\n      >\n        <mat-icon svgIcon=\"add\"></mat-icon>\n        <span trans>Add New Genre</span>\n      </button>\n    </div>\n  </div>\n</div>\n\n<div class=\"datatable responsive-table\">\n  <mat-progress-bar\n    class=\"loading-bar\"\n    mode=\"indeterminate\"\n    color=\"accent\"\n    *ngIf=\"datatable.paginator && datatable.paginator.loading$ | async\"\n  ></mat-progress-bar>\n  <table class=\"material-table\">\n    <thead>\n      <tr>\n        <th table-header-checkbox></th>\n        <th table-sort-header=\"name\" trans>Genre</th>\n        <th table-sort-header trans>Display Name</th>\n        <th table-sort-header=\"artists_count\" trans>Number of Artists</th>\n        <th table-sort-header=\"updated_at\" trans>Last Updated</th>\n        <th></th>\n      </tr>\n      <tr *ngIf=\"datatable.selectedRows$.value.length as selectedCount\">\n        <th colspan=\"6\">\n          <div\n            class=\"bulk-actions-title\"\n            [transValues]=\"{count: selectedCount, resource: 'genre(s)'}\"\n            trans\n          >\n            :count :resource selected:\n          </div>\n          <div class=\"bulk-actions\">\n            <button\n              mat-raised-button\n              color=\"warn\"\n              (click)=\"confirmGenresDeletion()\"\n              *ngIf=\"currentUser.hasPermission('genres.delete')\"\n              trans\n            >\n              Delete\n            </button>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let genre of genres$ | async\">\n        <td [table-body-checkbox]=\"genre.id\"></td>\n        <td>\n          <div class=\"column-with-image\">\n            <media-image [media]=\"genre\"></media-image>\n            <a [routerLink]=\"urls.genre(genre)\" class=\"link\" target=\"_blank\">{{ genre.name }}</a>\n          </div>\n        </td>\n        <td data-label=\"Display Name\">{{ genre.display_name ? genre.display_name : '-' }}</td>\n        <td data-label=\"Number of Artists\">\n          {{ genre.artists_count ? genre.artists_count : '-' }}\n        </td>\n        <td data-label=\"Last Updated\">{{ genre.updated_at | formattedDate }}</td>\n        <td class=\"edit-column\">\n          <button\n            mat-icon-button\n            (click)=\"openCrupdateGenreModal(genre)\"\n            *ngIf=\"currentUser.hasPermission('genres.update')\"\n            [matTooltip]=\"'Edit genre' | trans\"\n          >\n            <mat-icon svgIcon=\"edit\"></mat-icon>\n          </button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <no-results-message svgImage=\"folder.svg\" *ngIf=\"datatable.paginator.noResults$ | async\">\n    <span primary-text>No genres have been created yet</span>\n  </no-results-message>\n  <datatable-footer></datatable-footer>\n</div>\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {Genres} from '../../web-player/genres/genres.service';\nimport {Genre} from '../../models/Genre';\nimport {CrupdateGenreModalComponent} from './crupdate-genre-modal/crupdate-genre-modal.component';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {WebPlayerUrls} from '../../web-player/web-player-urls.service';\nimport {DatatableService} from '@common/datatable/datatable.service';\nimport {Observable} from 'rxjs';\nimport {GENRE_INDEX_FILTERS} from './genre-index-filters';\n\ninterface IndexGenre extends Genre {\n    artists_count?: number;\n    updated_at: string;\n}\n\n@Component({\n    selector: 'genres',\n    templateUrl: './genres.component.html',\n    styleUrls: ['./genres.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [DatatableService],\n})\nexport class GenresComponent implements OnInit {\n    genres$ = this.datatable.data$ as Observable<IndexGenre[]>;\n    filters = GENRE_INDEX_FILTERS;\n    constructor(\n        public datatable: DatatableService<IndexGenre>,\n        private genres: Genres,\n        public currentUser: CurrentUser,\n        public urls: WebPlayerUrls,\n    ) {}\n\n    ngOnInit() {\n        this.datatable.init({\n            uri: 'genres',\n            staticParams: {withCount: 'artists'}\n        });\n    }\n\n    public openCrupdateGenreModal(genre?: IndexGenre) {\n        this.datatable.openCrupdateResourceModal(CrupdateGenreModalComponent, {genre})\n            .subscribe(() => {\n                this.datatable.reset();\n            });\n    }\n\n    public confirmGenresDeletion() {\n        this.datatable.confirmResourceDeletion('genres').subscribe(() => {\n            this.genres.delete(this.datatable.selectedRows$.value).subscribe(() => {\n                this.datatable.reset();\n            });\n        });\n    }\n}\n","import {Track} from \"./Track\";\n\nexport class Lyric {\n    id: number;\n    text: string;\n    track_id: number;\n    track?: Track;\n    updated_at: string;\n\n    constructor(params: Object = {}) {\n        for (let name in params) {\n            this[name] = params[name];\n        }\n    }\n}\n","import {Injectable, NgZone} from '@angular/core';\nimport {Settings} from '../../core/config/settings.service';\nimport {LazyLoaderService} from '../../core/utils/lazy-loader.service';\nimport {BreakpointsService} from '../../core/ui/breakpoints.service';\nimport {Editor, EditorManager} from 'tinymce';\nimport {Translations} from '../../core/translations/translations.service';\n\nconst EDITOR_TOOLBAR_HEIGHT = 74;\n\ndeclare const tinymce: EditorManager;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class TinymceTextEditor {\n    private bootstrapPromise: Promise<Editor> | boolean;\n    private bootstrapPromiseResolve: any;\n    private config: {[key: string]: any};\n    public tinymceInstance: Editor | any;\n\n    constructor(\n        private settings: Settings,\n        private zone: NgZone,\n        private lazyLoader: LazyLoaderService,\n        private breakpoints: BreakpointsService,\n        private i18n: Translations\n    ) {\n        this.makeBootstrapPromise();\n    }\n\n    public reset() {\n        if (!this.editorIsReady()) return;\n        this.tinymceInstance.setContent('');\n        this.tinymceInstance.undoManager.clear();\n    }\n\n    public focus() {\n        this.waitForEditor().then(() => {\n            this.tinymceInstance.focus(false);\n        });\n    }\n\n    public hasUndo(): boolean {\n        return (\n            this.editorIsReady() && this.tinymceInstance.undoManager.hasUndo()\n        );\n    }\n\n    public hasRedo(): boolean {\n        return (\n            this.editorIsReady() && this.tinymceInstance.undoManager.hasRedo()\n        );\n    }\n\n    /**\n     * Queries the current state for specified tinymce command.\n     * For example if the current selection is \"bold\".\n     */\n    public queryCommandState(name: string): boolean | number {\n        return (\n            this.editorIsReady() && this.tinymceInstance.queryCommandState(name)\n        );\n    }\n\n    public execCommand(name: string, value: string | number = null) {\n        this.waitForEditor().then(() => {\n            this.zone.run(() => {\n                this.tinymceInstance.execCommand(name, false, value);\n            });\n        });\n    }\n\n    public getContents(params?: Object): string {\n        if (!this.editorIsReady()) return '';\n        return this.tinymceInstance.getContent(params);\n    }\n\n    public setContents(contents: string) {\n        this.waitForEditor().then(() => {\n            if (!this.tinymceInstance.undoManager) return;\n\n            this.tinymceInstance.undoManager.transact(() => {\n                this.tinymceInstance.setContent(contents);\n            });\n\n            this.tinymceInstance.selection.setCursorLocation();\n            this.tinymceInstance.nodeChanged();\n            this.tinymceInstance.execCommand('mceResize');\n        });\n    }\n\n    /**\n     * Insert specified contents at the end of tinymce.\n     */\n    public insertContents(contents) {\n        this.waitForEditor().then(() => {\n            this.tinymceInstance.execCommand(\n                'mceInsertContent',\n                false,\n                contents\n            );\n            setTimeout(() => this.tinymceInstance.selection.collapse());\n        });\n    }\n\n    public insertImage(url: string) {\n        this.waitForEditor().then(() => {\n            this.insertContents('<img src=\"' + url + '\"/>');\n            setTimeout(() => this.execCommand('mceAutoResize'), 500);\n        });\n    }\n\n    public waitForEditor(): Promise<Editor> {\n        // editor already bootstrapped\n        if (this.tinymceInstance) {\n            return new Promise(resolve => resolve(this.tinymceInstance));\n        }\n        // editor is still bootstrapping\n        if (this.bootstrapPromise) {\n            return this.bootstrapPromise as Promise<Editor>;\n        }\n    }\n\n    public setConfig(config: object) {\n        this.config = config;\n        this.loadTinymce().then(() => {\n            this.initTinymce();\n        });\n    }\n\n    private editorIsReady(): boolean {\n        return (\n            !this.bootstrapPromise &&\n            !!this.tinymceInstance &&\n            !!this.tinymceInstance.undoManager\n        );\n    }\n\n    private loadTinymce(): Promise<any> {\n        return this.lazyLoader.loadAsset('js/tinymce/tinymce.min.js', {\n            type: 'js',\n        });\n    }\n\n    private initTinymce() {\n        const config: any = {\n            target: this.config.textAreaEl.nativeElement,\n            plugins: ['link', 'codesample', 'paste', 'autoresize'],\n            branding: false,\n            browser_spellcheck: true,\n            max_height: this.config.maxHeight,\n            min_height: this.config.minHeight,\n            autoresize_on_init: false,\n            paste_as_text: true,\n            elementpath: false,\n            statusbar: false,\n            entity_encoding: 'raw',\n            menubar: false,\n            toolbar: false,\n            convert_urls: false,\n            forced_root_block: false,\n            document_base_url: document.baseURI,\n            element_format: 'html',\n            body_class: 'editor-body',\n            content_style: `html {font-size: 62.5%;}\n.editor-body {font-size: 1.4rem;font-family: \"Roboto\", \"Helvetica Neue\", sans-serif;color: rgba(0, 0, 0, .87);}\nimg {max-width: 100%}\ncode[class*=language-], pre[class*=language-] {font-size: inherit;} .mce-preview-object {border: none;}`,\n            content_css: [\n                'https://fonts.googleapis.com/css?family=Roboto:300,400,500,700,400italic',\n            ],\n            default_link_target: '_blank',\n            link_assume_external_targets: true,\n            target_list: false,\n            link_title: false,\n            image_dimensions: false,\n            image_description: false,\n            setup: editor => {\n                this.tinymceInstance = editor;\n                editor.on('change', () =>\n                    this.config.onChange.emit(editor.getContent())\n                );\n\n                editor.on('click', () => {\n                    // need to run angular zone on editor (iframe) click\n                    // so custom editor buttons are highlighted properly\n                    this.zone.run(() => {});\n                });\n            },\n            init_instance_callback: editor => {\n                this.bootstrapPromise = false;\n                this.bootstrapPromiseResolve(this.tinymceInstance);\n\n                const onEnter = () => {\n                    this.zone.run(() => {\n                        this.config.onChange.emit(editor.getContent());\n                        this.config.onCtrlEnter.emit();\n                    });\n                };\n                editor.shortcuts.add('ctrl+13', 'desc', onEnter);\n                editor.shortcuts.add('meta+13', 'desc', onEnter);\n            },\n        };\n\n        if (this.config['showAdvancedControls']) {\n            config.plugins = config.plugins.concat([\n                'media',\n                'hr',\n                'visualblocks',\n                'visualchars',\n                'wordcount',\n            ]);\n            config.forced_root_block = 'p';\n            config.statusbar = true;\n            config.autoresize_on_init = true;\n            config.extended_valid_elements =\n                'svg[*],use[*],iframe[src|frameborder|width|height|allow=*|allowfullscreen],script[src]';\n            config.elementpath = true;\n            config.content_css.push(\n                this.settings.getAssetUrl() + 'css/advanced-editor-styles.css'\n            );\n            config.target_list = [\n                {title: this.i18n.t('Current window'), value: ''},\n                {title: this.i18n.t('New Window'), value: '_blank'},\n            ];\n            config.codesample_languages = [\n                {text: 'HTML/XML', value: 'markup'},\n                {text: 'JavaScript', value: 'javascript'},\n                {text: 'CSS', value: 'css'},\n                {text: 'Shell', value: 'shell-session'},\n                {text: 'Bash', value: 'bash'},\n                {text: 'PHP', value: 'php'},\n                {text: 'Ruby', value: 'ruby'},\n                {text: 'Python', value: 'python'},\n                {text: 'Java', value: 'java'},\n                {text: 'C', value: 'c'},\n                {text: 'C#', value: 'csharp'},\n                {text: 'C++', value: 'cpp'},\n            ];\n        }\n\n        if (this.config['minHeight'] === 'auto') {\n            const height =\n                this.config.editorEl.nativeElement.parentElement.offsetHeight -\n                EDITOR_TOOLBAR_HEIGHT -\n                4;\n            config.min_height = height;\n            config.max_height = height;\n        }\n\n        tinymce.init(config);\n    }\n\n    public destroyEditor() {\n        // catch error that sometimes occurs on EDGE when\n        // trying to destroy editor that is no longer in the DOM\n        try {\n            if (this.tinymceInstance) {\n                this.tinymceInstance.remove();\n            }\n\n            this.tinymceInstance = null;\n            this.makeBootstrapPromise();\n        } catch (e) {\n            //\n        }\n    }\n\n    /**\n     * Create a tinymce bootstrap promise.\n     */\n    private makeBootstrapPromise() {\n        this.bootstrapPromise = new Promise(\n            resolve => (this.bootstrapPromiseResolve = resolve)\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { UploadValidator } from '../../uploads/validation/upload-validator';\nimport { FileSizeValidation } from '../../uploads/validation/validations/file-size-validation';\nimport { convertToBytes } from '../../core/utils/convertToBytes';\nimport { FileTypeValidation } from '../../uploads/validation/validations/file-type-validation';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TextEditorImageValidator extends UploadValidator {\n    protected readonly DEFAULT_MAX_SIZE_MB = 3;\n\n    protected initValidations() {\n        const validations = [\n            new FileSizeValidation(\n                {maxSize: convertToBytes(this.DEFAULT_MAX_SIZE_MB, 'MB')},\n                this.i18n\n            ),\n            new FileTypeValidation({types: ['image']}, this.i18n),\n        ];\n\n        this.validations.push(...validations);\n    }\n}\n","<div class=\"editor-header\">\n    <div class=\"toolbar-row\">\n        <div class=\"header-actions\" *ngIf=\"inlineUploadPrefix && currentUser.hasPermission('files.create') && onFileUpload.observers.length\">\n            <button class=\"no-style editor-button\" type=\"button\" [matTooltip]=\"'Add Attachment' | trans\"\n                    (click)=\"openFileUploadDialog()\">\n                <mat-icon svgIcon=\"attachment\"></mat-icon>\n            </button>\n        </div>\n\n        <div class=\"header-actions\" *ngIf=\"!basic\">\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('codesample')\"\n                    [matTooltip]=\"'Insert Code Sample' | trans\">\n                <mat-icon svgIcon=\"code\"></mat-icon>\n            </button>\n        </div>\n\n        <div class=\"header-actions\">\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('undo')\"\n                    [class.disabled]=\"!hasUndo()\" [matTooltip]=\"'Undo' | trans\">\n                <mat-icon svgIcon=\"undo\"></mat-icon>\n            </button>\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('redo')\"\n                    [class.disabled]=\"!hasRedo()\" [matTooltip]=\"'Redo' | trans\">\n                <mat-icon svgIcon=\"redo\"></mat-icon>\n            </button>\n        </div>\n\n        <div class=\"header-actions\">\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('bold')\"\n                    [class.active]=\"queryCommandState('bold')\" [matTooltip]=\"'Bold' | trans\">\n                <mat-icon svgIcon=\"format-bold\"></mat-icon>\n            </button>\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('italic')\"\n                    [class.active]=\"queryCommandState('italic')\" [matTooltip]=\"'Italic' | trans\">\n                <mat-icon svgIcon=\"format-italic\"></mat-icon>\n            </button>\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('underline')\"\n                    [class.active]=\"queryCommandState('underline')\" [matTooltip]=\"'Underline' | trans\">\n                <mat-icon svgIcon=\"format-underlined\"></mat-icon>\n            </button>\n        </div>\n\n        <div class=\"header-actions\">\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('insertunorderedlist')\"\n                    [class.active]=\"queryCommandState('unorderedlist')\" [matTooltip]=\"'Unordered List' | trans\">\n                <mat-icon svgIcon=\"format-list-bulleted\"></mat-icon>\n            </button>\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('insertorderedlist')\"\n                    [class.active]=\"queryCommandState('orderedlist')\" [matTooltip]=\"'Ordered List' | trans\">\n                <mat-icon svgIcon=\"format-list-numbered\"></mat-icon>\n            </button>\n        </div>\n\n        <div class=\"header-actions\" *ngIf=\"!basic\">\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('mceLink')\"\n                    [class.active]=\"queryCommandState('link')\" [matTooltip]=\"'Insert Link' | trans\">\n                <mat-icon svgIcon=\"link\"></mat-icon>\n            </button>\n            <button type=\"button\" class=\"no-style editor-button image-modal-button\" (click)=\"openInsertImageModal()\"\n                    *ngIf=\"currentUser.hasPermission('files.create')\" [matTooltip]=\"'Insert Image' | trans\">\n                <mat-icon svgIcon=\"image\"></mat-icon>\n            </button>\n        </div>\n\n        <ng-content select=\"[customButtons]\"></ng-content>\n\n        <div class=\"header-actions last\">\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('removeformat')\"\n                    [matTooltip]=\"'Remove Formatting' | trans\">\n                <mat-icon svgIcon=\"format-clear\"></mat-icon>\n            </button>\n        </div>\n\n        <ng-content select=\"[header]\"></ng-content>\n    </div>\n    <div class=\"toolbar-row\" *ngIf=\"showAdvancedControls\">\n        <div class=\"header-actions\">\n            <button type=\"button\" [matMenuTriggerFor]=\"insertMenu\"\n                    class=\"no-style editor-button text-button insert-button\">\n                <span trans>Insert</span>\n                <mat-icon svgIcon=\"arrow-drop-down\" class=\"caret\"></mat-icon>\n            </button>\n            <mat-menu #insertMenu>\n                <div mat-menu-item (click)=\"execCommand('InsertHorizontalRule')\">\n                    <mat-icon svgIcon=\"remove\"></mat-icon>\n                    <span trans>Horizontal Line</span>\n                </div>\n                <div mat-menu-item (click)=\"execCommand('mceLink')\">\n                    <mat-icon svgIcon=\"link\"></mat-icon>\n                    <span trans>Link</span>\n                </div>\n                <div mat-menu-item (click)=\"execCommand('mceMedia')\">\n                    <mat-icon svgIcon=\"videocam\"></mat-icon>\n                    <span trans>Media</span>\n                </div>\n                <div mat-menu-item (click)=\"insertInfoContainer('important')\" trans>\n                    <mat-icon svgIcon=\"star\"></mat-icon>\n                    <span trans>Important</span>\n                </div>\n                <div mat-menu-item (click)=\"insertInfoContainer('warning')\" trans>\n                    <mat-icon svgIcon=\"warning\"></mat-icon>\n                    <span trans>Warning</span>\n                </div>\n                <div mat-menu-item (click)=\"insertInfoContainer('note')\" trans>\n                    <mat-icon svgIcon=\"note\"></mat-icon>\n                    <span trans>Note</span>\n                </div>\n            </mat-menu>\n        </div>\n        <div class=\"header-actions\">\n            <button type=\"button\" [matMenuTriggerFor]=\"formatMenu\" class=\"no-style editor-button text-button format-button\">\n                <span trans>Format</span>\n                <mat-icon svgIcon=\"arrow-drop-down\" class=\"caret\"></mat-icon>\n            </button>\n            <mat-menu #formatMenu class=\"format-menu menu-with-alt-text\">\n                <div mat-menu-item (click)=\"execCommand('FormatBlock', 'h1')\">\n                    <div class=\"text\" trans>Heading 1</div>\n                    <div class=\"alt-text\">Alt+Shift+1</div>\n                </div>\n                <div mat-menu-item (click)=\"execCommand('FormatBlock', 'h2')\">\n                    <div class=\"text\" trans>Heading 2</div>\n                    <div class=\"alt-text\">Alt+Shift+2</div>\n                </div>\n                <div mat-menu-item (click)=\"execCommand('FormatBlock', 'h3')\">\n                    <div class=\"text\" trans>Heading 3</div>\n                    <div class=\"alt-text\">Alt+Shift+3</div>\n                </div>\n                <div mat-menu-item (click)=\"execCommand('FormatBlock', 'h4')\">\n                    <div class=\"text\" trans>Heading 4</div>\n                    <div class=\"alt-text\">Alt+Shift+4</div>\n                </div>\n                <div mat-menu-item (click)=\"execCommand('FormatBlock', 'code')\">\n                    <div class=\"text\" trans>Code</div>\n                </div>\n                <div mat-menu-item (click)=\"execCommand('strikethrough')\">\n                    <div class=\"text\" trans>Strikethrough</div>\n                </div>\n                <div mat-menu-item (click)=\"execCommand('superscript')\">\n                    <div class=\"text\" trans>Superscript</div>\n                </div>\n                <div mat-menu-item (click)=\"execCommand('subscript')\">\n                    <div class=\"text\" trans>Subscript</div>\n                </div>\n                <div mat-menu-item (click)=\"execCommand('mceBlockQuote')\">\n                    <div class=\"text\" trans>Blockquote</div>\n                </div>\n                <div mat-menu-item (click)=\"execCommand('FormatBlock', 'p')\">\n                    <div class=\"text\" trans>Paragraph</div>\n                    <div class=\"alt-text\">Ctrl+Shift+7</div>\n                </div>\n            </mat-menu>\n        </div>\n        <div class=\"header-actions\">\n            <button type=\"button\" [matMenuTriggerFor]=\"colorMenu\" class=\"no-style editor-button text-button color-button\" #colorPickerOrigin>\n                <span trans>Color</span>\n                <mat-icon svgIcon=\"arrow-drop-down\" class=\"caret\"></mat-icon>\n            </button>\n            <mat-menu #colorMenu class=\"color-dropdown\">\n                <div mat-menu-item class=\"text-color-item\" (click)=\"showColorPicker('ForeColor', colorPickerOrigin)\">\n                    <mat-icon svgIcon=\"format-color-text\"></mat-icon>\n                    <span trans>Text Color</span>\n                </div>\n                <div mat-menu-item class=\"bg-color-item\" (click)=\"showColorPicker('HiliteColor', colorPickerOrigin)\">\n                    <mat-icon svgIcon=\"format-color-fill\"></mat-icon>\n                    <span trans>Background Color</span>\n                </div>\n            </mat-menu>\n        </div>\n        <div class=\"header-actions\">\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('justifyLeft')\"\n                    [class.active]=\"queryCommandState('justifyLeft')\" [matTooltip]=\"'Align Left' | trans\">\n                <mat-icon svgIcon=\"format-align-left\"></mat-icon>\n            </button>\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('justifyCenter')\"\n                    [class.active]=\"queryCommandState('justifyCenter')\" [matTooltip]=\"'Center' | trans\">\n                <mat-icon svgIcon=\"format-align-center\"></mat-icon>\n            </button>\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('justifyRight')\"\n                    [class.active]=\"queryCommandState('justifyRight')\" [matTooltip]=\"'Align Right' | trans\">\n                <mat-icon svgIcon=\"format-align-right\"></mat-icon>\n            </button>\n        </div>\n        <div class=\"header-actions\">\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('Outdent')\" [matTooltip]=\"'Decrease Indent' | trans\">\n                <mat-icon svgIcon=\"format-indent-decrease\"></mat-icon>\n            </button>\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('Indent')\" [matTooltip]=\"'Increase Indent' | trans\">\n                <mat-icon svgIcon=\"format-indent-increase\"></mat-icon>\n            </button>\n        </div>\n        <div class=\"header-actions editor-toggle-buttons\">\n            <button type=\"button\" class=\"no-style editor-button visual-mode-button\"\n                    [class.active]=\"activeEditor === 'visual'\" (click)=\"showVisualEditor()\" trans>Visual\n            </button>\n            <button type=\"button\" class=\"no-style editor-button source-mode-button\"\n                    [class.active]=\"activeEditor === 'source'\" (click)=\"showSourceEditor()\" trans>Source\n            </button>\n        </div>\n    </div>\n</div>\n\n<textarea class=\"source-textarea\" #sourceArea rows=\"8\" [style.min-height]=\"minHeight\" style=\"display: none\" [formControl]=\"sourceAreaControl\" (blur)=\"setContents(sourceAreaControl.value)\"></textarea>\n<textarea class=\"visual-textarea\" #visualArea rows=\"8\" [style.min-height]=\"minHeight\"></textarea>\n\n<ng-content select=\"[footer]\"></ng-content>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Output,\n    Renderer2,\n    ViewChild\n} from '@angular/core';\nimport {TinymceTextEditor} from './editors/tinymce-text-editor.service';\nimport {Settings} from '../core/config/settings.service';\nimport {OverlayPanel} from '../core/ui/overlay-panel/overlay-panel.service';\nimport {openUploadWindow} from '../uploads/utils/open-upload-window';\nimport {UploadQueueService} from '../uploads/upload-queue/upload-queue.service';\nimport {TextEditorImageValidator} from './validation/text-editor-image-validator';\nimport {UploadInputTypes} from '../uploads/upload-input-config';\nimport {CurrentUser} from '../auth/current-user';\nimport {BOTTOM_POSITION} from '../core/ui/overlay-panel/positions/bottom-position';\nimport {ucFirst} from '../core/utils/uc-first';\nimport {FormControl} from '@angular/forms';\nimport {debounceTime} from 'rxjs/operators';\nimport {UploadUri} from '@common/uploads/types/upload-uri.enum';\nimport {UploadApiConfig} from '@common/uploads/types/upload-api-config';\nimport {UploadedFile} from '@common/uploads/uploaded-file';\n\nexport interface LinkAttrs {\n    text: string;\n    href: string;\n    target?: string;\n}\n\n@Component({\n    selector: 'text-editor',\n    templateUrl: './text-editor.component.html',\n    styleUrls: ['./text-editor.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        UploadQueueService,\n        TinymceTextEditor,\n    ]\n})\nexport class TextEditorComponent implements OnDestroy, AfterViewInit {\n    @ViewChild('visualArea', { static: true }) visualTextArea: ElementRef;\n    @ViewChild('sourceArea', { static: true }) sourceTextArea: ElementRef;\n\n    public sourceAreaControl = new FormControl();\n    public activeEditor = 'visual';\n\n    @Input() showAdvancedControls = false;\n    @Input() basic = false;\n    @Input() minHeight: number|string = 183;\n    @Input() maxHeight = 530;\n    @Input() inlineUploadPrefix: string;\n\n    @Output() onChange: EventEmitter<string> = new EventEmitter();\n    @Output() onCtrlEnter = new EventEmitter();\n    @Output() onFileUpload = new EventEmitter<UploadedFile[]>();\n\n    constructor(\n        public editor: TinymceTextEditor,\n        public currentUser: CurrentUser,\n        private uploadQueue: UploadQueueService,\n        private settings: Settings,\n        private renderer: Renderer2,\n        public el: ElementRef,\n        private overlayPanel: OverlayPanel,\n        private imageValidator: TextEditorImageValidator,\n    ) {}\n\n    ngAfterViewInit() {\n        this.bootTextEditor();\n    }\n\n    ngOnDestroy() {\n        this.destroyEditor();\n    }\n\n    public reset() {\n        this.editor.reset();\n    }\n\n    public focus() {\n        this.editor.focus();\n    }\n\n    public hasUndo(): boolean {\n        return this.editor.hasUndo();\n    }\n\n    public hasRedo(): boolean {\n        return this.editor.hasRedo();\n    }\n\n    /**\n     * Queries the current state for specified text editor command.\n     * For example if the current selection is \"bold\".\n     */\n    public queryCommandState(name: string): boolean|number {\n        return this.editor.queryCommandState(name);\n    }\n\n    public execCommand(name: string, value: string|number = null) {\n        this.editor.execCommand(name, value);\n    }\n\n    /**\n     * Insert information container of specified type into the editor.\n     */\n    public insertInfoContainer(type: string) {\n        // TODO: refactor into shortcodes maybe if need more of similar buttons in the future\n        // TODO: translate once angular translation service is available\n        this.insertContents(\n            `<div class=\"widget widget-${type}\"><div class=\"title\">${ucFirst(type)}:</div><br></div><br>`\n        );\n    }\n\n    public async showColorPicker(command: string, origin: HTMLElement) {\n        const { BeColorPickerModule } = await import('@common/core/ui/color-picker/be-color-picker.module');\n        this.overlayPanel.open(BeColorPickerModule.components.panel, {origin: new ElementRef(origin), position: BOTTOM_POSITION})\n            .valueChanged().pipe(debounceTime(50)).subscribe(color => {\n                this.execCommand(command, color);\n            });\n    }\n\n    public showVisualEditor() {\n        if ( ! this.editor.tinymceInstance.contentAreaContainer || this.activeEditor === 'visual') return;\n\n        this.activeEditor = 'visual';\n\n        this.renderer.setStyle(this.editor.tinymceInstance.contentAreaContainer, 'display', 'block');\n        this.renderer.setStyle(this.sourceTextArea.nativeElement, 'display', 'none');\n\n        this.editor.focus();\n    }\n\n    public showSourceEditor() {\n        if ( ! this.editor.tinymceInstance.contentAreaContainer || this.activeEditor === 'source') return;\n\n        this.activeEditor = 'source';\n\n        this.renderer.setStyle(this.sourceTextArea.nativeElement, 'height', this.editor.tinymceInstance.contentAreaContainer.offsetHeight + 'px');\n        this.renderer.setStyle(this.sourceTextArea.nativeElement, 'display', 'block');\n        this.renderer.setStyle(this.editor.tinymceInstance.contentAreaContainer, 'display', 'none');\n\n        this.sourceAreaControl.setValue(this.editor.getContents({source_view: true}));\n    }\n\n    public openFileUploadDialog() {\n        openUploadWindow({multiple: true}).then(fileList => {\n            this.onFileUpload.emit(fileList);\n        });\n    }\n\n    public openInsertImageModal() {\n        const params: UploadApiConfig = {\n            uri: UploadUri.Image,\n            validator: this.imageValidator,\n            httpParams: {diskPrefix: this.inlineUploadPrefix}\n        };\n        openUploadWindow({types: [UploadInputTypes.image]}).then(files => {\n            this.uploadQueue.start(files, params).subscribe(response => {\n                this.insertImage(response.fileEntry.url);\n            });\n        });\n    }\n\n    public getContents(): string {\n        return this.editor.getContents();\n    }\n\n    public setContents(contents: string) {\n        this.editor.setContents(contents);\n    }\n\n    public insertContents(contents) {\n        this.editor.insertContents(contents);\n    }\n\n    public insertImage(url: string) {\n        this.editor.insertImage(url);\n    }\n\n    public insertLink(attrs: LinkAttrs) {\n        const target = attrs.target || 'self';\n        this.insertContents(`<a href=\"${attrs.href}\" target=\"${target}\">${attrs.text}</a>`);\n    }\n\n    public destroyEditor() {\n        this.editor.destroyEditor();\n    }\n\n    private bootTextEditor() {\n        this.editor.setConfig({\n            textAreaEl: this.visualTextArea,\n            editorEl: this.el,\n            minHeight: this.minHeight,\n            maxHeight: this.maxHeight,\n            onChange: this.onChange,\n            onCtrlEnter: this.onCtrlEnter,\n            showAdvancedControls: this.showAdvancedControls,\n        });\n    }\n}\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title trans>\n        <span *ngIf=\"lyric.id\" trans>Update Lyric</span>\n        <span *ngIf=\"!lyric.id\" trans>New Lyric</span>\n    </h2>\n    <button type=\"button\" mat-icon-button (click)=\"close()\" class=\"close-button\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form (ngSubmit)=\"confirm()\" ngNativeValidate>\n    <mat-dialog-content class=\"many-inputs\">\n        <div class=\"input-container media-autocomplete-input-container\">\n            <label for=\"lyrics-track-name\" class=\"hidden\" trans>Track</label>\n            <media-image [media]=\"track\" *ngIf=\"track\"></media-image>\n            <input\n                    type=\"text\"\n                    id=\"lyrics-track-name\"\n                    name=\"lyrics-track-name\"\n                    [formControl]=\"trackInput.formControl\"\n                    [matAutocomplete]=\"trackAuto\"\n                    placeholder=\"Search tracks...\"\n                    trans-placeholder\n                    required\n            >\n            <p *ngIf=\"track\">{{track.name}} | {{track.artists ? artistsString(track.artists) : '-'}} | {{track.album?.release_date}}</p>\n            <div class=\"error\" *ngIf=\"errors.track_id\">{{errors.track_id}}</div>\n\n            <mat-autocomplete #trackAuto=\"matAutocomplete\" [displayWith]=\"trackDisplayFn\" class=\"media-autocomplete-panel\" (optionSelected)=\"attachTrack($event)\">\n                <mat-option *ngFor=\"let track of trackInput.searchResults | async\" [value]=\"track\">\n                    <media-image [media]=\"track\"></media-image>\n                    <div class=\"multiple-lines\">\n                        <div>{{ track.name }} -&nbsp;{{track.artists ? artistsString(track.artists) : ''}}</div>\n                        <div class=\"secondary\" *ngIf=\"track.album\">{{track.album.name}} - {{track.album.release_date}}</div>\n                    </div>\n                </mat-option>\n            </mat-autocomplete>\n        </div>\n\n\n        <div class=\"input-container\">\n            <text-editor class=\"text-editor\" [minHeight]=\"400\" [basic]=\"true\" #textEditor></text-editor>\n            <div class=\"error\" *ngIf=\"errors.text\">{{errors.text}}</div>\n        </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <button (click)=\"close()\" type=\"button\" mat-button class=\"cancel-button\" trans>Close</button>\n        <button type=\"submit\" mat-raised-button color=\"accent\" class=\"submit-button\" [disabled]=\"loading\" trans>\n            <span *ngIf=\"lyric.id\" trans>Update</span>\n            <span *ngIf=\"!lyric.id\" trans>Create</span>\n        </button>\n    </mat-dialog-actions>\n</form>\n","import {\n    AfterViewInit,\n    Component,\n    Inject,\n    Optional,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport {Lyrics} from '../../../web-player/lyrics/lyrics.service';\nimport {of as observableOf} from 'rxjs';\nimport {TextEditorComponent} from '@common/text-editor/text-editor.component';\nimport {Track, TRACK_MODEL} from '../../../models/Track';\nimport {Lyric} from '../../../models/Lyric';\nimport {MatAutocompleteSelectedEvent} from '@angular/material/autocomplete';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormControl} from '@angular/forms';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    finalize,\n    map,\n    startWith,\n    switchMap\n} from 'rxjs/operators';\nimport {Search} from '../../../web-player/search/search.service';\nimport {WebPlayerImagesService} from '../../../web-player/web-player-images.service';\nimport {Artist} from '../../../models/Artist';\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\n\nexport interface CrupdateLyricModalData {\n    lyric?: Lyric;\n    track?: Track;\n}\n\n@Component({\n    selector: 'crupdate-lyric-modal',\n    templateUrl: './crupdate-lyric-modal.component.html',\n    styleUrls: ['./crupdate-lyric-modal.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class CrupdateLyricModalComponent implements AfterViewInit {\n    @ViewChild('textEditor', { static: true }) textEditor: TextEditorComponent;\n\n    /**\n     * Track this lyric belong to.\n     */\n    public track: Track;\n\n    /**\n     * Lyric model.\n     */\n    public lyric = new Lyric({text: ''});\n\n    /**\n     * Input for attaching lyric to a track.\n     */\n    public trackInput = {\n        formControl: new FormControl(),\n        searchResults: null,\n    };\n\n    public loading = false;\n\n    public errors: {track_id?: string, text?: string} = {};\n\n    /**\n     * CrupdateLyricModalComponent Constructor.\n     */\n    constructor(\n        protected lyrics: Lyrics,\n        private dialogRef: MatDialogRef<CrupdateLyricModalComponent>,\n        private search: Search,\n        public images: WebPlayerImagesService,\n        @Optional() @Inject(MAT_DIALOG_DATA) public data: CrupdateLyricModalData,\n    ) {\n        this.hydrate();\n        this.bindTrackInput();\n    }\n\n    ngAfterViewInit() {\n        this.textEditor.setContents(this.lyric.text);\n        this.textEditor.focus();\n    }\n\n    public confirm() {\n        this.loading = true;\n\n        this.createOrUpdateLyrics()\n            .pipe(finalize(() => this.loading = false))\n            .subscribe(response => {\n                this.close(response.lyric);\n            }, (errResponse: BackendErrorResponse) => {\n                this.errors = errResponse.errors;\n            });\n    }\n\n    public close(lyric?: Lyric) {\n        this.dialogRef.close(lyric);\n        this.textEditor.destroyEditor();\n    }\n\n    private createOrUpdateLyrics() {\n        if (this.lyric.id) {\n            return this.lyrics.update(this.lyric.id, this.getPayload());\n        } else {\n            return this.lyrics.create(this.getPayload());\n        }\n    }\n\n    private getPayload() {\n        return {\n            text: this.textEditor.getContents(),\n            track_id: this.track.id,\n        };\n    }\n\n    private hydrate() {\n        if (this.data.lyric) {\n            this.lyric = this.data.lyric;\n        }\n\n        this.track = this.data.track || this.lyric.track;\n        this.trackInput.formControl.setValue(this.track);\n    }\n\n    /**\n     * Function for track autocomplete input.\n     */\n    public trackDisplayFn(track?: Track|string): string {\n        if ( ! track) return '';\n\n        if (typeof track === 'string') {\n            return track;\n        } else {\n            return track.name;\n        }\n    }\n\n    private bindTrackInput() {\n        this.trackInput.searchResults = this.trackInput.formControl.valueChanges\n            .pipe(\n                distinctUntilChanged(),\n                debounceTime(350),\n                startWith(''),\n                switchMap(query => {\n                    const searchQuery = this.trackDisplayFn(query);\n\n                    const results = this.search.media(searchQuery, {limit: 5, types: [TRACK_MODEL]})\n                        .pipe(map(response => response.results.tracks));\n\n                    // make sure search is not triggered after user clicks on autocomplete result\n                    return (searchQuery && (! this.track || searchQuery !== this.track.name)) ? results : observableOf([]);\n                })\n            );\n    }\n\n    public attachTrack(event: MatAutocompleteSelectedEvent) {\n        this.track = event.option.value;\n        this.errors = {};\n    }\n\n    public artistsString(artists: Artist[]): string {\n        return artists.map(a => a.name).join(', ');\n    }\n}\n","import {DatatableFilter} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/datatable-filter';\nimport {\n    CreatedAtFilter,\n    UpdatedAtFilter,\n} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/timestamp-filter';\n\nexport const LYRIC_INDEX_FILTERS: DatatableFilter[] = [\n    new CreatedAtFilter({\n        description: 'Date lyric was created',\n    }),\n    new UpdatedAtFilter({\n        description: 'Date lyric was last updated',\n    }),\n];\n","<div class=\"datatable-page-header\">\n  <h1 trans>Lyrics</h1>\n  <div class=\"header\">\n    <datatable-filters pluralName=\"lyrics\" [filters]=\"filters\"></datatable-filters>\n    <div class=\"action-buttons\">\n      <button\n        mat-raised-button\n        color=\"accent\"\n        (click)=\"openCrupdateLyricModal()\"\n        *ngIf=\"currentUser.hasPermission('lyrics.create')\"\n        class=\"button-with-icon\"\n      >\n        <mat-icon svgIcon=\"add\"></mat-icon>\n        <span trans>Add New Lyric</span>\n      </button>\n    </div>\n  </div>\n</div>\n\n<div class=\"datatable responsive-table\">\n  <mat-progress-bar\n    class=\"loading-bar\"\n    mode=\"indeterminate\"\n    color=\"accent\"\n    *ngIf=\"datatable.paginator && datatable.paginator.loading$ | async\"\n  ></mat-progress-bar>\n  <table class=\"material-table\">\n    <thead>\n      <tr>\n        <th table-header-checkbox></th>\n        <th table-sort-header=\"track_id\" trans>Track</th>\n        <th trans>Artist</th>\n        <th trans>Album</th>\n        <th table-sort-header=\"updated_at\" trans>Last Updated</th>\n        <th></th>\n      </tr>\n      <tr *ngIf=\"datatable.selectedRows$.value.length as selectedCount\">\n        <th colspan=\"6\">\n          <div\n            class=\"bulk-actions-title\"\n            [transValues]=\"{count: selectedCount, resource: 'lyric(s)'}\"\n            trans\n          >\n            :count :resource selected:\n          </div>\n          <div class=\"bulk-actions\">\n            <button\n              mat-raised-button\n              color=\"warn\"\n              (click)=\"confirmLyricsDeletion()\"\n              *ngIf=\"currentUser.hasPermission('lyrics.delete')\"\n              trans\n            >\n              Delete\n            </button>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let lyric of lyrics$ | async\">\n        <td [table-body-checkbox]=\"lyric.id\"></td>\n        <td data-label=\"Track\">\n          <div class=\"column-with-image\">\n            <img [src]=\"getLyricImage(lyric)\" alt=\"Track image\" />\n            {{ lyric.track?.name || '-' }}\n          </div>\n        </td>\n        <td data-label=\"Artist\">{{ lyric.track?.album?.artists[0]?.name || '-' }}</td>\n        <td data-label=\"Album\">{{ lyric.track?.album?.name || '-' }}</td>\n        <td data-label=\"Last Updated\">{{ lyric.updated_at | formattedDate }}</td>\n        <td class=\"edit-column\">\n          <button\n            mat-icon-button\n            (click)=\"openCrupdateLyricModal(lyric)\"\n            *ngIf=\"currentUser.hasPermission('lyrics.update')\"\n            [matTooltip]=\"'Edit lyric' | trans\"\n          >\n            <mat-icon svgIcon=\"edit\"></mat-icon>\n          </button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <no-results-message svgImage=\"source-code.svg\" *ngIf=\"datatable.paginator.noResults$ | async\">\n    <span primary-text>No lyrics have been created yet</span>\n  </no-results-message>\n  <datatable-footer></datatable-footer>\n</div>\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {WebPlayerImagesService} from '../../web-player/web-player-images.service';\nimport {Lyric} from '../../models/Lyric';\nimport {Lyrics} from '../../web-player/lyrics/lyrics.service';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {Settings} from '@common/core/config/settings.service';\nimport {CrupdateLyricModalComponent} from './crupdate-lyric-modal/crupdate-lyric-modal.component';\nimport {DatatableService} from '@common/datatable/datatable.service';\nimport {Observable} from 'rxjs';\nimport {LYRIC_INDEX_FILTERS} from './lyric-index-filters';\n\n@Component({\n    selector: 'lyrics-page',\n    templateUrl: './lyrics-page.component.html',\n    styleUrls: ['./lyrics-page.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [DatatableService],\n})\nexport class LyricsPageComponent implements OnInit {\n    lyrics$ = this.datatable.data$ as Observable<Lyric[]>;\n    filters = LYRIC_INDEX_FILTERS;\n    constructor(\n        public datatable: DatatableService<Lyric>,\n        private lyrics: Lyrics,\n        private modal: Modal,\n        public currentUser: CurrentUser,\n        private settings: Settings,\n        private images: WebPlayerImagesService\n    ) {}\n\n    ngOnInit() {\n        this.datatable.init({\n            uri: 'lyrics',\n            staticParams: {with: 'track.album.artists'},\n        });\n    }\n\n    public openCrupdateLyricModal(lyric?: Lyric) {\n        this.datatable\n            .openCrupdateResourceModal(CrupdateLyricModalComponent, {lyric})\n            .subscribe(() => {\n                this.datatable.reset();\n            });\n    }\n\n    public confirmLyricsDeletion() {\n        this.datatable.confirmResourceDeletion('lyrics').subscribe(() => {\n            this.lyrics\n                .delete(this.datatable.selectedRows$.value)\n                .subscribe(() => {\n                    this.datatable.reset();\n                });\n        });\n    }\n\n    public getLyricImage(lyric: Lyric): string {\n        return lyric?.track?.album?.image || this.images.getDefault('album');\n    }\n}\n","import {\n    ALL_PRIMITIVE_OPERATORS,\n    DatatableFilter,\n    FilterControlType, FilterOperator\n} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/datatable-filter';\nimport {\n    CreatedAtFilter,\n    UpdatedAtFilter,\n} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/timestamp-filter';\n\nexport const PLAYLIST_INDEX_FILTERS: DatatableFilter[] = [\n    new DatatableFilter({\n        type: FilterControlType.Select,\n        key: 'public',\n        label: 'Status',\n        defaultValue: true,\n        description: 'Whether playlist is public',\n        options: [\n            {\n                key: 'Public',\n                value: true,\n            },\n            {\n                key: 'Private',\n                value: false,\n            },\n        ],\n    }),\n    new DatatableFilter({\n        type: FilterControlType.Select,\n        key: 'collaborative',\n        label: 'Collaboration',\n        defaultValue: true,\n        description: 'Whether playlist is collaborative',\n        options: [\n            {\n                key: 'Enabled',\n                value: true,\n            },\n            {\n                key: 'Disabled',\n                value: false,\n            },\n        ],\n    }),\n    new DatatableFilter({\n        type: FilterControlType.Input,\n        inputType: 'number',\n        key: 'plays',\n        label: 'Plays',\n        defaultValue: 100,\n        description: 'Total number of plays for the playlist',\n        operators: ALL_PRIMITIVE_OPERATORS,\n        defaultOperator: FilterOperator.gte,\n    }),\n    new CreatedAtFilter({\n        description: 'Date playlist was created',\n    }),\n    new UpdatedAtFilter({\n        description: 'Date playlist was last updated',\n    }),\n];\n","<ng-container *ngIf=\"user\">\n    <img [src]=\"user.avatar\" alt=\"\">\n    <a [routerLink]=\"url.generate(user)\" target=\"_blank\" class=\"link content\" *ngIf=\"haveUrl\">\n        <div>{{user.display_name}}</div>\n        <div class=\"email secondary\">{{user.email}}</div>\n    </a>\n    <div class=\"content\" *ngIf=\"!haveUrl\">\n        <div>{{user.display_name}}</div>\n        <div class=\"email secondary\">{{user.email}}</div>\n    </div>\n</ng-container>\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {User} from '@common/core/types/models/User';\nimport {UrlGeneratorService} from '@common/core/services/url-generator.service';\n\n@Component({\n    selector: 'user-column',\n    templateUrl: './user-column.component.html',\n    styleUrls: ['./user-column.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {class: 'column-with-image'},\n})\nexport class UserColumnComponent {\n    @Input() user: User;\n    @Input() showEmail = false;\n    haveUrl: boolean;\n\n    constructor(public url: UrlGeneratorService) {\n        this.haveUrl = !!url['user'];\n    }\n}\n","<div class=\"datatable-page-header\">\n  <h1 trans>Playlists</h1>\n  <div class=\"header\">\n    <datatable-filters pluralName=\"playlists\" [filters]=\"filters\"></datatable-filters>\n    <div class=\"action-buttons\">\n      <button\n        mat-raised-button\n        color=\"accent\"\n        class=\"button-with-icon\"\n        [matMenuTriggerFor]=\"menu\"\n      >\n        <mat-icon svgIcon=\"add\"></mat-icon>\n        <span trans>New Playlist</span>\n      </button>\n      <mat-menu #menu=\"matMenu\">\n        <button\n          mat-menu-item\n          *ngIf=\"currentUser.hasPermission('playlists.create')\"\n          (click)=\"showCrupdatePlaylistModal()\"\n          class=\"button-with-icon\"\n          trans\n        >\n          Create Playlist\n        </button>\n        <button\n          mat-menu-item\n          type=\"button\"\n          *ngIf=\"settings.get('spotify_is_setup')\"\n          (click)=\"openImportMedialModal()\"\n          trans\n        >\n          Import Playlist\n        </button>\n      </mat-menu>\n    </div>\n  </div>\n</div>\n\n<div class=\"datatable responsive-table\">\n  <mat-progress-bar\n    class=\"loading-bar\"\n    mode=\"indeterminate\"\n    color=\"accent\"\n    *ngIf=\"datatable.paginator && datatable.paginator.loading$ | async\"\n  ></mat-progress-bar>\n  <table class=\"material-table\">\n    <thead>\n      <tr>\n        <th table-header-checkbox></th>\n        <th table-sort-header=\"name\" trans>Playlist</th>\n        <th trans>Owner</th>\n        <th table-sort-header trans>Public</th>\n        <th table-sort-header trans>Views</th>\n        <th table-sort-header=\"updated_at\" trans>Last Updated</th>\n        <th></th>\n      </tr>\n      <tr *ngIf=\"datatable.selectedRows$.value.length as selectedCount\">\n        <th colspan=\"7\">\n          <div\n            class=\"bulk-actions-title\"\n            [transValues]=\"{count: selectedCount, resource: 'playlist(s)'}\"\n            trans\n          >\n            :count :resource selected:\n          </div>\n          <div class=\"bulk-actions\">\n            <button\n              mat-raised-button\n              color=\"warn\"\n              (click)=\"confirmPlaylistsDeletion()\"\n              *ngIf=\"currentUser.hasPermission('playlists.delete')\"\n              trans\n            >\n              Delete\n            </button>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let playlist of playlists$ | async\">\n        <td [table-body-checkbox]=\"playlist.id\"></td>\n        <td>\n          <div class=\"column-with-image\">\n            <img [src]=\"wpImages.getPlaylistImage(playlist)\" alt=\"Playlist image\" />\n            <a [routerLink]=\"urls.playlist(playlist)\" target=\"_blank\" class=\"link\">{{\n              playlist.name\n            }}</a>\n          </div>\n        </td>\n        <td data-label=\"Owner\">\n          <user-column [user]=\"playlist.owner\"></user-column>\n        </td>\n        <td data-label=\"Public\">{{ playlist.public ? 'Yes' : 'No' }}</td>\n        <td data-label=\"Views\">{{ playlist.views }}</td>\n        <td data-label=\"Last Updated\">{{ playlist.updated_at | formattedDate }}</td>\n        <td class=\"edit-column\">\n          <button\n            mat-icon-button\n            (click)=\"showCrupdatePlaylistModal(playlist)\"\n            [matTooltip]=\"'Edit playlist' | trans\"\n          >\n            <mat-icon svgIcon=\"edit\"></mat-icon>\n          </button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <no-results-message svgImage=\"playlist.svg\" *ngIf=\"datatable.paginator.noResults$ | async\">\n    <span primary-text>No playlists have been created yet</span>\n  </no-results-message>\n  <datatable-footer></datatable-footer>\n</div>\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {WebPlayerImagesService} from '../../web-player/web-player-images.service';\nimport {Playlist, PLAYLIST_MODEL} from '../../models/Playlist';\nimport {Playlists} from '../../web-player/playlists/playlists.service';\nimport {CrupdatePlaylistModalComponent} from '../../web-player/playlists/crupdate-playlist-modal/crupdate-playlist-modal.component';\nimport {DatatableService} from '@common/datatable/datatable.service';\nimport {Observable} from 'rxjs';\nimport {WebPlayerUrls} from '../../web-player/web-player-urls.service';\nimport {ImportMediaModalComponent} from '../import-media-modal/import-media-modal.component';\nimport {ARTIST_MODEL} from '../../models/Artist';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {Settings} from '@common/core/config/settings.service';\nimport {PLAYLIST_INDEX_FILTERS} from './playlist-index-filters';\n\n@Component({\n    selector: 'playlists-page',\n    templateUrl: './playlists-page.component.html',\n    encapsulation: ViewEncapsulation.None,\n    providers: [DatatableService],\n})\nexport class PlaylistsPageComponent implements OnInit {\n    playlists$ = this.datatable.data$ as Observable<Playlist[]>;\n    filters = PLAYLIST_INDEX_FILTERS;\n    constructor(\n        public datatable: DatatableService<Playlist>,\n        private playlists: Playlists,\n        public currentUser: CurrentUser,\n        public settings: Settings,\n        public wpImages: WebPlayerImagesService,\n        public urls: WebPlayerUrls,\n        private modal: Modal,\n    ) {}\n\n    ngOnInit() {\n        this.datatable.init({\n            uri: 'playlists',\n            staticParams: {with: ['owner']},\n        });\n    }\n\n    public showCrupdatePlaylistModal(playlist?: Playlist) {\n        this.datatable.openCrupdateResourceModal(CrupdatePlaylistModalComponent, {playlist})\n            .subscribe(() => {\n                this.datatable.reset();\n            });\n    }\n\n    public confirmPlaylistsDeletion() {\n        this.datatable.confirmResourceDeletion('playlists').subscribe(confirmed => {\n            const ids = this.datatable.selectedRows$.value;\n            this.playlists.delete(ids).subscribe(() => {\n                this.datatable.reset();\n            });\n        });\n    }\n\n    public openImportMedialModal() {\n        this.modal.open(ImportMediaModalComponent, {modelType: PLAYLIST_MODEL})\n            .afterClosed()\n            .subscribe(response => {\n                if (response) {\n                    this.datatable.reset();\n                }\n            });\n    }\n}\n","import {ChangeDetectorRef, Directive, OnDestroy} from '@angular/core';\nimport {SettingsState} from './settings-state.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {finalize} from 'rxjs/operators';\nimport {Settings} from '../../core/config/settings.service';\nimport {Toast} from '../../core/ui/toast.service';\nimport {Modal} from '../../core/ui/dialogs/modal.service';\nimport {CustomHomepage} from '../../pages/shared/custom-homepage.service';\nimport {AppHttpClient} from '../../core/http/app-http-client.service';\nimport {SettingsPayload} from '../../core/config/settings-payload';\nimport {BehaviorSubject} from 'rxjs';\nimport {ValueLists} from '@common/core/services/value-lists.service';\nimport {scrollInvalidInputIntoView} from '@common/core/utils/scroll-invalid-input-into-view';\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\nimport {SocialAuthService} from '../../auth/social-auth.service';\n\n@Directive()\nexport abstract class SettingsPanelComponent implements OnDestroy {\n    constructor(\n        public settings: Settings,\n        protected toast: Toast,\n        protected http: AppHttpClient,\n        protected modal: Modal,\n        protected route: ActivatedRoute,\n        protected customHomepage: CustomHomepage,\n        protected valueLists: ValueLists,\n        protected cd: ChangeDetectorRef,\n        protected router: Router,\n        protected social: SocialAuthService,\n        public state: SettingsState,\n    ) {}\n\n    ngOnDestroy() {\n        this.state.reset();\n    }\n\n    public setJson(name: string, value: string[]|number[]) {\n        this.state.client[name] = JSON.stringify(value);\n    }\n\n    public getJson(name: string): any[] {\n        const value = this.state.client[name];\n        if ( ! value) return [];\n        return JSON.parse(value as string);\n    }\n\n    public saveSettings(settings?: SettingsPayload) {\n        this.state.loading$.next(true);\n        const changedSettings = settings || this.state.getModified();\n        this.settings.save(changedSettings)\n            .pipe(finalize(() => this.state.loading$.next(false)))\n            .subscribe(() => {\n                this.toast.open('Settings saved.');\n                this.clearErrors();\n                // update initial settings after saving, so\n                // so new setting state is not lost when\n                // navigating between setting panels\n                this.state.updateInitial(changedSettings);\n            }, (errResponse: BackendErrorResponse) => {\n                this.state.errors$.next(errResponse.errors);\n                scrollInvalidInputIntoView(this.state.errors$.value);\n            });\n    }\n\n    public clearErrors() {\n        this.state.errors$.next({});\n    }\n}\n","<div class=\"header\">\n  <div class=\"title\" trans>Data Providers</div>\n  <div class=\"subtitle\" trans>\n    Select and configure providers that will be used to automate the site.\n  </div>\n</div>\n\n<form\n  class=\"body many-inputs\"\n  (submit)=\"saveSettings()\"\n  ngNativeValidate\n  *ngIf=\"state.errors$ | async as errors\"\n>\n  <div class=\"widget widget-info\">\n    <div class=\"title\" trans>Information</div>\n    <p trans>\n      Local provider means that only data already in local database (created via admin, uploaded by\n      users, previously imported etc.) will be used. No attempt will be made to fetch it from any\n      3rd party APIs or sites.\n    </p>\n  </div>\n\n  <div class=\"input-container\">\n    <label for=\"artist_provider\" trans>Artist Provider</label>\n    <select\n      name=\"artist_provider\"\n      id=\"artist_provider\"\n      [(ngModel)]=\"state.client['artist_provider']\"\n    >\n      <option value=\"spotify\">Spotify</option>\n      <option value=\"local\">Local</option>\n    </select>\n  </div>\n\n  <div class=\"input-container\">\n    <label for=\"album_provider\" trans>Album Provider</label>\n    <select name=\"album_provider\" id=\"album_provider\" [(ngModel)]=\"state.client['album_provider']\">\n      <option value=\"spotify\">Spotify</option>\n      <option value=\"local\">Local</option>\n    </select>\n  </div>\n\n  <div class=\"input-container\">\n    <label for=\"search_provider\" trans>Search Provider</label>\n    <select\n      name=\"search_provider\"\n      id=\"search_provider\"\n      [(ngModel)]=\"state.client['search_provider']\"\n    >\n      <option value=\"spotify\">Spotify</option>\n      <option value=\"local\">Local</option>\n      <option value=\"localAndSpotify\">Local and Spotify</option>\n    </select>\n  </div>\n\n  <div class=\"error-group many-inputs no-bottom-border\">\n    <div class=\"input-container\">\n      <label for=\"providers.lyrics\" trans>Lyrics Provider</label>\n      <select\n        name=\"providers.lyrics\"\n        id=\"providers.lyrics\"\n        [(ngModel)]=\"state.client['providers.lyrics']\"\n      >\n        <option value=\"ovh\">Lyrics.ovh</option>\n        <option value=\"lyricswikia\">LyricsWikia</option>\n        <option value=\"azlyrics\">AZLyrics</option>\n        <option value=\"local\">Local</option>\n      </select>\n    </div>\n\n    <div class=\"input-container\" *ngIf=\"state.client['providers.lyrics'] === 'rapidapi'\">\n      <label for=\"rapidapi_app_key\" trans>RapidAPI Application Key</label>\n      <input\n        name=\"rapidapi_app_key\"\n        id=\"rapidapi_app_key\"\n        [(ngModel)]=\"state.server['rapidapi_app_key']\"\n        required\n      />\n      <div class=\"error\" *ngIf=\"errors.rapidapi_app_key\">{{ errors.rapidapi_app_key }}</div>\n    </div>\n  </div>\n\n  <div class=\"error-group many-inputs\">\n    <div class=\"input-container\">\n      <label for=\"providers.biography\" trans>Artist Biography Provider</label>\n      <select\n        name=\"providers.biography\"\n        id=\"providers.biography\"\n        [(ngModel)]=\"state.client['artist_bio_provider']\"\n      >\n        <option value=\"wikipedia\">Wikipedia</option>\n        <option value=\"local\">Local</option>\n      </select>\n    </div>\n\n    <div\n      class=\"input-container\"\n      *ngIf=\"state.client['artist_bio_provider'] === 'wikipedia'\"\n      [class.has-error]=\"errors.wikipedia_language\"\n    >\n      <label for=\"wikipedia_language\" trans>Wikipedia Language</label>\n      <input\n        name=\"wikipedia_language\"\n        id=\"wikipedia_language\"\n        [(ngModel)]=\"state.client['wikipedia_language']\"\n        required\n        minlength=\"2\"\n        maxlength=\"2\"\n      />\n      <p class=\"error\" *ngIf=\"errors.wikipedia_language\">{{ errors.wikipedia_language }}</p>\n      <p trans>ISO 639-1 (two letter) language code.</p>\n    </div>\n  </div>\n\n  <!--SPOTIFY KEYS-->\n  <div\n    class=\"error-group many-inputs\"\n    id=\"spotify_group\"\n    [class.has-error]=\"errors.spotify_group\"\n    *ngIf=\"needProviderKeys('spotify')\"\n  >\n    <div class=\"input-container\" [class.has-error]=\"errors.spotify_id\">\n      <label for=\"spotify_id\" trans>Spotify ID</label>\n      <input name=\"spotify_id\" id=\"spotify_id\" [(ngModel)]=\"state.server['spotify_id']\" required />\n      <div class=\"error\" *ngIf=\"errors.spotify_id\">{{ errors.spotify_id }}</div>\n    </div>\n\n    <div class=\"input-container\" [class.has-error]=\"errors.spotify_secret\">\n      <label for=\"spotify_secret\" trans>Spotify Secret</label>\n      <input\n        name=\"spotify_secret\"\n        id=\"spotify_secret\"\n        [(ngModel)]=\"state.server['spotify_secret']\"\n        required\n      />\n      <div class=\"error\" *ngIf=\"errors.spotify_secret\">{{ errors.spotify_secret }}</div>\n    </div>\n\n    <div class=\"error group-error\" *ngIf=\"errors.spotify_group\">{{ errors.spotify_group }}</div>\n  </div>\n\n  <!--LAST.FM KEYS-->\n  <ng-container *ngIf=\"needProviderKeys('spotify')\">\n    <div class=\"input-container\" [class.has-error]=\"errors.lastfm_api_key\">\n      <label for=\"lastfm_api_key\" trans>Last.fm Api Key</label>\n      <input\n        name=\"lastfm_api_key\"\n        id=\"lastfm_api_key\"\n        [(ngModel)]=\"state.server['lastfm_api_key']\"\n        required\n      />\n      <div class=\"error\" *ngIf=\"errors.lastfm_api_key\">{{ errors.lastfm_api_key }}</div>\n    </div>\n  </ng-container>\n\n  <div class=\"setting-toggle-container\">\n    <mat-slide-toggle\n      name=\"https.enable_cert_verification\"\n      id=\"https.enable_cert_verification\"\n      [(ngModel)]=\"state.client['https.enable_cert_verification']\"\n    >\n      Enable Certificate Verification\n    </mat-slide-toggle>\n    <p trans>Should only be disabled if there are problems with 3rd party data providers.</p>\n  </div>\n\n  <button\n    mat-raised-button\n    color=\"accent\"\n    class=\"update-button\"\n    type=\"submit\"\n    [disabled]=\"state.loading$ | async\"\n    trans\n  >\n    Update\n  </button>\n  <mat-progress-bar\n    mode=\"indeterminate\"\n    color=\"accent\"\n    *ngIf=\"state.loading$ | async\"\n  ></mat-progress-bar>\n</form>\n","import {Component} from '@angular/core';\nimport {SettingsPanelComponent} from '@common/admin/settings/settings-panel.component';\n\n@Component({\n    selector: 'providers-settings',\n    templateUrl: './providers-settings.component.html',\n    host: {'class': 'settings-panel'},\n})\nexport class ProvidersSettingsComponent extends SettingsPanelComponent {\n    private providers = ['artist', 'album', 'search', 'genres', 'new_releases', 'top_50', 'biography'];\n\n    /**\n     * Check if specified provider API keys should be requested in settings page.\n     */\n    public needProviderKeys(name: string): boolean {\n        return this.providers.findIndex(provider => {\n            const currentName = this.state.client[provider + '_provider'] || '';\n            return (currentName as string).toLowerCase() === name.toLowerCase();\n        }) > -1;\n    }\n}\n","<div class=\"header\">\n  <div class=\"title\" trans>Player</div>\n  <div class=\"subtitle\" trans>\n    Select streaming method and configure player defaults and interface.\n  </div>\n</div>\n\n<form\n  class=\"body many-inputs\"\n  (submit)=\"saveSettings()\"\n  ngNativeValidate\n  *ngIf=\"state.errors$ | async as errors\"\n>\n  <div class=\"many-inputs\" id=\"youtube_group\" [class.has-error]=\"errors.youtube_group\">\n    <div class=\"input-container\">\n      <label for=\"youtube.search_method\" trans>Youtube Search Method</label>\n      <select\n        name=\"youtube.search_method\"\n        id=\"youtube.search_method\"\n        [(ngModel)]=\"state.client['youtube.search_method']\"\n        required\n      >\n        <option value=\"site\" trans>Youtube Website (Recommended)</option>\n        <option value=\"api\" trans>Youtube API</option>\n      </select>\n      <p trans>Which method should be used to find a matching video for tracks.</p>\n    </div>\n\n    <div\n      class=\"input-container\"\n      [class.has-error]=\"errors.youtube_api_key\"\n      *ngIf=\"state.client['youtube.search_method'] !== 'site'\"\n    >\n      <label for=\"youtube_api_key\" trans>Youtube Api Key</label>\n      <textarea\n        name=\"youtube_api_key\"\n        id=\"youtube_api_key\"\n        [(ngModel)]=\"state.client['youtube_api_key']\"\n        required\n      ></textarea>\n      <div class=\"error\" *ngIf=\"errors.youtube_api_key\">{{ errors.youtube_api_key }}</div>\n    </div>\n\n    <div class=\"input-container\">\n      <label for=\"youtube.suggested_quality\" trans>Suggested Video Quality</label>\n      <select\n        name=\"youtube.suggested_quality\"\n        id=\"youtube.suggested_quality\"\n        [(ngModel)]=\"state.client['youtube.suggested_quality']\"\n        required\n      >\n        <option value=\"default\" trans>Default</option>\n        <option value=\"small\" trans>Small</option>\n        <option value=\"medium\" trans>Medium</option>\n        <option value=\"large\" trans>Large</option>\n        <option value=\"hd720\" trans>HD720</option>\n        <option value=\"hd1080\" trans>HD1080</option>\n        <option value=\"highres\" trans>Highres</option>\n      </select>\n      <p trans>What quality should be used for youtube videos.</p>\n    </div>\n\n    <div\n      class=\"input-container\"\n      [class.has-error]=\"errors['youtube.region_code']\"\n      *ngIf=\"state.client['youtube.search_method'] !== 'site'\"\n    >\n      <label for=\"youtube.region_code\" trans>Youtube Region Code</label>\n      <select\n        name=\"youtube.region_code\"\n        id=\"youtube.region_code\"\n        [(ngModel)]=\"state.client['youtube.region_code']\"\n      >\n        <option [ngValue]=\"null\" trans>None</option>\n        <option [ngValue]=\"country.code\" *ngFor=\"let country of countries\">\n          {{ country.name }}\n        </option>\n      </select>\n      <div class=\"error\" *ngIf=\"errors['youtube.region_code']\">\n        {{ errors['youtube.region_code'] }}\n      </div>\n      <p trans>\n        Instructs youtube API to return only videos that can be viewed in the specified country.\n      </p>\n    </div>\n\n    <div class=\"setting-toggle-container\">\n      <mat-slide-toggle\n        name=\"youtube.store_id\"\n        id=\"youtube.store_id\"\n        [(ngModel)]=\"state.client['youtube.store_id']\"\n        trans\n      >\n        Store Youtube ID\n      </mat-slide-toggle>\n      <p trans>\n        Store youtube video ID for tracks in database to improve performance for subsequent plays of\n        same song.\n      </p>\n    </div>\n\n    <div class=\"error group-error\" *ngIf=\"errors.youtube_group\">{{ errors.youtube_group }}</div>\n  </div>\n\n  <ng-container *ngIf=\"state.client['audio_search_provider'] === 'soundcloud'\">\n    <div class=\"input-container\" [class.has-error]=\"errors.soundcloud_api_key\">\n      <label for=\"soundcloud_api_key\" trans>Soundcloud Api Key</label>\n      <input\n        name=\"soundcloud_api_key\"\n        id=\"soundcloud_api_key\"\n        [(ngModel)]=\"state.server['soundcloud_api_key']\"\n        required\n      />\n      <p class=\"error\" *ngIf=\"errors.soundcloud_api_key\">{{ errors.soundcloud_api_key }}</p>\n    </div>\n  </ng-container>\n\n  <div class=\"input-container\">\n    <label for=\"player.default_volume\" trans>Default Player Volume (1 to 100)</label>\n    <input\n      type=\"number\"\n      name=\"player.default_volume\"\n      id=\"player.default_volume\"\n      [(ngModel)]=\"state.client['player.default_volume']\"\n      min=\"1\"\n      max=\"100\"\n    />\n  </div>\n\n  <div class=\"input-container\">\n    <label for=\"player.sort_method\" trans>Sort Method</label>\n    <select\n      name=\"player.sort_method\"\n      id=\"player.sort_method\"\n      [(ngModel)]=\"state.client['player.sort_method']\"\n      required\n    >\n      <option value=\"external\" trans>Spotify Popularity</option>\n      <option value=\"local\" trans>Local Plays</option>\n    </select>\n    <p trans>When content is sorted by popularity (eg. In track table), should it be sorted based on how popular that content is on spotify or by number of plays on the site.</p>\n  </div>\n\n  <div class=\"setting-toggle-container\">\n    <mat-slide-toggle\n      name=\"player.hide_video\"\n      id=\"player.hide_video\"\n      [(ngModel)]=\"state.client['player.hide_video']\"\n      trans\n      >Hide Video</mat-slide-toggle\n    >\n    <p trans>Should small video in the bottom right corner be hidden by default.</p>\n  </div>\n\n  <div class=\"setting-toggle-container margin-top\">\n    <mat-slide-toggle\n      name=\"player.mobile.auto_open_overlay\"\n      id=\"player.mobile.auto_open_overlay\"\n      [(ngModel)]=\"state.client['player.mobile.auto_open_overlay']\"\n      trans\n    >\n      Automatically Open Overlay on Mobile\n    </mat-slide-toggle>\n    <p trans>\n      Should fullscreen video overlay be opened automatically on mobile when user starts playback.\n    </p>\n  </div>\n\n  <button\n    mat-raised-button\n    color=\"accent\"\n    class=\"update-button\"\n    type=\"submit\"\n    [disabled]=\"state.loading$ | async\"\n    trans\n  >\n    Update\n  </button>\n  <mat-progress-bar\n    mode=\"indeterminate\"\n    color=\"accent\"\n    *ngIf=\"state.loading$ | async\"\n  ></mat-progress-bar>\n</form>\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {SettingsPanelComponent} from '@common/admin/settings/settings-panel.component';\nimport {CountryListItem} from '@common/core/services/value-lists.service';\n\n@Component({\n    selector: 'player-settings',\n    templateUrl: './player-settings.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: {'class': 'settings-panel'},\n})\nexport class PlayerSettingsComponent extends SettingsPanelComponent implements OnInit {\n    public countries: CountryListItem[] = [];\n\n    ngOnInit() {\n        this.valueLists.get(['countries']).subscribe(response => {\n            this.countries = response.countries;\n            this.cd.markForCheck();\n        });\n    }\n}\n","import {\n    ALL_PRIMITIVE_OPERATORS,\n    DatatableFilter,\n    FilterControlType, FilterOperator,\n} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/datatable-filter';\nimport {\n    CreatedAtFilter, TimestampFilter,\n    UpdatedAtFilter,\n} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/timestamp-filter';\nimport {FindUserModalComponent} from '@common/auth/find-user-modal/find-user-modal.component';\n\nexport const TRACK_INDEX_FILTERS: DatatableFilter[] = [\n    new DatatableFilter({\n        type: FilterControlType.Select,\n        key: 'image',\n        label: 'Artwork',\n        defaultValue: false,\n        description: 'Whether track has any artwork',\n        options: [\n            {\n                key: 'Has artwork',\n                value: {operator: FilterOperator.ne, value: null},\n            },\n            {\n                key: 'Does not have artwork',\n                value: null,\n            },\n        ],\n    }),\n\n    new DatatableFilter({\n        type: FilterControlType.Input,\n        inputType: 'number',\n        key: 'plays',\n        label: 'Plays',\n        defaultValue: 100,\n        description: 'Total number of plays for the track',\n        operators: ALL_PRIMITIVE_OPERATORS,\n        defaultOperator: FilterOperator.gte,\n    }),\n\n    new CreatedAtFilter({\n        description: 'Date track was created',\n    }),\n    new UpdatedAtFilter({\n        description: 'Date track was last updated',\n    }),\n];\n","<div class=\"datatable-page-header\">\n  <h1 trans>Tracks</h1>\n  <div class=\"header\">\n    <datatable-filters pluralName=\"tracks\" [filters]=\"filters\"></datatable-filters>\n    <div class=\"action-buttons\">\n      <button mat-raised-button color=\"accent\" class=\"button-with-icon\" [matMenuTriggerFor]=\"menu\">\n        <mat-icon svgIcon=\"add\"></mat-icon>\n        <span trans>New Track</span>\n      </button>\n      <mat-menu #menu=\"matMenu\">\n        <a\n          mat-menu-item\n          *ngIf=\"currentUser.hasPermission('tracks.create')\"\n          routerLink=\"/admin/backstage/tracks/new\"\n          class=\"button-with-icon\"\n          trans\n        >\n          Create Track\n        </a>\n        <a\n          mat-menu-item\n          *ngIf=\"currentUser.hasPermission('tracks.create')\"\n          routerLink=\"/admin/backstage/upload\"\n          class=\"button-with-icon\"\n          trans\n        >\n          Upload Track\n        </a>\n        <button\n          mat-menu-item\n          type=\"button\"\n          *ngIf=\"settings.get('spotify_is_setup')\"\n          (click)=\"openImportMedialModal()\"\n          trans\n        >\n          Import Track\n        </button>\n      </mat-menu>\n    </div>\n  </div>\n</div>\n\n<div class=\"datatable responsive-table\">\n  <mat-progress-bar\n    class=\"loading-bar\"\n    mode=\"indeterminate\"\n    color=\"accent\"\n    *ngIf=\"datatable.paginator && datatable.paginator.loading$ | async\"\n  ></mat-progress-bar>\n  <table class=\"material-table\">\n    <thead>\n      <tr>\n        <th table-header-checkbox></th>\n        <th trans>Track</th>\n        <th trans>Artist</th>\n        <th table-sort-header trans>Duration</th>\n        <th table-sort-header=\"plays\" trans>Plays</th>\n        <th table-sort-header=\"updated_at\" trans>Last Updated</th>\n        <th></th>\n      </tr>\n      <tr *ngIf=\"datatable.selectedRows$.value.length as selectedCount\">\n        <th colspan=\"7\">\n          <div\n            class=\"bulk-actions-title\"\n            [transValues]=\"{count: selectedCount, resource: 'track(s)'}\"\n            trans\n          >\n            :count :resource selected:\n          </div>\n          <div class=\"bulk-actions\">\n            <button\n              mat-raised-button\n              color=\"warn\"\n              (click)=\"maybeDeleteSelectedTracks()\"\n              *ngIf=\"currentUser.hasPermission('tracks.delete')\"\n              trans\n            >\n              Delete\n            </button>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let track of tracks$ | async\">\n        <td [table-body-checkbox]=\"track.id\"></td>\n        <td>\n          <div class=\"column-with-image\">\n            <media-image [media]=\"track\" default=\"album\"></media-image>\n            <a [routerLink]=\"urls.track(track)\" class=\"link\" target=\"_blank\">{{ track.name }}</a>\n          </div>\n        </td>\n        <td data-label=\"Artist\">\n          <div class=\"column-with-image\" *ngIf=\"track.artists[0] as artist\">\n            <media-image [media]=\"artist\" default=\"album\"></media-image>\n            <a [routerLink]=\"urls.artist(artist)\" class=\"link\" target=\"_blank\">{{ artist.name }}</a>\n          </div>\n        </td>\n        <td data-label=\"Duration\">{{ formatDuration(track.duration) }}</td>\n        <td data-label=\"Plays\">{{ track.plays | number }}</td>\n        <td>{{ track.updated_at | formattedDate }}</td>\n        <td class=\"edit-column\">\n          <button\n            mat-icon-button\n            (click)=\"openCrupdateLyricModal(track)\"\n            *ngIf=\"currentUser.hasPermission('lyrics.update')\"\n            [matTooltip]=\"'Edit lyrics' | trans\"\n          >\n            <mat-icon svgIcon=\"closed-caption\"></mat-icon>\n          </button>\n          <a\n            mat-icon-button\n            [routerLink]=\"urls.editTrack(track, true)\"\n            *ngIf=\"currentUser.hasPermission('tracks.update')\"\n            [matTooltip]=\"'Edit track' | trans\"\n          >\n            <mat-icon svgIcon=\"edit\"></mat-icon>\n          </a>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <no-results-message svgImage=\"music.svg\" *ngIf=\"datatable.paginator.noResults$ | async\">\n    <span primary-text>No tracks have been created yet</span>\n  </no-results-message>\n  <datatable-footer></datatable-footer>\n</div>\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {Tracks} from '../../../web-player/tracks/tracks.service';\nimport {FormattedDuration} from '../../../web-player/player/formatted-duration.service';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {Track, TRACK_MODEL} from '../../../models/Track';\nimport {CrupdateLyricModalComponent} from '../../lyrics-page/crupdate-lyric-modal/crupdate-lyric-modal.component';\nimport {WebPlayerUrls} from '../../../web-player/web-player-urls.service';\nimport {DatatableService} from '@common/datatable/datatable.service';\nimport {Observable} from 'rxjs';\nimport {ImportMediaModalComponent} from '../../import-media-modal/import-media-modal.component';\nimport {Settings} from '@common/core/config/settings.service';\nimport {TRACK_INDEX_FILTERS} from './track-index-filters';\n\n@Component({\n    selector: 'track-index',\n    templateUrl: './track-index.component.html',\n    styleUrls: ['./track-index.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [DatatableService],\n})\nexport class TrackIndexComponent implements OnInit {\n    tracks$ = this.datatable.data$ as Observable<Track[]>;\n    filters = TRACK_INDEX_FILTERS;\n    constructor(\n        private modal: Modal,\n        private tracks: Tracks,\n        private duration: FormattedDuration,\n        public currentUser: CurrentUser,\n        public datatable: DatatableService<Track>,\n        public urls: WebPlayerUrls,\n        public settings: Settings,\n    ) {}\n\n    ngOnInit() {\n        this.datatable.sort$.next({orderBy: 'plays'});\n        this.datatable.init({\n            uri: 'tracks',\n            staticParams: {with: ['artists', 'lyric']}\n        });\n    }\n\n    public openCrupdateLyricModal(track: Track) {\n        this.modal.open(CrupdateLyricModalComponent, {track, lyric: track.lyric})\n            .afterClosed().subscribe(lyric => {\n            if ( ! lyric) return;\n            track.lyric = lyric;\n        });\n    }\n\n    public maybeDeleteSelectedTracks() {\n        this.datatable.confirmResourceDeletion('tracks').subscribe(() => {\n            const ids = this.datatable.selectedRows$.value;\n            this.tracks.delete(ids).subscribe(() => {\n                this.datatable.reset();\n            });\n        });\n    }\n\n    public formatDuration(duration: number) {\n        return this.duration.fromMilliseconds(duration);\n    }\n\n    public openImportMedialModal() {\n        this.modal.open(ImportMediaModalComponent, {modelType: TRACK_MODEL})\n            .afterClosed()\n            .subscribe(response => {\n                if (response) {\n                    this.datatable.reset();\n                }\n            });\n    }\n}\n","<div class=\"modal-header\">\n  <h2 mat-dialog-title trans>Find User</h2>\n  <button type=\"button\" (click)=\"close()\" class=\"no-style close-button\" tabindex=\"-1\">\n    <mat-icon svgIcon=\"close\"></mat-icon>\n  </button>\n</div>\n\n<mat-dialog-content>\n  <div class=\"input-container search-input-container\">\n    <input\n      type=\"text\"\n      placeholder=\"Search for user by name or email...\"\n      [formControl]=\"searchFormControl\"\n    />\n    <loading-indicator [isVisible]=\"loading$ | async\" class=\"small\"></loading-indicator>\n  </div>\n\n  <div class=\"users\">\n    <div class=\"user\" *ngFor=\"let user of users$ | async\" (click)=\"close(user)\">\n      <img [src]=\"user.avatar\" />\n      <div class=\"meta overflow-hidden\">\n        <div class=\"name overflow-hidden\">{{ user.display_name }}</div>\n        <div class=\"email overflow-hidden\">{{ user.email }}</div>\n      </div>\n    </div>\n  </div>\n</mat-dialog-content>\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {FormControl} from '@angular/forms';\nimport {catchError, debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\nimport {BehaviorSubject, Observable, of} from 'rxjs';\nimport {Users} from '../users.service';\nimport {User} from '../../core/types/models/User';\nimport {NormalizedModel} from '@common/core/types/models/normalized-model';\n\n@Component({\n    selector: 'find-user-modal',\n    templateUrl: './find-user-modal.component.html',\n    styleUrls: ['./find-user-modal.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FindUserModalComponent implements OnInit {\n    searchFormControl = new FormControl();\n    loading$ = new BehaviorSubject(false);\n    users$ = new BehaviorSubject<User[]>([]);\n\n    constructor(\n        private dialogRef: MatDialogRef<FindUserModalComponent>,\n        private users: Users\n    ) {}\n\n    ngOnInit() {\n        this.searchFormControl.valueChanges\n            .pipe(\n                debounceTime(250),\n                distinctUntilChanged(),\n                switchMap(query => this.searchUsers(query)),\n                catchError(() => of([]))\n            )\n            .subscribe(users => {\n                this.users$.next(users);\n                this.loading$.next(false);\n            });\n    }\n\n    close(user?: User) {\n        this.dialogRef.close(this.normalizeUser(user));\n    }\n\n    private searchUsers(query: string): Observable<User[]> {\n        this.loading$.next(true);\n        if (!query) {\n            return of([]);\n        }\n        return this.users.getAll({query});\n    }\n\n    private normalizeUser(user?: User): NormalizedModel {\n        if (user) {\n            return {\n                id: user.id,\n                name: user.display_name,\n                image: user.avatar,\n                model_type: user.model_type,\n            };\n        }\n        return null;\n    }\n}\n","import {\n    DatatableFilter,\n    FilterControlType,\n} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/datatable-filter';\nimport {\n    CreatedAtFilter,\n    UpdatedAtFilter,\n} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/timestamp-filter';\nimport {FindUserModalComponent} from '@common/auth/find-user-modal/find-user-modal.component';\n\nexport const CHANNEL_INDEX_FILTERS: DatatableFilter[] = [\n    new DatatableFilter({\n        type: FilterControlType.SelectModel,\n        key: 'user_id',\n        label: 'User',\n        description: 'User channel was created by',\n        component: FindUserModalComponent,\n    }),\n\n    new CreatedAtFilter({\n        description: 'Date channel was created',\n    }),\n    new UpdatedAtFilter({\n        description: 'Date channel was last updated',\n    }),\n];\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {startCase} from '@common/core/utils/start-case';\n\n@Pipe({\n    name: 'formattedChannelConfig',\n    pure: true,\n})\nexport class FormattedChannelConfigPipe implements PipeTransform {\n    transform(value: string): string {\n        return value ? startCase(value) : value;\n    }\n}\n","export function startCase(text: string) {\n    return text.replace(/([A-Z])/g, ' $1');\n}\n","<div class=\"datatable-page-header\">\n  <h1 trans>Channels</h1>\n  <div class=\"header\">\n    <datatable-filters pluralName=\"channels\" [filters]=\"filters\"></datatable-filters>\n    <div class=\"action-buttons\">\n      <a mat-raised-button color=\"accent\" routerLink=\"/admin/channels/new\" class=\"button-with-icon\">\n        <mat-icon svgIcon=\"add\"></mat-icon>\n        <span trans>Create New Channel</span>\n      </a>\n    </div>\n  </div>\n</div>\n\n<div class=\"datatable responsive-table\">\n  <mat-progress-bar\n    class=\"loading-bar\"\n    mode=\"indeterminate\"\n    color=\"accent\"\n    *ngIf=\"datatable.paginator && datatable.paginator.loading$ | async\"\n  ></mat-progress-bar>\n  <table class=\"material-table\">\n    <thead>\n      <tr>\n        <th table-header-checkbox></th>\n        <th table-sort-header trans>Name</th>\n        <th trans>Content Type</th>\n        <th trans>Layout</th>\n        <th trans>Auto Update</th>\n        <th table-sort-header=\"updated_at\" trans>Last Updated</th>\n        <th></th>\n      </tr>\n      <tr *ngIf=\"datatable.selectedRows$.value.length as selectedCount\">\n        <th colspan=\"7\">\n          <div\n            class=\"bulk-actions-title\"\n            [transValues]=\"{count: selectedCount, resource: 'channel(s)'}\"\n            trans\n          >\n            :count :resource selected:\n          </div>\n          <div class=\"bulk-actions\">\n            <button\n              mat-raised-button\n              color=\"warn\"\n              (click)=\"maybeDeleteSelectedChannels()\"\n              *ngIf=\"currentUser.hasPermission('channels.delete')\"\n              trans\n            >\n              Delete\n            </button>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let channel of channels$ | async\">\n        <td [table-body-checkbox]=\"channel.id\"></td>\n        <td>\n          <a [routerLink]=\"urls.channel(channel)\" class=\"link\" target=\"_blank\">{{\n            channel.name\n          }}</a>\n        </td>\n        <td data-label=\"Content Type\">\n          {{ channel.config.contentModel | formattedChannelConfig }}\n        </td>\n        <td data-label=\"Layout\">{{ channel.config.layout | formattedChannelConfig }}</td>\n        <td class=\"hidden-on-mobile\">\n          {{\n            channel.config.autoUpdateMethod\n              ? (channel.config.autoUpdateMethod | formattedChannelConfig)\n              : '-'\n          }}\n        </td>\n        <td class=\"hidden-on-mobile\">{{ channel.updated_at | formattedDate }}</td>\n        <td class=\"edit-column\">\n          <a\n            mat-icon-button\n            [routerLink]=\"['/admin/channels', channel.id]\"\n            [matTooltip]=\"'Edit channel' | trans\"\n          >\n            <mat-icon svgIcon=\"edit\"></mat-icon>\n          </a>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <no-results-message svgImage=\"playlist.svg\" *ngIf=\"datatable.paginator.noResults$ | async\">\n    <span primary-text>No channels have been created yet</span>\n  </no-results-message>\n  <datatable-footer></datatable-footer>\n</div>\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {Settings} from '@common/core/config/settings.service';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {HttpErrors} from '@common/core/http/errors/http-errors.enum';\nimport {Channel} from '../channel';\nimport {ChannelService} from '../channel.service';\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\nimport {DatatableService} from '@common/datatable/datatable.service';\nimport {Observable} from 'rxjs';\nimport {WebPlayerUrls} from '../../../web-player/web-player-urls.service';\nimport {CHANNEL_INDEX_FILTERS} from './channel-index-filters';\n\n@Component({\n    selector: 'channel-index',\n    templateUrl: './channel-index.component.html',\n    styleUrls: ['./channel-index.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [DatatableService],\n})\nexport class ChannelIndexComponent implements OnInit {\n    channels$ = this.datatable.data$ as Observable<Channel[]>;\n    filters = CHANNEL_INDEX_FILTERS;\n    constructor(\n        public datatable: DatatableService<Channel>,\n        private channels: ChannelService,\n        private modal: Modal,\n        public currentUser: CurrentUser,\n        public settings: Settings,\n        private toast: Toast,\n        public urls: WebPlayerUrls,\n    ) {}\n\n    ngOnInit() {\n        this.datatable.init({\n            uri: ChannelService.BASE_URI,\n        });\n    }\n\n    public maybeDeleteSelectedChannels() {\n        this.datatable.confirmResourceDeletion('channels').subscribe(() => {\n            const ids = this.datatable.selectedRows$.value;\n            this.channels.delete(ids).subscribe(() => {\n                this.datatable.reset();\n                this.toast.open('Channels deleted.');\n            }, (errResponse: BackendErrorResponse) => {\n                this.toast.open(errResponse.message || HttpErrors.Default);\n            });\n        });\n    }\n}\n","<mat-icon svgIcon=\"link\" class=\"link-icon\"></mat-icon>\n<ng-container *ngIf=\"editing$ | async; else editButton\">\n  <div class=\"nowrap\">{{ fullBaseUri + getPrefix() }}</div>\n  <div class=\"input-container\">\n    <input type=\"text\" [formControl]=\"slugControl\" />\n  </div>\n  <button type=\"button\" mat-flat-button color=\"gray\" class=\"action-button\" (click)=\"save()\" trans>\n    Save\n  </button>\n</ng-container>\n\n<ng-template #editButton>\n  <ng-container *ngIf=\"fullBaseUri + getPrefix() + (slug$ | async) as fullUrl\">\n    <a class=\"nowrap\" [href]=\"fullUrl\" target=\"_blank\" [title]=\"fullUrl\">{{ fullUrl }}</a>\n  </ng-container>\n  <button\n    type=\"button\"\n    mat-flat-button\n    color=\"gray\"\n    class=\"action-button\"\n    (click)=\"startEditing()\"\n    trans\n  >\n    Edit\n  </button>\n</ng-template>\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {BehaviorSubject} from 'rxjs';\nimport {Settings} from '@common/core/config/settings.service';\n\n@Component({\n    selector: 'slug-control',\n    templateUrl: './slug-control.component.html',\n    styleUrls: ['./slug-control.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: SlugControlComponent,\n        multi: true,\n    }]\n})\nexport class SlugControlComponent implements ControlValueAccessor {\n    private propagateChange: Function;\n    slug$ = new BehaviorSubject<string>('');\n    editing$ = new BehaviorSubject<boolean>(false);\n    slugControl = new FormControl();\n    @Input() prefix: string;\n\n    @Input() set baseUri(uri: string) {\n        uri = uri || this.defaultBaseUri;\n        this.fullBaseUri = uri.endsWith('/') ? uri : uri + '/';\n    }\n    private defaultBaseUri: string = this.settings.getBaseUrl() + '/';\n    fullBaseUri = this.defaultBaseUri;\n\n    constructor(public settings: Settings) {}\n\n    writeValue(value: string) {\n        this.slug$.next(value);\n        this.slugControl.setValue(value);\n    }\n\n    registerOnChange(fn: Function) {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched() {}\n\n    save() {\n        this.slug$.next(this.slugControl.value);\n        this.propagateChange(this.slug$.value);\n        this.editing$.next(false);\n    }\n\n    startEditing() {\n        this.editing$.next(true);\n    }\n\n    getPrefix() {\n        return this.prefix ? this.prefix + '/' : '';\n    }\n}\n","<button type=\"button\" mat-icon-button (click)=\"togglePopover()\" (mouseenter)=\"openPopover()\" (mouseleave)=\"onMouseLeave($event)\">\n    <mat-icon #infoIcon svgIcon=\"info\" class=\"info-icon\"></mat-icon>\n</button>\n\n<ng-template #popoverContent>\n    <ng-content></ng-content>\n</ng-template>\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef, Input,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport {RIGHT_POSITION} from '@common/core/ui/overlay-panel/positions/right-position';\nimport {OverlayPanelRef} from '@common/core/ui/overlay-panel/overlay-panel-ref';\nimport {OverlayPanel} from '@common/core/ui/overlay-panel/overlay-panel.service';\n\n@Component({\n    selector: 'info-popover',\n    templateUrl: './info-popover.component.html',\n    styleUrls: ['./info-popover.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n})\nexport class InfoPopoverComponent {\n    @ViewChild('infoIcon', { read: ElementRef }) infoButton: ElementRef<HTMLElement>;\n    @ViewChild('popoverContent') content: TemplateRef<any>;\n    @Input() wider: boolean;\n    private overlayRef: OverlayPanelRef;\n\n    constructor(\n        private overlay: OverlayPanel,\n        private viewContainerRef: ViewContainerRef,\n    ) {}\n\n    public openPopover() {\n        if (this.overlayRef) {\n            this.closePopover();\n        }\n        const position = {...RIGHT_POSITION};\n        position[0].offsetY = -15;\n\n        this.overlayRef = this.overlay.open(this.content, {\n            origin: this.infoButton,\n            position: RIGHT_POSITION,\n            hasBackdrop: false,\n            scrollStrategy: 'close',\n            viewContainerRef: this.viewContainerRef,\n            panelClass: ['info-popover-panel', this.wider ? 'wider' : null],\n        });\n\n        this.overlayRef.getPanelEl().addEventListener('mouseleave', () => {\n            this.closePopover();\n        });\n    }\n\n    public closePopover() {\n        if (this.overlayRef) {\n            this.overlayRef.close();\n            this.overlayRef = null;\n        }\n    }\n\n    public togglePopover() {\n        if (this.overlayRef) {\n            this.closePopover();\n        } else {\n            this.openPopover();\n        }\n    }\n\n    public onMouseLeave(e: MouseEvent) {\n        const toElement = (e['toElement'] || e.relatedTarget) as HTMLElement;\n        if ( !toElement || !toElement.classList.contains('info-popover-panel')) {\n            this.closePopover();\n        }\n    }\n}\n","<form class=\"header many-inputs material-panel\" (ngSubmit)=\"submit()\" [formGroup]=\"form\">\n  <mat-tab-group color=\"accent\" animationDuration=\"0ms\">\n    <mat-tab [label]=\"'Details' | trans\">\n      <div class=\"many-inputs tab-content\">\n        <div class=\"input-container name-input-container\">\n          <label for=\"crupdate-channel-name\" trans>Name</label>\n          <input type=\"text\" id=\"crupdate-channel-name\" formControlName=\"name\" required />\n          <div class=\"error\" *ngIf=\"errors.name\">{{ errors.name }}</div>\n        </div>\n\n        <div class=\"input-container\" *ngIf=\"!channel?.config?.lockSlug\">\n          <slug-control formControlName=\"slug\"></slug-control>\n          <div class=\"error\" *ngIf=\"errors.slug\">{{ errors.slug }}</div>\n        </div>\n\n        <ng-container formGroupName=\"config\">\n          <div class=\"input-container\">\n            <label for=\"channel-content-type\" trans>Content</label>\n            <select id=\"channel-content-type\" formControlName=\"contentType\">\n              <option value=\"listAll\" trans>List all content of specified type</option>\n              <option value=\"manual\" trans>Add content manually</option>\n              <option value=\"autoUpdate\" trans>\n                Automatically update content with specified method\n              </option>\n            </select>\n          </div>\n\n          <div\n            class=\"input-container\"\n            *ngIf=\"form.get('config.contentType').value === 'autoUpdate'\"\n          >\n            <label for=\"crupdate-channel-auto-update\">\n              <span trans>Auto update method</span>\n              <info-popover *ngIf=\"!settings.get('site.hide_docs_buttons')\">\n                <div class=\"title\" trans>Auto update channel content</div>\n                <div class=\"description\" trans>\n                  Select how this channel should be automatically updated.\n                </div>\n                <div class=\"link\">\n                  <mat-icon svgIcon=\"link\"></mat-icon>\n                  <a\n                    href=\"https://support.vebto.com/help-center/articles/28/31/170/channels\"\n                    target=\"_blank\"\n                    >Learn more here.</a\n                  >\n                </div>\n              </info-popover>\n            </label>\n            <div\n              class=\"input-with-action\"\n              [class.hide-action]=\"!channel || !form.get('config.autoUpdateMethod').value\"\n            >\n              <select id=\"crupdate-channel-auto-update\" formControlName=\"autoUpdateMethod\">\n                <ng-container *ngFor=\"let method of autoUpdateMethods | keyvalue\">\n                  <option [value]=\"method.key\" *ngIf=\"method.value.active\">\n                    {{ method.value.name }}\n                  </option>\n                </ng-container>\n              </select>\n              <input\n                type=\"text\"\n                [placeholder]=\"valueName\"\n                formControlName=\"autoUpdateValue\"\n                *ngIf=\"getValueName() as valueName\"\n                required\n                minlength=\"22\"\n                maxlength=\"22\"\n              />\n              <button\n                type=\"button\"\n                mat-flat-button\n                color=\"accent\"\n                (click)=\"autoUpdateChanelContents()\"\n                [disabled]=\"loading$ | async\"\n                [matTooltip]=\"'Update channel content now' | trans\"\n              >\n                <mat-icon svgIcon=\"refresh\"></mat-icon>\n              </button>\n            </div>\n            <p *ngIf=\"form.get('config.autoUpdateMethod').value\" trans>\n              Channel will only automatically update once a day.\n            </p>\n          </div>\n\n          <div class=\"input-container\">\n            <label for=\"list-all-model\" trans>Type of content</label>\n            <select id=\"list-all-model\" formControlName=\"contentModel\">\n              <option [value]=\"modelTypes.artist\" trans>Artist</option>\n              <option [value]=\"modelTypes.album\" trans>Album</option>\n              <option [value]=\"modelTypes.track\" trans>Track</option>\n              <option [value]=\"modelTypes.playlist\" trans>Playlist</option>\n              <option [value]=\"modelTypes.genre\" trans>Genre</option>\n              <option [value]=\"modelTypes.user\" trans>User</option>\n              <ng-container *ngIf=\"form.get('config.contentType').value === 'manual'\">\n                <option [value]=\"modelTypes.channel\" trans>Channel</option>\n                <option [ngValue]=\"null\" trans>Multiple types</option>\n              </ng-container>\n            </select>\n          </div>\n\n          <div class=\"input-container\">\n            <label for=\"channel-content-order\" trans>How to order content</label>\n            <select id=\"channel-content-order\" formControlName=\"contentOrder\">\n              <option\n                value=\"popularity:desc\"\n                [disabled]=\"form.get('config.contentModel').value === modelTypes.user\"\n                trans\n              >\n                Most popular first\n              </option>\n              <option value=\"created_at:desc\" trans>Most recently added first</option>\n              <option\n                [disabled]=\"form.get('config.contentModel').value !== modelTypes.album\"\n                value=\"release_date:desc\"\n                trans\n              >\n                Most recent first (by release date)\n              </option>\n              <option\n                [disabled]=\"form.get('config.contentType').value === 'listAll'\"\n                value=\"channelables.order:asc\"\n                trans\n              >\n                Manual (reorder below)\n              </option>\n            </select>\n            <p *ngIf=\"form.get('config.contentOrder').value === 'popularity:desc'\">\n              Sorting will be based on \"Sort Method\" option in\n              <a target=\"_blank\" routerLink=\"/admin/settings/player\">settings page</a>.\n            </p>\n          </div>\n\n          <div\n            class=\"input-container\"\n            *ngIf=\"form.get('config.contentModel').value !== modelTypes.channel\"\n          >\n            <label for=\"crupdate-channel-layout\" trans>Layout</label>\n            <select id=\"crupdate-channel-layout\" formControlName=\"layout\">\n              <option value=\"grid\" trans>Grid</option>\n              <option\n                value=\"trackTable\"\n                [disabled]=\"form.get('config.contentModel').value !== modelTypes.track\"\n                trans\n              >\n                Track Table\n              </option>\n              <option\n                value=\"trackList\"\n                [disabled]=\"form.get('config.contentModel').value !== modelTypes.track\"\n                trans\n              >\n                Track List\n              </option>\n            </select>\n            <p *ngIf=\"form.get('config.layout').value === 'carousel'\" trans>\n              Carousel layout will only affect nested channels.\n            </p>\n          </div>\n\n          <div class=\"setting-toggle-container\">\n            <mat-slide-toggle formControlName=\"hideTitle\" trans>Hide name</mat-slide-toggle>\n            <p trans>Whether name should be shown when displaying this channel on the site.</p>\n          </div>\n\n          <div class=\"setting-toggle-container\">\n            <mat-slide-toggle formControlName=\"carouselWhenNested\" trans\n              >Switch to Carousel</mat-slide-toggle\n            >\n            <p trans>\n              Show content in carousel layout when this channel is nested under another channel.\n            </p>\n          </div>\n        </ng-container>\n      </div>\n    </mat-tab>\n    <mat-tab [label]=\"'SEO' | trans\">\n      <div class=\"many-inputs tab-content\" formGroupName=\"config\">\n        <div class=\"input-container\">\n          <label for=\"crupdated_channel_seo_title\" trans>SEO Title</label>\n          <input type=\"text\" id=\"crupdated_channel_seo_title\" formControlName=\"seoTitle\" />\n        </div>\n\n        <div class=\"input-container\">\n          <label for=\"crupdate-channel_seo_description\" trans>SEO Description</label>\n          <textarea\n            type=\"text\"\n            id=\"crupdate-channel_seo_description\"\n            formControlName=\"seoDescription\"\n            rows=\"6\"\n          ></textarea>\n        </div>\n      </div>\n    </mat-tab>\n  </mat-tab-group>\n\n  <div class=\"primary-buttons\">\n    <button\n      mat-raised-button\n      class=\"action-button\"\n      type=\"submit\"\n      color=\"accent\"\n      [disabled]=\"loading$ | async\"\n      trans\n    >\n      Save\n    </button>\n  </div>\n  <mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"loading$ | async\"></mat-progress-bar>\n</form>\n\n<div class=\"material-panel channel-content\">\n  <div class=\"content-header\">\n    <h2 trans>Channel Content</h2>\n    <div class=\"header-info\" *ngIf=\"form.get('config.contentType').value === 'listAll'\">\n      <mat-icon svgIcon=\"error-outline\"></mat-icon>\n      <span trans>This channel will list all available content of specified type.</span>\n    </div>\n    <div class=\"header-info\" *ngIf=\"form.get('config.contentType').value === 'autoUpdate'\">\n      <mat-icon svgIcon=\"error-outline\"></mat-icon>\n      <span trans>This channel content will update automatically.</span>\n    </div>\n  </div>\n\n  <ng-container *ngIf=\"form.get('config.contentType').value === 'manual'\">\n    <div class=\"input-container search-input-container\">\n      <label for=\"content-search\" class=\"hidden\" trans>Search for content</label>\n      <div class=\"input-icon-container\">\n        <input\n          type=\"text\"\n          [matAutocomplete]=\"contentAuto\"\n          id=\"content-search\"\n          [formControl]=\"searchControl\"\n          placeholder=\"Search for content to add...\"\n          trans-placeholder\n        />\n        <mat-icon svgIcon=\"search\"></mat-icon>\n      </div>\n    </div>\n    <mat-autocomplete\n      #contentAuto=\"matAutocomplete\"\n      [displayWith]=\"displayFn\"\n      (optionSelected)=\"attachContentItem($event.option.value)\"\n    >\n      <mat-option *ngFor=\"let contentItem of searchResults$ | async\" [value]=\"contentItem\">\n        <div class=\"mat-option-wrapper\">\n          <media-image [media]=\"contentItem\"></media-image>\n          <div class=\"multiple-lines\">\n            <div class=\"ellipsis\">{{ contentItem.name || contentItem.display_name }}</div>\n            <div class=\"secondary ellipsis\">{{ contentItem.model_type }}</div>\n          </div>\n        </div>\n      </mat-option>\n    </mat-autocomplete>\n  </ng-container>\n\n  <div cdkDropListGroup>\n    <div\n      cdkDropList\n      [cdkDropListEnterPredicate]=\"dropListEnterPredicate\"\n      (cdkDropListDropped)=\"dropListDropped()\"\n    ></div>\n    <div class=\"content-grid\">\n      <div\n        class=\"content-item content-grid-item\"\n        [class.channel-item]=\"isChannel(item)\"\n        cdkDropList\n        [cdkDropListEnterPredicate]=\"dropListEnterPredicate\"\n        (cdkDropListDropped)=\"dropListDropped()\"\n        *ngFor=\"let item of channelContent$ | async\"\n      >\n        <figure cdkDrag (cdkDragMoved)=\"dragMoved($event)\">\n          <div class=\"image-wrapper\" [class.channel-bg-wrapper]=\"isChannel(item)\">\n            <ng-container *ngIf=\"isChannel(item)\">\n              <div class=\"channel-bg\"></div>\n              <div class=\"content-grid channel-content-grid\">\n                <div class=\"content-grid-item\" *ngFor=\"let item of item.content?.data | slice: 0:5\">\n                  <div class=\"image-wrapper\">\n                    <media-image [media]=\"item\"></media-image>\n                  </div>\n                </div>\n              </div>\n            </ng-container>\n\n            <media-image [media]=\"item\" *ngIf=\"!isChannel(item)\"></media-image>\n\n            <div class=\"action-buttons\" *ngIf=\"form.get('config.contentType').value === 'manual'\">\n              <button\n                class=\"action-button drag-action-button\"\n                type=\"button\"\n                cdkDragHandle\n                mat-mini-fab\n              >\n                <mat-icon svgIcon=\"drag-handle\"></mat-icon>\n              </button>\n              <button\n                class=\"action-button\"\n                type=\"button\"\n                color=\"warn\"\n                (click)=\"detachContentItem(item)\"\n                [disabled]=\"detaching === item.id\"\n                mat-mini-fab\n              >\n                <mat-icon svgIcon=\"delete\"></mat-icon>\n              </button>\n            </div>\n          </div>\n          <figcaption>\n            <div class=\"content-item-name\">{{ item.name }}</div>\n            <div class=\"content-item-type\">\n              <ng-container [ngSwitch]=\"item.model_type\">\n                <ng-container *ngSwitchCase=\"'track'\">{{item.artists[0]?.name}}</ng-container>\n                <ng-container *ngSwitchCase=\"'album'\">{{item.artists[0]?.name}}</ng-container>\n                <span class=\"capitalize\" *ngSwitchDefault trans>{{item.model_type}}</span>\n              </ng-container>\n            </div>\n          </figcaption>\n        </figure>\n      </div>\n    </div>\n  </div>\n\n  <no-results-message *ngIf=\"!(channelContent$ | async)?.length\">\n    <span primary-text trans>Channel is empty</span>\n    <span secondary-text trans>No content is attached to this channel yet.</span>\n  </no-results-message>\n</div>\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport {FormBuilder, FormControl} from '@angular/forms';\nimport {BehaviorSubject, of} from 'rxjs';\nimport {ChannelService} from '../channel.service';\nimport {Channel, CHANNEL_MODEL} from '../channel';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    filter,\n    finalize,\n    switchMap,\n} from 'rxjs/operators';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ChannelContentItem} from '../channel-content-item';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {slugifyString} from '@common/core/utils/slugify-string';\nimport {Settings} from '@common/core/config/settings.service';\nimport {Search} from '../../../web-player/search/search.service';\nimport {\n    CdkDrag,\n    CdkDragMove,\n    CdkDropList,\n    CdkDropListGroup,\n    moveItemInArray,\n} from '@angular/cdk/drag-drop';\nimport {ViewportRuler} from '@angular/cdk/overlay';\nimport {CHANNEL_MODEL_TYPES} from '../../../models/model_types';\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\nimport {GenericBackendResponse} from '@common/core/types/backend-response';\n\n@Component({\n    selector: 'crupdate-channel-page',\n    templateUrl: './crupdate-channel-page.component.html',\n    styleUrls: ['./crupdate-channel-page.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CrupdateChannelPageComponent implements OnInit {\n    public modelTypes = CHANNEL_MODEL_TYPES;\n    public channel: Channel;\n    public channelContent$ = new BehaviorSubject<ChannelContentItem[]>([]);\n\n    public readonly autoUpdateMethods = {\n        spotifyTopTracks: {\n            name: 'Spotify: Popular Tracks',\n            model: CHANNEL_MODEL_TYPES.track,\n            active: this.settings.get('spotify_is_setup'),\n        },\n        spotifyNewAlbums: {\n            name: 'Spotify: New Releases',\n            model: CHANNEL_MODEL_TYPES.album,\n            active: this.settings.get('spotify_is_setup'),\n        },\n        spotifyPlaylistTracks: {\n            name: 'Spotify: Playlist Tracks',\n            model: CHANNEL_MODEL_TYPES.track,\n            hasValue: true,\n            valueName: 'Playlist ID',\n            active: this.settings.get('spotify_is_setup'),\n        },\n        lastfmTopGenres: {\n            name: 'Last.fm: Popular genres',\n            model: CHANNEL_MODEL_TYPES.genre,\n            active: this.settings.get('lastfm_is_setup'),\n        },\n    };\n\n    public form = this.fb.group({\n        name: [''],\n        slug: [''],\n        config: this.fb.group({\n            hideTitle: [false],\n            seoTitle: [''],\n            seoDescription: [''],\n            carouselWhenNested: [false],\n            layout: ['grid'],\n            contentType: ['listAll'],\n            contentModel: [this.modelTypes.track],\n            contentOrder: ['popularity:desc'],\n            autoUpdateMethod: [],\n            autoUpdateValue: [],\n        }),\n    });\n\n    public loading$ = new BehaviorSubject<boolean>(null);\n    public detaching: number = null;\n    public channelUrl$ = new BehaviorSubject<string>('');\n    public searchControl = new FormControl();\n    public searchResults$ = new BehaviorSubject<ChannelContentItem[]>([]);\n    public errors: Partial<Channel> = {};\n\n    @ViewChild(CdkDropListGroup) listGroup: CdkDropListGroup<CdkDropList>;\n    @ViewChild(CdkDropList) placeholder: CdkDropList;\n    public target: CdkDropList;\n    public targetIndex: number;\n    public source: CdkDropList;\n    public sourceIndex: number;\n    public activeContainer;\n\n    constructor(\n        private fb: FormBuilder,\n        private channels: ChannelService,\n        private route: ActivatedRoute,\n        private toast: Toast,\n        private search: Search,\n        private cd: ChangeDetectorRef,\n        public settings: Settings,\n        private router: Router,\n        private viewportRuler: ViewportRuler\n    ) {}\n\n    ngOnInit() {\n        this.route.data.subscribe(data => {\n            if (data.api) {\n                this.channel = data.api.channel;\n                this.form.patchValue(data.api.channel);\n                this.channelContent$.next(data.api.channel.content?.data);\n            }\n        });\n\n        this.form\n            .get('slug')\n            .valueChanges.pipe(\n                filter(value => !!value),\n                distinctUntilChanged()\n            )\n            .subscribe(value => {\n                this.channelUrl$.next(\n                    this.settings.getBaseUrl() + '/channels/' + value\n                );\n            });\n\n        if (!this.channel?.config?.lockSlug) {\n            this.form\n                .get('name')\n                .valueChanges.pipe(\n                    filter(value => !!value),\n                    distinctUntilChanged()\n                )\n                .subscribe(value => {\n                    if (!this.form.get('slug').dirty) {\n                        this.form.get('slug').setValue(slugifyString(value));\n                    }\n                });\n        }\n\n        this.form.get('config.contentType').valueChanges.subscribe(value => {\n            this.form\n                .get('config.autoUpdateMethod')\n                .setValue(\n                    value === 'autoUpdate'\n                        ? Object.keys(this.autoUpdateMethods)[0]\n                        : null\n                );\n            this.form.get('config.autoUpdateValue').setValue(null);\n\n            // prevent \"listAll\" from having order by \"channelables.order\"\n            this.form.get('config.contentOrder').setValue('popularity:desc');\n        });\n\n        this.form\n            .get('config.autoUpdateMethod')\n            .valueChanges.subscribe((value: string) => {\n                const contentModel = this.form.get('config.contentModel');\n                if (!value) {\n                    contentModel.enable();\n                } else {\n                    contentModel.setValue(this.autoUpdateMethods[value].model);\n                    contentModel.disable();\n                }\n            });\n\n        this.form\n            .get('config.contentModel')\n            .valueChanges.pipe(\n                filter(value => !!value),\n                distinctUntilChanged()\n            )\n            .subscribe(value => {\n                this.searchResults$.next([]);\n                const orderControl = this.form.get('config.contentOrder');\n                if (value === this.modelTypes.track) {\n                    this.form.get('config.layout').setValue('trackTable');\n                    orderControl.enable();\n                } else if (value === this.modelTypes.channel) {\n                    orderControl.setValue('channelables.order');\n                    orderControl.disable();\n                } else {\n                    this.form.get('config.layout').setValue('grid');\n                    orderControl.enable();\n                }\n            });\n\n        this.searchControl.valueChanges\n            .pipe(\n                debounceTime(200),\n                distinctUntilChanged(),\n                filter(query => typeof query === 'string' && !!query),\n                switchMap(query => this.searchForContent(query)),\n                catchError(() => of({results: []}))\n            )\n            .subscribe(response => {\n                this.searchResults$.next(\n                    response.results as ChannelContentItem[]\n                );\n            });\n    }\n\n    private searchForContent(query: string) {\n        const modelType = this.form.get('config.contentModel').value;\n        const types = modelType ? [modelType] : Object.values(this.modelTypes);\n        return this.search.media(query, {\n            types,\n            flatten: true,\n            limit: 8,\n            localOnly: true,\n        });\n    }\n\n    public submit(\n        params = {updateContent: false},\n        successFn?: (\n            channel: GenericBackendResponse<{channel: Channel}>\n        ) => void\n    ) {\n        if (!successFn) {\n            successFn = () => {\n                this.router.navigate(['/admin/channels']);\n                this.toast.open('Channel saved.');\n            };\n        }\n        if (\n            this.form.get('config.autoUpdateMethod').dirty ||\n            this.form.get('config.autoUpdateValue').dirty\n        ) {\n            params.updateContent = true;\n        }\n        this.loading$.next(true);\n        const payload = {...this.form.getRawValue(), ...params};\n        if (!this.channel) {\n            payload.content = this.channelContent$.value.map(i =>\n                this.partialItem(i)\n            );\n        }\n        const request = this.channel\n            ? this.channels.update(this.channel.id, payload)\n            : this.channels.create(payload);\n        request\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(successFn, (errResponse: BackendErrorResponse) => {\n                this.errors = errResponse.errors;\n                this.cd.markForCheck();\n            });\n    }\n\n    public detachContentItem(item: ChannelContentItem) {\n        if (this.channel) {\n            this.detaching = item.id;\n            this.channels\n                .detachItem(this.channel.id, item)\n                .pipe(finalize(() => (this.detaching = null)))\n                .subscribe(() => {\n                    this.removeContentItem(item);\n                    this.toast.open('Item detached.');\n                });\n        } else {\n            this.removeContentItem(item);\n        }\n    }\n\n    private removeContentItem(item: ChannelContentItem) {\n        const newContent = [...this.channelContent$.value];\n        const index = newContent.findIndex(\n            c => c.id === item.id && c.model_type === item.model_type\n        );\n        newContent.splice(index, 1);\n        this.channelContent$.next(newContent);\n    }\n\n    public attachContentItem(item: ChannelContentItem) {\n        const alreadyAttached = this.channelContent$.value.find(\n            attachedItem => {\n                return (\n                    attachedItem.id === item.id &&\n                    attachedItem.model_type === item.model_type\n                );\n            }\n        );\n        if (alreadyAttached) {\n            return;\n        }\n        if (this.channel) {\n            this.channels\n                .attachItem(this.channel.id, this.partialItem(item))\n                .subscribe(\n                    () => {\n                        this.channelContent$.next([\n                            ...this.channelContent$.value,\n                            item,\n                        ]);\n                        this.toast.open('Item attached.');\n                    },\n                    (errResponse: BackendErrorResponse) => {\n                        if (errResponse.message) {\n                            this.toast.open(errResponse.message);\n                        }\n                    }\n                );\n        } else {\n            this.channelContent$.next([...this.channelContent$.value, item]);\n        }\n    }\n\n    public autoUpdateChanelContents() {\n        this.submit({updateContent: true}, response => {\n            this.channelContent$.next(response.channel.content.data);\n            this.toast.open('Content updated');\n        });\n    }\n\n    public isChannel(item: ChannelContentItem): boolean {\n        return item.model_type === CHANNEL_MODEL;\n    }\n\n    public displayFn() {\n        return null;\n    }\n\n    public getValueName(): string {\n        return this.autoUpdateMethods[\n            this.form.get('config.autoUpdateMethod').value\n        ]?.valueName;\n    }\n\n    private partialItem(item: ChannelContentItem) {\n        return {\n            id: item.id,\n            model_type: item.model_type,\n        };\n    }\n\n    /* GRID DRAG AND DROP */\n\n    dragMoved(e: CdkDragMove) {\n        const point = this.getPointerPositionOnPage(e.event);\n        this.listGroup._items.forEach(dropList => {\n            if (__isInsideDropListClientRect(dropList, point.x, point.y)) {\n                this.activeContainer = dropList;\n                return;\n            }\n        });\n    }\n\n    dropListDropped() {\n        if (!this.target) return;\n\n        const phElement = this.placeholder.element.nativeElement;\n        const parent = phElement.parentElement;\n\n        phElement.style.display = 'none';\n\n        parent.removeChild(phElement);\n        parent.appendChild(phElement);\n        parent.insertBefore(\n            this.source.element.nativeElement,\n            parent.children[this.sourceIndex]\n        );\n\n        this.target = null;\n        this.source = null;\n\n        if (this.sourceIndex !== this.targetIndex) {\n            const channelContent = [...this.channelContent$.value];\n            moveItemInArray(channelContent, this.sourceIndex, this.targetIndex);\n            this.channelContent$.next(channelContent);\n            if (this.channel) {\n                const order = {};\n                channelContent.forEach(\n                    (item, i) => (order[i] = item.channelable_id)\n                );\n                this.channels.changeOrder(this.channel.id, order).subscribe();\n            }\n        }\n    }\n\n    dropListEnterPredicate = (drag: CdkDrag, drop: CdkDropList) => {\n        if (drop === this.placeholder) return true;\n\n        if (drop !== this.activeContainer) return false;\n\n        const phElement = this.placeholder.element.nativeElement;\n        const sourceElement = drag.dropContainer.element.nativeElement;\n        const dropElement = drop.element.nativeElement;\n\n        const dragIndex = __indexOf(\n            dropElement.parentElement.children,\n            this.source ? phElement : sourceElement\n        );\n        const dropIndex = __indexOf(\n            dropElement.parentElement.children,\n            dropElement\n        );\n\n        if (!this.source) {\n            this.sourceIndex = dragIndex;\n            this.source = drag.dropContainer;\n\n            phElement.style.width = sourceElement.clientWidth + 'px';\n            phElement.style.height = sourceElement.clientHeight + 'px';\n\n            sourceElement.parentElement.removeChild(sourceElement);\n        }\n\n        this.targetIndex = dropIndex;\n        this.target = drop;\n\n        phElement.style.display = '';\n        dropElement.parentElement.insertBefore(\n            phElement,\n            dropIndex > dragIndex ? dropElement.nextSibling : dropElement\n        );\n\n        // this.placeholder.enterPredicate(drag, drag.element.nativeElement.offsetLeft, drag.element.nativeElement.offsetTop);\n        this.placeholder._dropListRef.enter(\n            drag._dragRef,\n            drag.element.nativeElement.offsetLeft,\n            drag.element.nativeElement.offsetTop\n        );\n        return false;\n    };\n\n    /** Determines the point of the page that was touched by the user. */\n    getPointerPositionOnPage(event: MouseEvent | TouchEvent) {\n        // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n        const point = __isTouchEvent(event)\n            ? event.touches[0] || event.changedTouches[0]\n            : event;\n        const scrollPosition = this.viewportRuler.getViewportScrollPosition();\n\n        return {\n            x: point.pageX - scrollPosition.left,\n            y: point.pageY - scrollPosition.top,\n        };\n    }\n}\n\nfunction __indexOf(collection, node) {\n    return Array.prototype.indexOf.call(collection, node);\n}\n\n/** Determines whether an event is a touch event. */\nfunction __isTouchEvent(event: MouseEvent | TouchEvent): event is TouchEvent {\n    return event.type.startsWith('touch');\n}\n\nfunction __isInsideDropListClientRect(\n    dropList: CdkDropList,\n    x: number,\n    y: number\n) {\n    const {top, bottom, left, right} =\n        dropList.element.nativeElement.getBoundingClientRect();\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n","<div class=\"header\">\n  <div class=\"title\" trans>Interface</div>\n  <div class=\"subtitle\" trans>Configure site look and behaviour.</div>\n</div>\n\n<form class=\"body\" (submit)=\"saveSettings()\" ngNativeValidate *ngIf=\"state.errors$ | async as errors\">\n  <mat-tab-group\n    color=\"accent\"\n    animationDuration=\"0\"\n    [selectedIndex]=\"selectedIndex\"\n    (selectedTabChange)=\"onTabChange($event)\"\n  >\n    <mat-tab [label]=\"'General' | trans\">\n      <div class=\"many-inputs tab-body\">\n        <div class=\"setting-toggle-container\">\n          <mat-slide-toggle\n            name=\"player.show_upload_btn\"\n            id=\"player.show_upload_btn\"\n            [(ngModel)]=\"state.client['player.show_upload_btn']\"\n            trans\n            >Upload Button</mat-slide-toggle\n          >\n          <p trans>\n            Whether upload button should be shown in left sidebar (Assuming user has permissions to\n            upload tracks).\n          </p>\n        </div>\n        <div class=\"setting-toggle-container\">\n          <mat-slide-toggle\n            name=\"uploads.autoMatch\"\n            id=\"uploads.autoMatch\"\n            [(ngModel)]=\"state.client['uploads.autoMatch']\"\n            trans\n            >Upload Metadata Matching</mat-slide-toggle\n          >\n          <p trans>\n            When uploading music, this will automatically match uploaded file to existing album and\n            artist based on file metadata, or create a new album and artist if they do not yet\n            exist.\n          </p>\n        </div>\n        <div class=\"setting-toggle-container margin-top\">\n          <mat-slide-toggle\n            name=\"player.hide_queue\"\n            id=\"player.hide_queue\"\n            [(ngModel)]=\"state.client['player.hide_queue']\"\n            trans\n            >Hide Queue</mat-slide-toggle\n          >\n          <p trans>Should player queue (right sidebar) be hidden by default.</p>\n        </div>\n        <div class=\"setting-toggle-container\">\n          <mat-slide-toggle\n            name=\"player.hide_radio_button\"\n            id=\"player.hide_radio_button\"\n            [(ngModel)]=\"state.client['player.hide_radio_button']\"\n            trans\n            >Hide Radio Button</mat-slide-toggle\n          >\n          <p trans>Hide all \"go to radio\" buttons across the site.</p>\n        </div>\n        <div class=\"setting-toggle-container\">\n          <mat-slide-toggle\n            name=\"player.enable_repost\"\n            id=\"player.enable_repost\"\n            [(ngModel)]=\"state.client['player.enable_repost']\"\n            trans\n            >Enable Reposts</mat-slide-toggle\n          >\n          <p trans>Enable reposting functionality for albums and tracks.</p>\n        </div>\n        <div class=\"many-inputs\">\n          <div class=\"setting-toggle-container\">\n            <mat-slide-toggle\n              name=\"player.hide_lyrics\"\n              id=\"player.hide_lyrics\"\n              [(ngModel)]=\"state.client['player.hide_lyrics']\"\n              trans\n              >Hide Lyrics Button</mat-slide-toggle\n            >\n            <p trans>Hide \"Lyrics\" button in player controls bar.</p>\n          </div>\n          <div class=\"setting-toggle-container\">\n            <mat-slide-toggle\n              name=\"player.hide_video_button\"\n              id=\"player.hide_video_button\"\n              [(ngModel)]=\"state.client['player.hide_video_button']\"\n              trans\n              >Hide Video Button</mat-slide-toggle\n            >\n            <p trans>Hide video toggle button in player controls bar.</p>\n          </div>\n          <div class=\"setting-toggle-container\">\n            <mat-slide-toggle\n              name=\"player.show_become_artist_btn\"\n              id=\"player.show_become_artist_btn\"\n              [(ngModel)]=\"state.client['player.show_become_artist_btn']\"\n              trans\n              >Show Become Artist Button</mat-slide-toggle\n            >\n            <p trans>Whether \"Become an artist\" button should be shown in user drop down menu.</p>\n          </div>\n        </div>\n      </div>\n    </mat-tab>\n    <mat-tab [label]=\"'Tracks' | trans\">\n      <div class=\"many-inputs tab-body\">\n        <div class=\"input-container\">\n          <label for=\"player.seekbar_type\" trans>Seekbar Type</label>\n          <select\n            name=\"player.seekbar_type\"\n            id=\"player.seekbar_type\"\n            [(ngModel)]=\"state.client['player.seekbar_type']\"\n          >\n            <option value=\"waveform\" trans>Waveform</option>\n            <option value=\"line\" trans>Simple Bar</option>\n          </select>\n          <p trans>This will only affect tracks uploaded by users.</p>\n        </div>\n        <div class=\"setting-toggle-container\">\n          <mat-slide-toggle\n            name=\"player.enable_download\"\n            id=\"player.enable_download\"\n            [(ngModel)]=\"state.client['player.enable_download']\"\n            trans\n            >Allow Track Downloading</mat-slide-toggle\n          >\n          <p trans>Only works for custom uploaded tracks.</p>\n        </div>\n        <div class=\"setting-toggle-container\">\n          <mat-slide-toggle\n            name=\"player.track_comments\"\n            id=\"player.track_comments\"\n            [(ngModel)]=\"state.client['player.track_comments']\"\n            trans\n          >\n            Track and Album Comments\n          </mat-slide-toggle>\n          <p trans>Whether comments functionality should be enabled on track and album pages.</p>\n        </div>\n      </div>\n    </mat-tab>\n    <mat-tab [label]=\"'Artist Page' | trans\">\n      <div class=\"many-inputs tab-body\">\n        <div class=\"selection-list-container\">\n          <div class=\"selection-list-title\" trans>Artist Page Tabs</div>\n          <p class=\"selection-list-description\" trans>\n            Select which tabs should appear on artist page and in which order.\n          </p>\n          <ul\n            class=\"unstyled-list selection-list\"\n            cdkDropList\n            (cdkDropListDropped)=\"artistPageListDrop($event)\"\n          >\n            <li class=\"list-item\" cdkDrag *ngFor=\"let tab of artistTabs\">\n              <div *cdkDragPreview>{{ allArtistTabs[tab.id].name }}</div>\n              <div class=\"list-item-header\" (click)=\"toggleArtistTab(tab.id)\" matRipple>\n                <button cdkDragHandle mat-icon-button class=\"drag-handle\">\n                  <mat-icon svgIcon=\"drag-handle\"></mat-icon>\n                </button>\n                <div class=\"meta\">\n                  <div class=\"list-item-name\" trans>{{ allArtistTabs[tab.id].name }}</div>\n                  <div class=\"list-item-description\" trans>\n                    {{ allArtistTabs[tab.id].description }}\n                  </div>\n                </div>\n                <mat-pseudo-checkbox\n                  [state]=\"tabIsActive(tab) ? 'checked' : 'unchecked'\"\n                ></mat-pseudo-checkbox>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <div class=\"input-container error-group\">\n          <label for=\"player.default_artist_view\" trans>Default Albums Layout</label>\n          <select\n            name=\"player.default_artist_view\"\n            id=\"player.default_artist_view\"\n            [(ngModel)]=\"state.client['player.default_artist_view']\"\n          >\n            <option value=\"list\" trans>List</option>\n            <option value=\"grid\" trans>Grid</option>\n          </select>\n          <p trans>How should albums on main artist page be displayed by default.</p>\n        </div>\n        <div class=\"setting-toggle-container\">\n          <mat-slide-toggle\n            name=\"artistPage.showFollowers\"\n            id=\"artistPage.showFollowers\"\n            [(ngModel)]=\"state.client['artistPage.showFollowers']\"\n            trans\n            >Show Followers</mat-slide-toggle\n          >\n          <p trans>Whether artist followers widget should be shown.</p>\n        </div>\n        <div class=\"setting-toggle-container\">\n          <mat-slide-toggle\n            name=\"artistPage.showDescription\"\n            id=\"artistPage.showDescription\"\n            [(ngModel)]=\"state.client['artistPage.showDescription']\"\n            trans\n            >Show Description</mat-slide-toggle\n          >\n          <p trans>Whether short artist biography be shown in main artist page header.</p>\n        </div>\n      </div>\n    </mat-tab>\n  </mat-tab-group>\n\n  <button\n    mat-raised-button\n    color=\"accent\"\n    class=\"button primary update-button\"\n    type=\"submit\"\n    [disabled]=\"state.loading$ | async\"\n    trans\n  >\n    Update\n  </button>\n  <mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"state.loading$ | async\"></mat-progress-bar>\n</form>\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {SettingsPanelComponent} from '@common/admin/settings/settings-panel.component';\nimport {ARTIST_PAGE_TABS} from '../../../web-player/artists/artist-page/artist-page-tabs';\nimport {MatTabChangeEvent} from '@angular/material/tabs';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\n\n@Component({\n    selector: 'interface',\n    templateUrl: './interface.component.html',\n    styleUrls: ['./interface.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {class: 'settings-panel'},\n})\nexport class InterfaceComponent extends SettingsPanelComponent implements OnInit {\n    private tabs = ['general', 'tracks', 'artistPage'];\n    public artistTabs: {id: number, active: boolean}[] = [];\n    public allArtistTabs = ARTIST_PAGE_TABS;\n    public selectedIndex: number;\n\n    ngOnInit() {\n        this.artistTabs = this.settings.getJson('artistPage.tabs', []);\n        this.selectedIndex = this.tabs.findIndex(t => {\n            return t === (this.route.snapshot.queryParams.tab || 'general');\n        });\n    }\n\n    public saveSettings() {\n        const settings = this.state.getModified();\n        settings.client['artistPage.tabs'] = JSON.stringify(this.artistTabs);\n        super.saveSettings(settings);\n    }\n\n    public toggleArtistTab(tabId: number) {\n        const tab = this.artistTabs.find(t => t.id === tabId);\n        tab.active = !tab.active;\n    }\n\n    public onTabChange(e: MatTabChangeEvent) {\n        this.selectedIndex = e.index;\n        this.router.navigate([], {\n            queryParams: {tab: this.tabs[this.selectedIndex]},\n            replaceUrl: true\n        });\n    }\n\n    public artistPageListDrop(event: CdkDragDrop<string[]>) {\n        moveItemInArray(this.artistTabs, event.previousIndex, event.currentIndex);\n    }\n\n    public tabIsActive(tab: {id: number}): boolean {\n        return this.artistTabs.find(t => t.id === tab.id).active;\n    }\n}\n","import {\n    ALL_PRIMITIVE_OPERATORS,\n    DatatableFilter,\n    FilterControlType, FilterOperator\n} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/datatable-filter';\nimport {\n    CreatedAtFilter,\n    UpdatedAtFilter,\n} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/timestamp-filter';\nimport {FindUserModalComponent} from '@common/auth/find-user-modal/find-user-modal.component';\n\nexport const BACKSTAGE_REQUEST_INDEX_FILTERS: DatatableFilter[] = [\n    new DatatableFilter({\n        type: FilterControlType.Select,\n        key: 'type',\n        label: 'Type',\n        defaultValue: 'become-artist',\n        description: 'Type of the request',\n        options: [\n            {\n                key: 'Become Artist',\n                value: 'become-artist',\n            },\n            {\n                key: 'Verify Artist',\n                value: 'verify-artist',\n            },\n            {\n                key: 'Claim Artist',\n                value: 'claim-artist',\n            },\n        ],\n    }),\n    new DatatableFilter({\n        type: FilterControlType.Select,\n        key: 'status',\n        label: 'Status',\n        defaultValue: 'pending',\n        description: 'Status of the request',\n        options: [\n            {\n                key: 'Pending',\n                value: 'pending',\n            },\n            {\n                key: 'Approved',\n                value: 'approved',\n            },\n            {\n                key: 'Denied',\n                value: 'denied',\n            },\n        ],\n    }),\n\n    new DatatableFilter({\n        type: FilterControlType.SelectModel,\n        key: 'user_id',\n        label: 'Requester',\n        description: 'User request was submitted by',\n        component: FindUserModalComponent,\n    }),\n\n\n    new CreatedAtFilter({\n        description: 'Date request was created',\n    }),\n    new UpdatedAtFilter({\n        description: 'Date request was last updated',\n    }),\n];\n","<div class=\"datatable-page-header\">\n  <h1 trans>Backstage Requests</h1>\n  <div class=\"header\">\n    <datatable-filters pluralName=\"requests\" [filters]=\"filters\"></datatable-filters>\n  </div>\n</div>\n\n<div class=\"datatable responsive-table\">\n  <mat-progress-bar\n    class=\"loading-bar\"\n    mode=\"indeterminate\"\n    color=\"accent\"\n    *ngIf=\"datatable.paginator && datatable.paginator.loading$ | async\"\n  ></mat-progress-bar>\n  <table class=\"material-table\">\n    <thead>\n      <tr>\n        <th table-header-checkbox></th>\n        <th table-sort-header=\"type\" trans>Type</th>\n        <th table-sort-header=\"artist_name\" trans>Requested Name</th>\n        <th trans>User</th>\n        <th trans>Artist</th>\n        <th table-sort-header=\"created_at\" trans>Requested At</th>\n        <th table-sort-header=\"status\" trans>Status</th>\n        <th></th>\n      </tr>\n      <tr *ngIf=\"datatable.selectedRows$.value.length as selectedCount\">\n        <th colspan=\"8\">\n          <div\n            class=\"bulk-actions-title\"\n            [transValues]=\"{count: selectedCount, resource: 'request(s)'}\"\n            trans\n          >\n            :count :resource selected:\n          </div>\n          <div class=\"bulk-actions\">\n            <button\n              mat-raised-button\n              color=\"warn\"\n              (click)=\"confirmRequestDeletion()\"\n              *ngIf=\"currentUser.hasPermission('requests.delete')\"\n              trans\n            >\n              Delete\n            </button>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let request of requests$ | async\">\n        <td [table-body-checkbox]=\"request.id\"></td>\n        <td data-label=\"Type\" trans>{{ request.type | titleCase }}</td>\n        <td data-label=\"Requested Name\" trans>\n          {{ request.type === 'become-artist' ? request.artist_name : '-' }}\n        </td>\n        <td data-label=\"User\">\n          <a [routerLink]=\"urls.user(request.user)\" target=\"_blank\">\n            <user-column [user]=\"request.user\"></user-column>\n          </a>\n        </td>\n        <td data-label=\"Artist\">\n          <a\n            [routerLink]=\"urls.artist(request.artist)\"\n            target=\"_blank\"\n            *ngIf=\"request.artist\"\n            class=\"column-with-image\"\n          >\n            <img [src]=\"request.artist.image_small\" alt=\"\" />\n            <div class=\"content\">\n              <div>{{ request.artist.name }}</div>\n            </div>\n          </a>\n          <span *ngIf=\"!request.artist\">-</span>\n        </td>\n        <td data-label=\"Requested At\">{{ request.created_at | formattedDate }}</td>\n        <td data-label=\"Status\" class=\"status-col\" trans>{{ request.status }}</td>\n        <td class=\"edit-column\">\n          <a\n            mat-flat-button\n            color=\"accent\"\n            [routerLink]=\"['/admin/backstage-requests/', request.id]\"\n            trans\n            >View</a\n          >\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <no-results-message svgImage=\"accept-request.svg\" *ngIf=\"datatable.paginator.noResults$ | async\">\n    <span primary-text>No requests have been submitted yet</span>\n  </no-results-message>\n  <datatable-footer></datatable-footer>\n</div>\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {DatatableService} from '@common/datatable/datatable.service';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {Observable} from 'rxjs';\nimport {BackstageRequest} from '../../models/backstage-request';\nimport {BackstagRequestService} from '../../backstage/requests/backstag-request.service';\nimport {WebPlayerUrls} from '../../web-player/web-player-urls.service';\nimport {BACKSTAGE_REQUEST_INDEX_FILTERS} from './backstage-request-index-filters';\n\n@Component({\n    selector: 'backstage-requests-index',\n    templateUrl: './backstage-requests-index.component.html',\n    styleUrls: ['./backstage-requests-index.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [DatatableService],\n})\nexport class BackstageRequestsIndexComponent implements OnInit {\n    requests$ = this.datatable.data$ as Observable<BackstageRequest[]>;\n    filters = BACKSTAGE_REQUEST_INDEX_FILTERS;\n\n    constructor(\n        public datatable: DatatableService<BackstageRequest>,\n        public currentUser: CurrentUser,\n        private backstage: BackstagRequestService,\n        public urls: WebPlayerUrls\n    ) {}\n\n    ngOnInit(): void {\n        this.datatable.init({\n            uri: 'backstage-request',\n        });\n    }\n\n    public confirmRequestDeletion() {\n        this.datatable.confirmResourceDeletion('requests').subscribe(() => {\n            const ids = this.datatable.selectedRows$.value;\n            this.backstage.deleteRequests(ids).subscribe(() => {\n                this.datatable.reset();\n            });\n        });\n    }\n}\n","<div class=\"modal-header\">\n    <h2 class=\"modal-title\" mat-dialog-title>\n        <span *ngIf=\"data.type === 'approve'\" trans>Approve Request</span>\n        <span *ngIf=\"data.type === 'deny'\" trans>Deny Request</span>\n    </h2>\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form (ngSubmit)=\"confirm()\" [formGroup]=\"form\">\n    <div class=\"mat-dialog-contents\" mat-dialog-content>\n\n        <ng-container *ngIf=\"data.type ==='approve'\">\n            <p trans>Are you sure you want to approve this request?</p>\n            <p class=\"bold\" *ngIf=\"data.request.type === 'become-artist'\" [transValues]=\"{user: data.request.user.display_name}\" trans>This will create a new artist profile and assign it to :user, as well as give them artist role on the site.</p>\n            <p class=\"bold\" *ngIf=\"data.request.type === 'verify-artist'\" [transValues]=\"{artist: data.request.artist.name}\" trans>This will mark \":artist\" as verified across the site.</p>\n            <p class=\"bold\" *ngIf=\"data.request.type === 'claim-artist'\" [transValues]=\"{artist: data.request.artist.name, user: data.request.user.display_name}\" trans>This will allow :user to edit :artist details and upload new music as them.</p>\n            <mat-checkbox *ngIf=\"data.request.type === 'become-artist'\" formControlName=\"verifyArtist\">Also mark this artist as verified</mat-checkbox>\n        </ng-container>\n\n        <ng-container *ngIf=\"data.type ==='deny'\">\n            <p trans>Are you sure you want to deny this request?</p>\n            <p class=\"bold\" trans>This will mark request as denied and notify the requester.</p>\n        </ng-container>\n    </div>\n\n    <div class=\"input-container\">\n        <label for=\"backstage-request-notes\" trans>Notes (optional)</label>\n        <textarea formControlName=\"notes\" id=\"backstage-request-notes\" rows=\"10\" placeholder=\"Add any extra notes that should be sent to user via notification email\" trans-placeholder></textarea>\n    </div>\n\n    <div class=\"buttons right mat-dialog-actions\" mat-dialog-actions>\n        <button (click)=\"close()\" type=\"button\" mat-button class=\"button cancel cancel-button\" trans>Cancel</button>\n        <button type=\"submit\" mat-raised-button color=\"accent\" class=\"button primary submit-button\" cdkFocusInitial>\n            <span *ngIf=\"data.type === 'approve'\" trans>Approve</span>\n            <span *ngIf=\"data.type === 'deny'\" trans>Deny</span>\n        </button>\n    </div>\n</form>\n","import {ChangeDetectionStrategy, Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {BackstageRequest} from '../../../../models/backstage-request';\nimport {BackstageRequestType} from '../../../../backstage/requests/backstage-request-type';\n\nexport interface ConfirmRequestApprovalModalData {\n    request: BackstageRequest;\n    type: 'approve'|'deny';\n}\n\nexport interface ConfirmRequestApprovalResult {\n    confirmed: boolean;\n    verifyArtist?: boolean;\n    notes?: string;\n}\n\n@Component({\n    selector: 'confirm-request-approval-modal',\n    templateUrl: './confirm-request-handled-modal.component.html',\n    styleUrls: ['./confirm-request-handled-modal.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfirmRequestHandledModalComponent {\n    public form = new FormGroup({\n        verifyArtist: new FormControl(this.data.request.type === BackstageRequestType.verifyArtist),\n        notes: new FormControl(),\n    });\n\n    constructor(\n        private dialogRef: MatDialogRef<ConfirmRequestHandledModalComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: ConfirmRequestApprovalModalData,\n    ) {}\n\n    public confirm() {\n        this.dialogRef.close({\n            confirmed: true,\n            ...this.form.value,\n        } as ConfirmRequestApprovalResult);\n    }\n\n    public close() {\n        this.dialogRef.close({\n            confirmed: false,\n        } as ConfirmRequestApprovalResult);\n    }\n}\n","import {ChangeDetectionStrategy, Component, HostBinding, Input} from '@angular/core';\nimport {ThemeService} from '../../theme.service';\n\n@Component({\n    selector: 'skeleton',\n    templateUrl: './skeleton.component.html',\n    styleUrls: ['./skeleton.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        'aria-busy': 'true',\n        'aria-valuemin': '0',\n        'aria-valuemax': '100',\n        'aria-valuetext': 'Loading...',\n        'role': 'progressbar',\n    }\n})\nexport class SkeletonComponent {\n    @Input() animation: 'pulsate' | 'wave' = 'wave';\n    @Input() variant: 'avatar' | 'text' | 'rect' | 'icon' = 'text';\n    @HostBinding('class.dark') dark = this.theme.isDarkMode();\n\n    @HostBinding('class.pulsate') get pulsate() {\n        return this.animation === 'pulsate';\n    }\n\n    @HostBinding('class.wave') get wave() {\n        return this.animation === 'wave';\n    }\n\n    @HostBinding('class.avatar') get avatar() {\n        return this.variant === 'avatar';\n    }\n\n    @HostBinding('class.text') get text() {\n        return this.variant === 'text';\n    }\n\n    @HostBinding('class.rect') get rect() {\n        return this.variant === 'rect';\n    }\n\n    @HostBinding('class.icon') get icon() {\n        return this.variant === 'icon';\n    }\n\n    constructor(private theme: ThemeService) {}\n}\n","<ng-container *ngIf=\"request$ | async as request\">\n    <div class=\"action-row\">\n        <a routerLink=\"/admin/backstage-requests\" type=\"button\" class=\"go-back-btn\" mat-raised-button [disabled]=\"loading$ | async\" trans>Go Back</a>\n        <ng-container *ngIf=\"request.status === 'pending'\">\n            <button type=\"button\" class=\"approve-btn\" mat-raised-button color=\"accent\" (click)=\"handleRequest('approve')\" [disabled]=\"loading$ | async\" trans>Approve Request</button>\n            <button type=\"button\" class=\"decline-btn\" mat-raised-button (click)=\"handleRequest('deny')\" [disabled]=\"loading$ | async\" trans>Deny Request</button>\n        </ng-container>\n        <button type=\"button\" mat-raised-button [matTooltip]=\"'Delete' | trans\" (click)=\"deleteRequest()\" [disabled]=\"loading$ | async\" trans>\n            <mat-icon svgIcon=\"delete\"></mat-icon>\n        </button>\n    </div>\n    <div class=\"panel-container\">\n        <h2 trans>Request Details</h2>\n        <div class=\"panel material-panel\">\n            <div class=\"panel-row\">\n                <div class=\"panel-row-name\" trans>Image</div>\n                <div class=\"panel-row-value\">\n                    <img class=\"main-image\" [src]=\"request.data.image || request.artist?.image_small\" alt=\"\" *ngIf=\"request.id\">\n                    <skeleton class=\"main-image\" variant=\"avatar\" *ngIf=\"!request.id\"></skeleton>\n                </div>\n            </div>\n            <div class=\"panel-row\">\n                <div class=\"panel-row-name\" trans>Type</div>\n                <div class=\"panel-row-value\">\n                    <span *ngIf=\"request.id\">{{request.type | titleCase}}</span>\n                    <skeleton *ngIf=\"!request.id\"></skeleton>\n                </div>\n            </div>\n            <div class=\"panel-row\">\n                <div class=\"panel-row-name\" trans>Requester</div>\n                <div class=\"panel-row-value\">\n                    <a *ngIf=\"request.id\" class=\"name-with-image\" [routerLink]=\"urls.user(request.user)\" target=\"_blank\">\n                        <img [src]=\"request.user.avatar\" alt=\"\">\n                        <div>{{request.user.display_name}}</div>\n                    </a>\n                    <skeleton *ngIf=\"!request.id\"></skeleton>\n                </div>\n            </div>\n            <div class=\"panel-row\" *ngIf=\"request.artist\">\n                <div class=\"panel-row-name\" trans>Artist</div>\n                <div class=\"panel-row-value\">\n                    <a *ngIf=\"request.id\" class=\"name-with-image\" [routerLink]=\"urls.artist(request.artist)\" target=\"_blank\">\n                        <img [src]=\"request.artist.image_small\" alt=\"\">\n                        <div>{{request.artist.name}}</div>\n                    </a>\n                    <skeleton *ngIf=\"!request.id\"></skeleton>\n                </div>\n            </div>\n            <div class=\"panel-row\">\n                <div class=\"panel-row-name\" trans>Requested artist name</div>\n                <div class=\"panel-row-value\">\n                    <span *ngIf=\"request.id\">{{request.type === 'become-artist' ? request.artist_name : '-'}}</span>\n                    <skeleton *ngIf=\"!request.id\"></skeleton>\n                </div>\n            </div>\n            <div class=\"panel-row\">\n                <div class=\"panel-row-name\" trans>Requested role</div>\n                <div class=\"panel-row-value capitalize\">\n                    <span *ngIf=\"request.id\">{{request.data.role}}</span>\n                    <skeleton *ngIf=\"!request.id\"></skeleton>\n                </div>\n            </div>\n            <div class=\"panel-row\">\n                <div class=\"panel-row-name\" trans>First name</div>\n                <div class=\"panel-row-value capitalize\">\n                    <span *ngIf=\"request.id\">{{request.data.first_name}}</span>\n                    <skeleton *ngIf=\"!request.id\"></skeleton>\n                </div>\n            </div>\n            <div class=\"panel-row\">\n                <div class=\"panel-row-name capitalize\" trans>Last name</div>\n                <div class=\"panel-row-value\">\n                    <span *ngIf=\"request.id\">{{request.data.last_name}}</span>\n                    <skeleton *ngIf=\"!request.id\"></skeleton>\n                </div>\n            </div>\n            <div class=\"panel-row\">\n                <div class=\"panel-row-name\" trans>Company</div>\n                <div class=\"panel-row-value\">\n                    <span *ngIf=\"request.id\">{{request.data.company || '-'}}</span>\n                    <skeleton *ngIf=\"!request.id\"></skeleton>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"panel-container\">\n        <h2 trans>Attached Verifications</h2>\n        <div class=\"material-panel\">\n            <div class=\"panel-row\" *ngFor=\"let profile of request.data?.socialProfiles | keyvalue\">\n                <div class=\"panel-row-name\" trans>{{profile.key}}</div>\n                <div class=\"panel-row-value\">\n                    <div class=\"verification\">\n                        <img class=\"verification-img\" [src]=\"profile.value.avatar\" alt=\"\">\n                        <div class=\"verification-details\">\n                            <div class=\"verification-value\">{{profile.value.id}}</div>\n                            <div class=\"verification-value\">{{profile.value.name}}</div>\n                            <div class=\"verification-value\">{{profile.value.email}}</div>\n                            <a [href]=\"profile.value.profileUrl\" target=\"_blank\" class=\"verification-value verification-url\">{{profile.value.profileUrl}}</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"panel-row\" *ngIf=\"request.data?.passportScanEntry\">\n                <div class=\"panel-row-name\" trans>Passport Scan</div>\n                <div class=\"panel-row-value\">\n                    <div class=\"verification\">\n                        <img class=\"verification-img passport-scan-img\" [src]=\"request.data.passportScanEntry.url\" alt=\"\" (click)=\"openPassportScanModal()\">\n                        <div class=\"verification-details\">\n                            <div class=\"verification-value\">{{request.data.passportScanEntry.name}}</div>\n                            <div class=\"verification-value\">{{request.data.passportScanEntry.file_size | formattedFileSize}}</div>\n                            <div class=\"verification-value\">{{request.data.passportScanEntry.created_at | formattedDate}}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <no-results-message *ngIf=\"request.id && !request.data?.socialProfiles && !request.data?.passportScanEntry\" svgImage=\"accept-request.svg\">\n                <span primary-text>This request has no attachments</span>\n            </no-results-message>\n            <div class=\"panel-row\" *ngIf=\"!request.id\">\n                <div class=\"panel-row-name\">Facebook</div>\n                <div class=\"panel-row-value\">\n                    <div class=\"verification\">\n                        <skeleton class=\"verification-img\" variant=\"avatar\"></skeleton>\n                        <div class=\"verification-details\">\n                            <div class=\"verification-value\"><skeleton></skeleton></div>\n                            <div class=\"verification-value\"><skeleton></skeleton></div>\n                            <div class=\"verification-value\"><skeleton></skeleton></div>\n                            <div class=\"verification-value verification-url\"><skeleton></skeleton></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-container>\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {BackstagRequestService} from '../../../backstage/requests/backstag-request.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {BehaviorSubject} from 'rxjs';\nimport {OverlayPanel} from '@common/core/ui/overlay-panel/overlay-panel.service';\nimport {ImageGalleryOverlayComponent} from '@common/shared/image-gallery-overlay/image-gallery-overlay.component';\nimport {ConfirmModalComponent} from '@common/core/ui/confirm-modal/confirm-modal.component';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {finalize} from 'rxjs/operators';\nimport {BackstageRequest} from '../../../models/backstage-request';\nimport {\n    ConfirmRequestHandledModalComponent,\n    ConfirmRequestApprovalResult,\n} from './confirm-request-handled-modal/confirm-request-handled-modal.component';\nimport {WebPlayerUrls} from '../../../web-player/web-player-urls.service';\n\n@Component({\n    selector: 'backstage-request-viewer',\n    templateUrl: './backstage-request-viewer.component.html',\n    styleUrls: ['./backstage-request-viewer.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BackstageRequestViewerComponent implements OnInit {\n    public request$ = new BehaviorSubject<Partial<BackstageRequest>>({});\n    public loading$ = new BehaviorSubject<boolean>(false);\n\n    constructor(\n        private backstage: BackstagRequestService,\n        private route: ActivatedRoute,\n        private overlay: OverlayPanel,\n        private modal: Modal,\n        private toast: Toast,\n        private router: Router,\n        public urls: WebPlayerUrls\n    ) {}\n\n    ngOnInit(): void {\n        this.route.params.subscribe(params => {\n            this.backstage.getRequest(params.requestId).subscribe(response => {\n                this.request$.next(response.request);\n            });\n        });\n    }\n\n    public openPassportScanModal() {\n        this.overlay.open(ImageGalleryOverlayComponent, {\n            origin: 'global',\n            position: 'center',\n            panelClass: 'image-gallery-overlay-container',\n            backdropClass: 'image-gallery-overlay-backdrop',\n            hasBackdrop: true,\n            data: {\n                images: [this.request$.value.data.passportScanEntry],\n            },\n        });\n    }\n\n    public handleRequest(type: 'approve' | 'deny') {\n        this.modal\n            .show(ConfirmRequestHandledModalComponent, {\n                request: this.request$.value,\n                type,\n            })\n            .afterClosed()\n            .subscribe((r: ConfirmRequestApprovalResult) => {\n                if (!r.confirmed) return;\n                this.loading$.next(true);\n                const request =\n                    type === 'approve'\n                        ? this.backstage.approveRequest(\n                              this.request$.value.id,\n                              {\n                                  markArtistAsVerified: r.verifyArtist,\n                                  notes: r.notes,\n                              }\n                          )\n                        : this.backstage.denyRequest(this.request$.value.id, {\n                              notes: r.notes,\n                          });\n                request\n                    .pipe(finalize(() => this.loading$.next(false)))\n                    .subscribe(() => {\n                        this.router.navigate(['/admin/backstage-requests']);\n                        this.toast.open(\n                            'Request ' +\n                                (type === 'approve' ? 'approved' : 'denied')\n                        );\n                    });\n            });\n    }\n\n    public deleteRequest() {\n        this.modal\n            .show(ConfirmModalComponent, {\n                title: 'Approve Request',\n                body: 'Are you sure you want to delete this request?',\n                ok: 'Delete',\n            })\n            .afterClosed()\n            .subscribe(confirmed => {\n                if (!confirmed) return;\n                this.loading$.next(true);\n                this.backstage\n                    .deleteRequests([this.request$.value.id])\n                    .pipe(finalize(() => this.loading$.next(false)))\n                    .subscribe(() => {\n                        this.toast.open('Request has been deleted');\n                        this.router.navigate(['/admin/backstage-requests']);\n                    });\n            });\n    }\n}\n","import {\n    DatatableFilter,\n    FilterControlType,\n} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/datatable-filter';\nimport {\n    CreatedAtFilter,\n    UpdatedAtFilter,\n} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/timestamp-filter';\nimport {FindUserModalComponent} from '@common/auth/find-user-modal/find-user-modal.component';\n\nexport const COMMENT_INDEX_FILTERS: DatatableFilter[] = [\n    new DatatableFilter({\n        type: FilterControlType.Select,\n        key: 'deleted',\n        label: 'Type',\n        defaultValue: false,\n        description: 'Whether comment is active or deleted.',\n        options: [\n            {\n                key: 'Active',\n                value: false,\n            },\n            {\n                key: 'Deleted',\n                value: true,\n            },\n        ],\n    }),\n    new DatatableFilter({\n        type: FilterControlType.SelectModel,\n        key: 'user_id',\n        label: 'User',\n        description: 'User comment was created by',\n        component: FindUserModalComponent,\n    }),\n\n    new CreatedAtFilter({\n        description: 'Date comment was created',\n    }),\n    new UpdatedAtFilter({\n        description: 'Date comment was last updated',\n    }),\n];\n","<div class=\"datatable-page-header\">\n  <h1 trans>Comments</h1>\n  <div class=\"header\">\n    <datatable-filters pluralName=\"comments\" [filters]=\"filters\"></datatable-filters>\n  </div>\n</div>\n\n<div class=\"datatable responsive-table\">\n  <mat-progress-bar\n    class=\"loading-bar\"\n    mode=\"indeterminate\"\n    color=\"accent\"\n    *ngIf=\"datatable.paginator && datatable.paginator.loading$ | async\"\n  ></mat-progress-bar>\n  <table class=\"material-table\">\n    <thead>\n      <tr>\n        <th table-header-checkbox></th>\n        <th trans>Content</th>\n        <th trans>Commentable</th>\n        <th table-sort-header=\"user_id\" trans>User</th>\n        <th table-sort-header trans>Created At</th>\n        <th></th>\n      </tr>\n      <tr *ngIf=\"datatable.selectedRows$.value.length as selectedCount\">\n        <th colspan=\"6\">\n          <div\n            class=\"bulk-actions-title\"\n            [transValues]=\"{count: selectedCount, resource: 'comment(s)'}\"\n            trans\n          >\n            :count :resource selected:\n          </div>\n          <div class=\"bulk-actions\">\n            <button\n              mat-raised-button\n              color=\"warn\"\n              (click)=\"maybeDeleteComments()\"\n              *ngIf=\"currentUser.hasPermission('comments.delete')\"\n              trans\n            >\n              Delete\n            </button>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let comment of comments$ | async\">\n        <td [table-body-checkbox]=\"comment.id\"></td>\n        <td data-label=\"Content\">{{ comment.content }}</td>\n        <td>\n          <div class=\"column-with-image\">\n            <media-image [media]=\"comment.commentable.image\" default=\"album\"></media-image>\n            <div>\n              <div>{{ comment.commentable.name }}</div>\n              <div class=\"secondary\">{{ comment.commentable.model_type }}</div>\n            </div>\n          </div>\n        </td>\n        <td>\n          <user-column [user]=\"comment.user\"></user-column>\n        </td>\n        <td data-label=\"Created At\">{{ comment.created_at | formattedDate }}</td>\n        <td class=\"edit-column\">\n          <button\n            mat-button\n            color=\"warn\"\n            *ngIf=\"!comment.deleted\"\n            (click)=\"maybeDeleteComments(comment)\"\n            trans\n          >\n            Delete\n          </button>\n          <button\n            mat-button\n            color=\"accent\"\n            *ngIf=\"comment.deleted\"\n            (click)=\"restoreComment(comment)\"\n            trans\n          >\n            Restore\n          </button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <no-results-message\n    svgImage=\"public-discussion.svg\"\n    *ngIf=\"datatable.paginator.noResults$ | async\"\n  >\n    <span primary-text trans>No comments have been created yet</span>\n  </no-results-message>\n  <datatable-footer></datatable-footer>\n</div>\n","import {ChangeDetectionStrategy, Component, OnDestroy, OnInit} from '@angular/core';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {Settings} from '@common/core/config/settings.service';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {HttpErrors} from '@common/core/http/errors/http-errors.enum';\nimport {Role} from '@common/core/types/models/Role';\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\nimport {Observable} from 'rxjs';\nimport {CommentsService} from '@common/shared/comments/comments.service';\nimport {DatatableService} from '@common/datatable/datatable.service';\nimport {Comment} from '@common/shared/comments/comment';\nimport {COMMENT_INDEX_FILTERS} from './comment-index-filters';\n\n@Component({\n    selector: 'user-index',\n    templateUrl: './comment-index.component.html',\n    styleUrls: ['./comment-index.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [DatatableService],\n})\nexport class CommentIndexComponent implements OnInit, OnDestroy {\n    comments$ = this.datatable.data$ as Observable<Comment[]>;\n    filters = COMMENT_INDEX_FILTERS;\n\n    constructor(\n        private comments: CommentsService,\n        public currentUser: CurrentUser,\n        public settings: Settings,\n        private toast: Toast,\n        public datatable: DatatableService<Comment>,\n    ) {}\n\n    ngOnInit() {\n        this.datatable.init({\n            uri: CommentsService.BASE_URI,\n        });\n    }\n\n    ngOnDestroy() {\n        this.datatable.destroy();\n    }\n\n    public makeRolesList(roles: Role[]): string {\n        return roles.slice(0, 3).map(role => role.name).join(', ');\n    }\n\n    public maybeDeleteComments(comment?: Comment) {\n        this.datatable.confirmResourceDeletion('comments')\n            .subscribe(() => {\n                const ids = comment ? [comment.id] : this.datatable.selectedRows$.value;\n                this.comments.delete(ids).subscribe(() => {\n                    this.datatable.reset();\n                    this.toast.open('Comments deleted');\n                }, (errResponse: BackendErrorResponse) => {\n                    this.toast.open(errResponse.message || HttpErrors.Default);\n                });\n            });\n    }\n\n    public restoreComment(comment: Comment) {\n        this.comments.restore([comment.id]).subscribe(() => {\n            this.datatable.reset();\n            this.toast.open('Comment restored');\n        });\n    }\n}\n","<div class=\"header\">\n  <div class=\"title\" trans>Search</div>\n  <div class=\"subtitle\" trans>\n    Configure search method used on the site as well as related 3rd party integrations.\n  </div>\n</div>\n\n<form class=\"body many-inputs\" (submit)=\"saveSettings()\" ngNativeValidate>\n  <div class=\"error-group many-inputs no-border-top\" id=\"search_group\">\n    <div class=\"input-container\">\n      <label for=\"scout.driver\" trans>Search Method</label>\n      <select\n        name=\"scout.driver\"\n        id=\"scout.driver\"\n        [(ngModel)]=\"state.server['scout_driver']\"\n        (ngModelChange)=\"clearErrors()\"\n      >\n        <option value=\"mysql\">Mysql</option>\n        <option value=\"meilisearch\">Meilisearch</option>\n        <option value=\"tntsearch\">TNTSearch</option>\n        <option value=\"Matchish\\ScoutElasticSearch\\Engines\\ElasticSearchEngine\">\n          Elasticsearch\n        </option>\n        <option value=\"algolia\">Algolia</option>\n      </select>\n      <p trans>Which method should be used for search related functionality across the site.</p>\n    </div>\n\n    <div class=\"input-container\" *ngIf=\"state.server['scout_driver'] === 'mysql'\">\n      <label for=\"mysql-mode\" trans>Mysql Mode</label>\n      <select\n        name=\"mysql-mode\"\n        id=\"mysql-mode\"\n        [(ngModel)]=\"state.server['scout_mysql_mode']\"\n        (ngModelChange)=\"clearErrors()\"\n      >\n        <option value=\"basic\">Basic</option>\n        <option value=\"extended\">Extended</option>\n        <option value=\"fulltext\">Fulltext</option>\n      </select>\n    </div>\n\n    <!-- ALGOLIA-->\n    <ng-container *ngIf=\"state.server['scout_driver'] === 'algolia'\">\n      <div class=\"input-container\">\n        <label for=\"scout.algolia_app_id\" trans>Algolia App ID</label>\n        <input\n          name=\"scout.algolia_app_id\"\n          id=\"scout.algolia_app_id\"\n          [(ngModel)]=\"state.server['algolia_app_id']\"\n          required\n        />\n      </div>\n\n      <div class=\"input-container\">\n        <label for=\"scout.algolia_secret\" trans>Algolia Secret</label>\n        <input\n          name=\"scout.algolia_secret\"\n          id=\"scout.algolia_secret\"\n          [(ngModel)]=\"state.server['algolia_secret']\"\n          required\n        />\n      </div>\n    </ng-container>\n    <p\n      class=\"error\"\n      *ngIf=\"(state.errors$ | async).search_group as errorMessage\"\n      [innerHTML]=\"errorMessage\"\n    ></p>\n  </div>\n\n  <div\n    class=\"widget widget-info widget-important\"\n    *ngIf=\"state.server['scout_driver'] === 'meilisearch'\"\n  >\n    <div class=\"title\" trans>Important!</div>\n    <p trans>\n      <a href=\"https://www.meilisearch.com\" target=\"_blank\">\"Meilisearch\"</a> needs to be installed\n      and running for this method to work.\n    </p>\n  </div>\n\n  <div\n    class=\"widget widget-info widget-important\"\n    *ngIf=\"state.server['scout_driver'] === 'elastic'\"\n  >\n    <div class=\"title\" trans>Important!</div>\n    <p trans>\n      <a href=\"https://www.elastic.co/elasticsearch\" target=\"_blank\">\"Elasticsearch\"</a> needs to be\n      installed and running for this method to work.\n    </p>\n  </div>\n\n  <div class=\"widget widget-flat\">\n    <div class=\"title\" trans>Import Records</div>\n    <p trans>\n      Whenever a new search method is enabled, records that already exist in database need to be\n      imported into the index. All records created after search method is enabled will be imported\n      automatically.\n    </p>\n    <p>\n      Depending on number of records in database, importing could take some time. Don't close this\n      window while it is in progress.\n    </p>\n    <div class=\"import-flex\">\n      <div class=\"input-container\">\n        <label for=\"searchable-model\" class=\"hidden\" trans>Record Type</label>\n        <select id=\"searchable-model\" [formControl]=\"searchableModelControl\">\n          <option [ngValue]=\"null\" trans>All</option>\n          <option [ngValue]=\"value.model\" *ngFor=\"let value of models$ | async\" trans>\n            {{ value.name }}\n          </option>\n        </select>\n      </div>\n      <button\n        type=\"button\"\n        mat-stroked-button\n        color=\"accent\"\n        (click)=\"importRecords()\"\n        [disabled]=\"state.loading$ | async\"\n        trans\n      >\n        Import Now\n      </button>\n    </div>\n  </div>\n\n  <button\n    mat-raised-button\n    color=\"accent\"\n    class=\"update-button\"\n    type=\"submit\"\n    [disabled]=\"state.loading$ | async\"\n    trans\n  >\n    Update\n  </button>\n  <mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"state.loading$ | async\"></mat-progress-bar>\n</form>\n","import {Component, OnInit} from '@angular/core';\nimport {SettingsPanelComponent} from '@common/admin/settings/settings-panel.component';\nimport {finalize} from 'rxjs/operators';\nimport {BehaviorSubject} from 'rxjs';\nimport {FormControl} from '@angular/forms';\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\nimport {scrollInvalidInputIntoView} from '@common/core/utils/scroll-invalid-input-into-view';\n\ninterface SearchableModel {\n    model: string;\n    name: string;\n}\n\n@Component({\n    selector: 'search-settings',\n    templateUrl: './search-settings.component.html',\n    styleUrls: ['./search-settings.component.scss'],\n    host: {class: 'settings-panel'},\n})\nexport class SearchSettingsComponent extends SettingsPanelComponent implements OnInit {\n    public models$ = new BehaviorSubject<SearchableModel[]>([]);\n    public searchableModelControl = new FormControl(null);\n\n    public importRecords() {\n        this.state.loading$.next(true);\n        this.http.post('admin/search/import', {\n            model: this.searchableModelControl.value,\n            driver: this.state.server.scout_driver\n        }).pipe(finalize(() => this.state.loading$.next(false)))\n        .subscribe(() => {\n            this.toast.open('Records imported');\n        }, (err: BackendErrorResponse) => {\n            this.state.errors$.next({search_group: 'Could not import records: ' + err.message});\n            scrollInvalidInputIntoView(this.state.errors$.value);\n        });\n    }\n\n    ngOnInit() {\n        this.http.get<{models: SearchableModel[]}>('admin/search/models').subscribe(response => {\n            this.models$.next(response.models);\n        });\n    }\n}\n","import {Routes} from '@angular/router';\nimport {ArtistIndexComponent} from './artists/artist-index.component';\nimport {AlbumIndexComponent} from './albums/album-index/album-index.component';\nimport {GenresComponent} from './genres/genres.component';\nimport {LyricsPageComponent} from './lyrics-page/lyrics-page.component';\nimport {PlaylistsPageComponent} from './playlists-page/playlists-page.component';\nimport {ProvidersSettingsComponent} from './settings/providers/providers-settings.component';\nimport {PlayerSettingsComponent} from './settings/player/player-settings.component';\nimport {TrackIndexComponent} from './tracks/track-index/track-index.component';\nimport {ChannelIndexComponent} from './channels/channel-index/channel-index.component';\nimport {CrupdateChannelPageComponent} from './channels/crupdate-channel-page/crupdate-channel-page.component';\nimport {ChannelResolverService} from './channels/crupdate-channel-page/channel-resolver.service';\nimport {InterfaceComponent} from './settings/interface/interface.component';\nimport {BackstageRequestsIndexComponent} from './backstage-requests-index/backstage-requests-index.component';\nimport {BackstageRequestViewerComponent} from './backstage-requests-index/backstage-request-viewer/backstage-request-viewer.component';\nimport {CommentIndexComponent} from './comments/comment-index.component';\nimport {SearchSettingsComponent} from '@common/admin/settings/search/search-settings.component';\n\nexport const APP_ADMIN_ROUTES: Routes = [\n    {\n        path: 'backstage',\n        loadChildren: () =>\n            import('src/app/backstage/backstage.module').then(\n                m => m.BackstageModule\n            ),\n    },\n\n    // CHANNELS\n    {\n        path: 'channels',\n        component: ChannelIndexComponent,\n        data: {permissions: ['channels.view']},\n    },\n    {\n        path: 'channels/new',\n        component: CrupdateChannelPageComponent,\n        data: {permissions: ['channels.create']},\n    },\n    {\n        path: 'channels/:id',\n        component: CrupdateChannelPageComponent,\n        resolve: {api: ChannelResolverService},\n        data: {\n            permissions: ['channels.update'],\n            failRedirectUri: '/admin/channels',\n            forAdmin: true,\n        },\n    },\n\n    {\n        path: 'artists',\n        component: ArtistIndexComponent,\n    },\n    {\n        path: 'albums',\n        component: AlbumIndexComponent,\n        data: {permissions: ['albums.view']},\n    },\n    {\n        path: 'tracks',\n        component: TrackIndexComponent,\n        data: {permissions: ['tracks.view']},\n    },\n    {\n        path: 'genres',\n        component: GenresComponent,\n        data: {permissions: ['genres.view']},\n    },\n    {\n        path: 'lyrics',\n        component: LyricsPageComponent,\n        data: {permissions: ['lyrics.view']},\n    },\n    {\n        path: 'playlists',\n        component: PlaylistsPageComponent,\n        data: {permissions: ['playlists.view']},\n    },\n\n    // REQUESTS\n    {\n        path: 'backstage-requests',\n        component: BackstageRequestsIndexComponent,\n    },\n    {\n        path: 'backstage-requests/:requestId',\n        component: BackstageRequestViewerComponent,\n    },\n\n    // COMMENTS\n    {\n        path: 'comments',\n        component: CommentIndexComponent,\n    },\n];\n\nexport const APP_SETTING_ROUTES: Routes = [\n    {path: 'providers', component: ProvidersSettingsComponent},\n    {path: 'player', component: PlayerSettingsComponent},\n    {path: 'interface', component: InterfaceComponent},\n    {path: 'search', component: SearchSettingsComponent},\n];\n\nexport const APP_ANALYTIC_ROUTES: Routes = [\n    //\n];\n","<ng-template #navItems>\n    <a class=\"nav-item\" mat-menu-item routerLink=\"general\" routerLinkActive=\"selected\"><div class=\"name\" trans>General</div></a>\n    <a class=\"nav-item\" mat-menu-item *ngFor=\"let route of appRoutes()\" [routerLink]=\"route.path\" routerLinkActive=\"selected\"><div class=\"name\" trans>{{route.path.replace('-', ' ')}}</div></a>\n    <a class=\"nav-item\" mat-menu-item routerLink=\"billing\" *ngIf=\"settings.get('billing.integrated')\" routerLinkActive=\"selected\"><div class=\"name\" trans>Billing</div></a>\n    <a class=\"nav-item\" mat-menu-item routerLink=\"localization\" routerLinkActive=\"selected\"><div class=\"name\" trans>Localization</div></a>\n    <a class=\"nav-item\" mat-menu-item routerLink=\"authentication\" routerLinkActive=\"selected\"><div class=\"name\" trans>Authentication</div></a>\n    <a class=\"nav-item\" mat-menu-item routerLink=\"uploading\" routerLinkActive=\"selected\"><div class=\"name\" trans>Uploading</div></a>\n    <a class=\"nav-item\" mat-menu-item routerLink=\"mail\" routerLinkActive=\"selected\"><div class=\"name\" trans>Mail</div></a>\n    <a class=\"nav-item\" mat-menu-item routerLink=\"cache\" routerLinkActive=\"selected\"><div class=\"name\" trans>Cache</div></a>\n    <a class=\"nav-item\" mat-menu-item routerLink=\"analytics\" routerLinkActive=\"selected\"><div class=\"name\" trans>Analytics</div></a>\n    <a class=\"nav-item\" mat-menu-item routerLink=\"logging\" routerLinkActive=\"selected\"><div class=\"name\" trans>Logging</div></a>\n    <a class=\"nav-item\" mat-menu-item routerLink=\"queue\" routerLinkActive=\"selected\"><div class=\"name\" trans>Queue</div></a>\n    <a class=\"nav-item\" mat-menu-item routerLink=\"recaptcha\" routerLinkActive=\"selected\"><div class=\"name\" trans>Recaptcha</div></a>\n    <a class=\"nav-item\" mat-menu-item routerLink=\"gdpr\" routerLinkActive=\"selected\"><div class=\"name\" trans>GDPR</div></a>\n    <a class=\"nav-item\" mat-menu-item routerLink=\"/admin/appearance\" [queryParams]=\"{panel: 'menus'}\" routerLinkActive=\"selected\"><div class=\"name\" trans>Menus</div></a>\n    <a class=\"nav-item\" mat-menu-item routerLink=\"/admin/appearance\" [queryParams]=\"{panel: 'seo-settings'}\" routerLinkActive=\"selected\"><div class=\"name\" trans>Seo</div></a>\n    <a class=\"nav-item\" mat-menu-item routerLink=\"/admin/appearance\" [queryParams]=\"{panel: 'themes'}\" routerLinkActive=\"selected\"><div class=\"name\" trans>Themes</div></a>\n</ng-template>\n\n<ng-container *ngIf=\"breakpoints.isMobile$ | async; else desktopNav\">\n    <button [matMenuTriggerFor]=\"navMenu\" class=\"no-style admin-pill-nav-mobile-selector\">\n        <span class=\"name\" trans>{{activePanel$ | async}}</span>\n        <mat-icon svgIcon=\"keyboard-arrow-down\"></mat-icon>\n    </button>\n    <mat-menu #navMenu=\"matMenu\" class=\"admin-pill-nav-menu\">\n        <ng-container *ngTemplateOutlet=\"navItems\"></ng-container>\n    </mat-menu>\n</ng-container>\n\n<ng-template #desktopNav>\n    <aside class=\"admin-pill-nav rounded\">\n        <ng-container *ngTemplateOutlet=\"navItems\"></ng-container>\n    </aside>\n</ng-template>\n\n<div class=\"settings-panels-container\">\n    <router-outlet></router-outlet>\n</div>\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, NavigationEnd, Router, Routes} from '@angular/router';\nimport {SettingsState} from './settings-state.service';\nimport {Settings} from '../../core/config/settings.service';\nimport {APP_SETTING_ROUTES} from '../../../app/admin/app-admin-routes';\nimport {BehaviorSubject} from 'rxjs';\nimport {BreakpointsService} from '@common/core/ui/breakpoints.service';\nimport {filter} from 'rxjs/operators';\n\n@Component({\n    selector: 'settings',\n    templateUrl: './settings.component.html',\n    styleUrls: ['./settings.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SettingsComponent implements OnInit {\n    public activePanel$ = new BehaviorSubject<string>(this.route.firstChild.routeConfig.path);\n    constructor(\n        public settings: Settings,\n        private route: ActivatedRoute,\n        private router: Router,\n        private state: SettingsState,\n        public breakpoints: BreakpointsService,\n    ) {}\n\n    ngOnInit() {\n        this.route.data.subscribe(data => {\n            this.state.setAll(data['settings']);\n        });\n\n        this.router.events\n            .pipe(filter(e => e instanceof NavigationEnd))\n            .subscribe(() => {\n                this.activePanel$.next(this.route.firstChild.routeConfig.path);\n            });\n    }\n\n    public appRoutes(): Routes {\n        return APP_SETTING_ROUTES;\n    }\n}\n","<div class=\"header\">\n  <div class=\"title\" trans>General</div>\n  <div class=\"subtitle\" trans>Configure general site settings.</div>\n</div>\n\n<form class=\"body many-inputs\" (ngSubmit)=\"saveSettings()\" ngNativeValidate>\n  <div class=\"input-container\" [class.has-error]=\"urlsDontMatch()\">\n    <label for=\"app_url\" trans>Primary Site Url</label>\n    <input\n      type=\"text\"\n      id=\"app_url\"\n      name=\"app_url\"\n      [(ngModel)]=\"state.server['app_url']\"\n      readonly=\"readonly\"\n      required\n    />\n    <p class=\"error\" *ngIf=\"urlsDontMatch()\">\n      <span\n        trans\n        [transValues]=\"{baseUrl: state.server['app_url'], currentUrl: state.server['newAppUrl']}\"\n        >Base site url is set as \":baseUrl\" in configuration, but current url is \":currentUrl\". It's\n        recommended to set the primary url you want to use in configuration file and then redirect\n        all other url versions to this primary version via cpanel or .htaccess file.</span\n      >\n    </p>\n    <p>\n      <span class=\"docs-link\">\n        <mat-icon svgIcon=\"link\"></mat-icon>\n        <a\n          *ngIf=\"!settings.get('site.hide_docs_buttons')\"\n          href=\"https://support.vebto.com/help-center/articles/35/primary-site-url\"\n          target=\"_blank\"\n          >Learn more.\n        </a>\n      </span>\n    </p>\n  </div>\n\n  <div class=\"error-group many-inputs\">\n    <div class=\"inline-inputs-container\">\n      <div class=\"input-container\">\n        <label for=\"homepage.type\" trans>Site Homepage</label>\n        <select name=\"homepage.type\" id=\"homepage.type\" [(ngModel)]=\"state.client['homepage.type']\">\n          <option value=\"default\">Default</option>\n          <option value=\"component\">Application Page</option>\n          <option [value]=\"category.name\" *ngFor=\"let category of menuItemCategories$ | async\">\n            {{ category.name }}\n          </option>\n        </select>\n        <p trans>Type of the homepage.</p>\n      </div>\n\n      <ng-container *ngFor=\"let category of menuItemCategories$ | async\">\n        <div class=\"input-container\" *ngIf=\"state.client['homepage.type'] === category.name\">\n          <label [for]=\"category.name\" class=\"visually-hidden\" trans>{{ category.name }}</label>\n          <select\n            [id]=\"category.name\"\n            [name]=\"category.name\"\n            [(ngModel)]=\"state.client['homepage.value']\"\n          >\n            <option *ngFor=\"let item of category.items\" [value]=\"item.model_id\">\n              {{ item.label }}\n            </option>\n          </select>\n        </div>\n      </ng-container>\n\n      <div class=\"input-container\" *ngIf=\"state.client['homepage.type'] === 'component'\">\n        <label for=\"homepage.value\" class=\"visually-hidden\" trans>Application Page</label>\n        <select\n          name=\"homepage.value\"\n          id=\"homepage.value\"\n          [(ngModel)]=\"state.client['homepage.value']\"\n        >\n          <option [ngValue]=\"page.name\" *ngFor=\"let page of getHomepageComponents()\" trans>\n            {{ getDisplayName(page) }}\n          </option>\n        </select>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"input-container\">\n    <label for=\"themes.default_mode\" trans>Default Site Theme</label>\n    <select\n      id=\"themes.default_mode\"\n      name=\"themes.default_mode\"\n      [(ngModel)]=\"state.client['themes.default_mode']\"\n    >\n      <option value=\"light\" trans>Light</option>\n      <option value=\"dark\" trans>Dark</option>\n    </select>\n  </div>\n\n  <div class=\"setting-toggle-container\">\n    <mat-slide-toggle\n      name=\"themes.user_change\"\n      id=\"themes.user_change\"\n      [(ngModel)]=\"state.client['themes.user_change']\"\n      trans\n      >Allow Theme Change</mat-slide-toggle\n    >\n    <p trans>Allow user to switch from dark to light mode and vice versa.</p>\n  </div>\n\n  <div class=\"settings-separator\"></div>\n\n  <button\n    type=\"button\"\n    mat-flat-button\n    color=\"accent\"\n    [disabled]=\"state.loading$ | async\"\n    (click)=\"createSitemap()\"\n    trans\n  >\n    Generate Sitemap\n  </button>\n  <p class=\"sitemap-description\">\n    <span trans>Once generated, sitemap index url will be</span>:\n    <a target=\"_blank\" [href]=\"settings.getBaseUrl() + '/storage/sitemaps/sitemap-index.xml'\"\n      >{{ settings.getBaseUrl() }}/storage/sitemaps/sitemap-index.xml</a\n    >\n  </p>\n\n  <div class=\"settings-separator\"></div>\n\n  <button\n    mat-raised-button\n    color=\"accent\"\n    class=\"button primary update-button\"\n    type=\"submit\"\n    [disabled]=\"state.loading$ | async\"\n    trans\n  >\n    Update\n  </button>\n  <mat-progress-bar\n    mode=\"indeterminate\"\n    color=\"accent\"\n    *ngIf=\"state.loading$ | async\"\n  ></mat-progress-bar>\n</form>\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {SettingsPanelComponent} from '../settings-panel.component';\nimport {CssTheme} from '@common/core/types/models/CssTheme';\nimport {MenuItemCategory} from '@common/admin/appearance/panels/menus-appearance-panel/menus/item-categories/menu-item-category';\nimport {BehaviorSubject} from 'rxjs';\nimport {CustomHomepagePage} from '@common/pages/shared/custom-homepage.service';\nimport {finalize} from 'rxjs/operators';\n\n@Component({\n    selector: 'homepage-settings',\n    templateUrl: './general-settings.component.html',\n    styleUrls: ['./general-settings.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {class: 'settings-panel'},\n})\nexport class GeneralSettingsComponent extends SettingsPanelComponent implements OnInit {\n    public menuItemCategories$ = new BehaviorSubject<MenuItemCategory[]>([]);\n    public cssThemes: CssTheme[] = [];\n\n    ngOnInit() {\n        this.valueLists.get(['menuItemCategories', 'themes']).subscribe(response => {\n            this.menuItemCategories$.next(response.menuItemCategories);\n            this.cssThemes = response.themes;\n        });\n    }\n\n    public getHomepageComponents() {\n        return this.customHomepage.getComponents();\n    }\n\n    public getDisplayName(page: CustomHomepagePage) {\n        return (\n            (page.routeConfig?.data && page.routeConfig.data.name) ||\n            page.name.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())\n        );\n    }\n\n    public urlsDontMatch() {\n        return (\n            this.state.server['newAppUrl'] &&\n            this.state.server['newAppUrl'] !== this.state.server['app_url']\n        );\n    }\n\n    public createSitemap() {\n        this.state.loading$.next(true);\n        return this.http\n            .post('sitemap/generate')\n            .pipe(finalize(() => this.state.loading$.next(false)))\n            .subscribe(() => {\n                this.toast.open('Sitemap generated.');\n            });\n    }\n}\n","<div class=\"header\">\n  <div class=\"title\" trans>Authentication</div>\n  <div class=\"subtitle\" trans>\n    Configure registration, social login and related 3rd party integrations.\n  </div>\n</div>\n\n<form\n  class=\"body many-inputs social-login-container\"\n  (ngSubmit)=\"saveSettings()\"\n  ngNativeValidate\n  *ngIf=\"state.errors$ | async as errors\"\n>\n  <div class=\"setting-toggle-container\">\n    <mat-slide-toggle\n      name=\"require_email_confirmation\"\n      id=\"require_email_confirmation\"\n      [disabled]=\"!state.client['require_email_confirmation'] && !state.server['mail_setup']\"\n      [(ngModel)]=\"state.client['require_email_confirmation']\"\n      trans\n      >Require Email Confirmation</mat-slide-toggle\n    >\n    <p>\n      <span trans\n        >Require new users to validate their email address before being able to login.</span\n      ><br />\n      <ng-container *ngIf=\"!state.server['mail_setup']\">\n        <span trans>Outgoing mail method needs to be setup before enabling this setting.</span>\n        &ngsp;<a routerLink=\"/admin/settings/mail\" trans>Fix now.</a>\n      </ng-container>\n    </p>\n  </div>\n\n  <div class=\"setting-toggle-container\">\n    <mat-slide-toggle\n      name=\"registration.disable\"\n      id=\"registration.disable\"\n      [(ngModel)]=\"state.client['registration.disable']\"\n      trans\n      >Disable Registration</mat-slide-toggle\n    >\n    <p trans>All registration (including social login) will be disabled.</p>\n  </div>\n\n  <div class=\"setting-toggle-container\">\n    <mat-slide-toggle\n      name=\"single_device_login\"\n      id=\"single_device_login\"\n      [(ngModel)]=\"state.client['single_device_login']\"\n      trans\n      >Single Device Login</mat-slide-toggle\n    >\n    <p trans>Only allow one device to be logged into user account at the same time.</p>\n  </div>\n\n  <ng-container *ngIf=\"settings.get('envato.enable')\">\n    <div class=\"setting-toggle-container envato\">\n      <mat-slide-toggle\n        name=\"social.envato.enable\"\n        id=\"social.envato.enable\"\n        [(ngModel)]=\"state.client['social.envato.enable']\"\n        trans\n        >Envato Login</mat-slide-toggle\n      >\n      <p trans>Enable logging into the site via envato.</p>\n    </div>\n\n    <ng-container *ngIf=\"state.client['social.envato.enable']\">\n      <div class=\"input-container\">\n        <label for=\"social.envato.id\" trans>Envato ID</label>\n        <input\n          name=\"social.envato.id\"\n          id=\"social.envato.id\"\n          [(ngModel)]=\"state.server['envato_id']\"\n        />\n      </div>\n\n      <div class=\"input-container\">\n        <label for=\"social.envato.secret\" trans>Envato Secret</label>\n        <input\n          name=\"social.envato.secret\"\n          id=\"social.envato.secret\"\n          [(ngModel)]=\"state.server['envato_secret']\"\n        />\n      </div>\n\n      <div class=\"input-container\">\n        <label for=\"social.envato.personal_token\" trans>Envato Personal Token</label>\n        <input\n          name=\"social.envato.personal_token\"\n          id=\"social.envato.personal_token\"\n          [(ngModel)]=\"state.server['envato_personal_token']\"\n        />\n      </div>\n    </ng-container>\n  </ng-container>\n\n  <div\n    class=\"error-group many-inputs no-bottom-border\"\n    id=\"google_group\"\n    [class.has-error]=\"errors.google_group\"\n  >\n    <div class=\"setting-toggle-container google\">\n      <mat-slide-toggle\n        name=\"social.google.enable\"\n        id=\"social.google.enable\"\n        [(ngModel)]=\"state.client['social.google.enable']\"\n        trans\n        >Google Login</mat-slide-toggle\n      >\n      <p trans>Enable logging into the site via google.</p>\n    </div>\n\n    <ng-container *ngIf=\"state.client['social.google.enable']\">\n      <div class=\"input-container\">\n        <label for=\"social.google.id\" trans>Google Client ID</label>\n        <input\n          name=\"social.google.id\"\n          id=\"social.google.id\"\n          [(ngModel)]=\"state.server['google_id']\"\n        />\n      </div>\n\n      <div class=\"input-container\">\n        <label for=\"social.google.secret\" trans>Google Client Secret</label>\n        <input\n          name=\"social.google.secret\"\n          id=\"social.google.secret\"\n          [(ngModel)]=\"state.server['google_secret']\"\n        />\n      </div>\n    </ng-container>\n\n    <p class=\"error\" *ngIf=\"errors.google_group\" [innerHTML]=\"errors.google_group\"></p>\n  </div>\n\n  <div class=\"error-group many-inputs no-bottom-border\" [class.has-error]=\"errors.facebook_group\">\n    <div class=\"setting-toggle-container facebook\">\n      <mat-slide-toggle\n        name=\"social.facebook.enable\"\n        id=\"social.facebook.enable\"\n        [(ngModel)]=\"state.client['social.facebook.enable']\"\n        trans\n        >Facebook Login</mat-slide-toggle\n      >\n      <p trans>Enable logging into the site via facebook.</p>\n    </div>\n\n    <ng-container *ngIf=\"state.client['social.facebook.enable']\">\n      <div class=\"input-container\">\n        <label for=\"social.facebook.id\" trans>Facebook App ID</label>\n        <input\n          name=\"social.facebook.id\"\n          id=\"social.facebook.id\"\n          [(ngModel)]=\"state.server['facebook_id']\"\n        />\n      </div>\n\n      <div class=\"input-container\">\n        <label for=\"social.facebook.secret\" trans>Facebook App Secret</label>\n        <input\n          name=\"social.facebook.secret\"\n          id=\"social.facebook.secret\"\n          [(ngModel)]=\"state.server['facebook_secret']\"\n        />\n      </div>\n    </ng-container>\n\n    <p class=\"error\" *ngIf=\"errors.facebook_group\" [innerHTML]=\"errors.facebook_group\"></p>\n  </div>\n\n  <div class=\"error-group many-inputs\" [class.has-error]=\"errors.twitter_group\">\n    <div class=\"setting-toggle-container twitter\">\n      <mat-slide-toggle\n        name=\"social.twitter.enable\"\n        id=\"social.twitter.enable\"\n        [(ngModel)]=\"state.client['social.twitter.enable']\"\n        trans\n        >Twitter Login</mat-slide-toggle\n      >\n      <p trans>Enable logging into the site via twitter.</p>\n    </div>\n\n    <ng-container *ngIf=\"state.client['social.twitter.enable']\">\n      <div class=\"input-container\">\n        <label for=\"social.twitter.id\" trans>Twitter ID</label>\n        <input\n          name=\"social.twitter.id\"\n          id=\"social.twitter.id\"\n          [(ngModel)]=\"state.server['twitter_id']\"\n        />\n      </div>\n\n      <div class=\"input-container\">\n        <label for=\"social.twitter.secret\" trans>Twitter Secret</label>\n        <input\n          name=\"social.twitter.secret\"\n          id=\"social.twitter.secret\"\n          [(ngModel)]=\"state.server['twitter_secret']\"\n        />\n      </div>\n    </ng-container>\n\n    <p class=\"error\" *ngIf=\"errors.twitter_group\" [innerHTML]=\"errors.twitter_group\"></p>\n  </div>\n\n  <button\n    mat-raised-button\n    color=\"accent\"\n    class=\"button primary update-button\"\n    type=\"submit\"\n    [disabled]=\"state.loading$ | async\"\n    trans\n  >\n    Update\n  </button>\n  <mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"state.loading$ | async\"></mat-progress-bar>\n</form>\n","import {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\nimport {SettingsPanelComponent} from '../settings-panel.component';\n\n@Component({\n    selector: 'authentication-settings',\n    templateUrl: './authentication-settings.component.html',\n    styleUrls: ['./authentication-settings.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {'class': 'settings-panel'},\n})\nexport class AuthenticationSettingsComponent extends SettingsPanelComponent {}\n","<div class=\"header\">\n  <div class=\"title\" trans>Cache</div>\n  <div class=\"subtitle\" trans>Configure cache time, method and related 3rd party integrations.</div>\n</div>\n\n<form\n  class=\"body many-inputs\"\n  (submit)=\"saveSettings()\"\n  ngNativeValidate\n  *ngIf=\"state.errors$ | async as errors\"\n>\n  <div\n    class=\"error-group many-inputs no-border-top\"\n    id=\"cache_group\"\n    [class.has-error]=\"errors.cache_group\"\n  >\n    <div class=\"input-container\">\n      <label for=\"cache.driver\" trans>Cache Method</label>\n      <select\n        name=\"cache.driver\"\n        id=\"cache.driver\"\n        [(ngModel)]=\"state.server['cache_driver']\"\n        (ngModelChange)=\"clearErrors()\"\n      >\n        <option value=\"file\">File (Default)</option>\n        <option value=\"array\">None</option>\n        <option value=\"apc\">APC</option>\n        <option value=\"memcached\">Memcached</option>\n        <option value=\"redis\">Redis</option>\n      </select>\n      <p trans>Which method should be used for storing and retrieving cached items.</p>\n    </div>\n\n    <!-- MEMCACHED -->\n    <ng-container *ngIf=\"state.server['cache_driver'] === 'memcached'\">\n      <div class=\"input-container\">\n        <label for=\"cache.memcached_host\" trans>Memcached Host</label>\n        <input\n          name=\"cache.memcached_host\"\n          id=\"cache.memcached_host\"\n          [(ngModel)]=\"state.server['memcached_host']\"\n          required\n        />\n      </div>\n\n      <div class=\"input-container\">\n        <label for=\"cache.memcached_port\" trans>Memcached Port</label>\n        <input\n          type=\"number\"\n          name=\"cache.memcached_port\"\n          id=\"cache.memcached_port\"\n          [(ngModel)]=\"state.server['memcached_port']\"\n          required\n        />\n      </div>\n    </ng-container>\n\n    <p class=\"error\" *ngIf=\"errors.cache_group\" [innerHTML]=\"errors.cache_group\"></p>\n  </div>\n\n  <button\n    mat-stroked-button\n    color=\"accent\"\n    class=\"button flat\"\n    (click)=\"clearCache()\"\n    type=\"button\"\n    trans\n  >\n    Clear Cache\n  </button>\n\n  <div class=\"widget widget-info widget-important\">\n    <div class=\"title\" trans>Important!</div>\n    <p trans>\n      \"File\" is the best option for most cases and should not be changed, unless you are familiar\n      with another cache method and have it set up on the server already.\n    </p>\n  </div>\n\n  <button\n    mat-raised-button\n    color=\"accent\"\n    class=\"button primary update-button\"\n    [disabled]=\"state.loading$ | async\"\n    type=\"submit\"\n    trans\n  >\n    Update\n  </button>\n  <mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"state.loading$ | async\"></mat-progress-bar>\n</form>\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {SettingsPanelComponent} from '../settings-panel.component';\nimport {finalize} from 'rxjs/operators';\n\n@Component({\n    selector: 'cache-settings',\n    templateUrl: './cache-settings.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'class': 'settings-panel'},\n})\nexport class CacheSettingsComponent extends SettingsPanelComponent {\n    public clearCache() {\n        this.state.loading$.next(true);\n        this.http.post('cache/flush')\n            .pipe(finalize(() => this.state.loading$.next(false)))\n            .subscribe(() => {\n                this.toast.open('Cache cleared.');\n            });\n    }\n}\n","<div class=\"header\">\n  <div class=\"title\">Analytics</div>\n  <div class=\"subtitle\" trans>Configure google analytics integration and credentials.</div>\n</div>\n\n<form\n  class=\"body many-inputs\"\n  (submit)=\"saveSettings()\"\n  ngNativeValidate\n  *ngIf=\"state.errors$ | async as errors\"\n>\n  <div\n    class=\"error-group many-inputs no-spacing\"\n    id=\"analytics_group\"\n    [class.has-error]=\"errors.analytics_group\"\n  >\n    <div class=\"input-container\" [class.has-error]=\"errors['certificate']\">\n      <label for=\"certificate\" trans>Google Service Account Key File (.json)</label>\n      <input\n        type=\"file\"\n        id=\"certificate\"\n        name=\"certificate\"\n        #fileInput\n        (change)=\"setCertificateFile(fileInput.files)\"\n        accept=\".json\"\n      />\n      <p class=\"error\" *ngIf=\"errors['certificate']\">{{ errors['certificate'] }}</p>\n    </div>\n\n    <div class=\"input-container\">\n      <label for=\"analytics.view_id\" trans>Google Analytics View ID</label>\n      <input\n        type=\"number\"\n        name=\"analytics.view_id\"\n        id=\"analytics.view_id\"\n        [(ngModel)]=\"state.server['analytics_view_id']\"\n      />\n    </div>\n\n    <div class=\"input-container\">\n      <label for=\"analytics.tracking_code\" trans>Google Analytics Tracking Code</label>\n      <input\n        name=\"analytics.tracking_code\"\n        id=\"analytics.tracking_code\"\n        [(ngModel)]=\"state.client['analytics.tracking_code']\"\n        min=\"1\"\n        max=\"20\"\n        placeholder=\"UA-******-2\"\n      />\n      <p trans>Google analytics tracking code only, not the whole javascript code snippet.</p>\n    </div>\n\n    <p class=\"error\" *ngIf=\"errors.analytics_group\" [innerHTML]=\"errors.analytics_group\"></p>\n  </div>\n\n  <button\n    mat-raised-button\n    color=\"accent\"\n    class=\"button primary update-button\"\n    [disabled]=\"state.loading$ | async\"\n    type=\"submit\"\n    trans\n  >\n    Update\n  </button>\n  <mat-progress-bar\n    mode=\"indeterminate\"\n    color=\"accent\"\n    *ngIf=\"state.loading$ | async\"\n  ></mat-progress-bar>\n</form>\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {SettingsPanelComponent} from '@common/admin/settings/settings-panel.component';\nimport {SettingsPayload} from '@common/core/config/settings-payload';\n\n@Component({\n    selector: 'analytics-settings',\n    templateUrl: './analytics-settings.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'class': 'settings-panel'},\n})\nexport class AnalyticsSettingsComponent extends SettingsPanelComponent {\n    public certificateFile: File;\n\n    public saveSettings(settings?: SettingsPayload) {\n        const payload = this.getPayload(settings || this.state.getModified());\n        super.saveSettings(payload);\n    }\n\n    private getPayload(settings: SettingsPayload) {\n        if (this.certificateFile) {\n            settings.files = {certificate: this.certificateFile};\n        }\n        return settings;\n    }\n\n    public setCertificateFile(files: FileList) {\n        this.certificateFile = files.item(0);\n    }\n}\n","<div class=\"header\">\n  <div class=\"title\" trans>Localization</div>\n  <div class=\"subtitle\" trans>Manage localization settings for the site.</div>\n</div>\n\n<form class=\"body many-inputs\" (submit)=\"saveSettings()\">\n  <div class=\"input-container\">\n    <label for=\"app.timezone\" trans>Timezone</label>\n    <select name=\"app.timezone\" id=\"app.timezone\" [(ngModel)]=\"state.server['app_timezone']\">\n      <optgroup [label]=\"pair.key\" *ngFor=\"let pair of selects.timezones | keyvalue\">\n        <option [value]=\"timezone.value\" *ngFor=\"let timezone of pair.value\">\n          {{ timezone.text }}\n        </option>\n      </optgroup>\n    </select>\n    <p trans>Choose either a city in the same timezone as you or a UTC timezone offset.</p>\n  </div>\n\n  <div class=\"input-container\">\n    <label for=\"app.locale\" trans>Site Language</label>\n    <select name=\"app.locale\" id=\"app.locale\" [(ngModel)]=\"state.server['app_locale']\">\n      <option [value]=\"localization.language\" *ngFor=\"let localization of selects.localizations\">\n        {{ localization.name }}\n      </option>\n    </select>\n    <p trans>Which translation should be selected by default for new users.</p>\n  </div>\n\n  <div class=\"input-container\">\n    <label for=\"dates.format\" trans>Date Format</label>\n    <select\n      name=\"dates.format\"\n      id=\"dates.format\"\n      class=\"no-capitalize\"\n      [(ngModel)]=\"initialDateFormat\"\n      (ngModelChange)=\"updateDateFormat($event)\"\n      required\n    >\n      <option [value]=\"format\" *ngFor=\"let format of defaultDateFormats\">\n        {{ getCurrentDate() | formattedDate: format }} ({{ format }})\n      </option>\n      <option value=\"custom\" trans>Custom</option>\n    </select>\n    <p>\n      {{ 'Default format for dates on the site.' | trans }}\n      <br />\n      {{ 'Preview:' | trans }}\n      <strong>{{ getCurrentDate() | formattedDate: selectedDateFormat() }}</strong>\n    </p>\n  </div>\n\n  <div class=\"input-container\" [class.hidden]=\"initialDateFormat !== 'custom'\">\n    <label for=\"dates.custom-format\" trans>Custom Date Format</label>\n    <input\n      type=\"text\"\n      id=\"dates.custom-format\"\n      name=\"dates.custom-format\"\n      [(ngModel)]=\"state.client['dates.format']\"\n      required\n    />\n  </div>\n\n  <div class=\"setting-toggle-container\">\n    <mat-slide-toggle [(ngModel)]=\"state.client['i18n.enable']\" name=\"translations\" trans\n      >Translations</mat-slide-toggle\n    >\n    <p trans>Enable translations functionality for the site.</p>\n  </div>\n\n  <button\n    mat-raised-button\n    color=\"accent\"\n    class=\"button primary update-button\"\n    type=\"submit\"\n    [disabled]=\"state.loading$ | async\"\n    trans\n  >\n    Update\n  </button>\n  <mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"state.loading$ | async\"></mat-progress-bar>\n</form>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { SettingsPanelComponent } from '../settings-panel.component';\nimport { SelectOptionLists } from '@common/core/services/value-lists.service';\n\n@Component({\n    selector: 'localization-settings',\n    templateUrl: './localization-settings.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'class': 'settings-panel'},\n})\nexport class LocalizationSettingsComponent extends SettingsPanelComponent implements OnInit {\n    public selects: SelectOptionLists = {\n        timezones: {},\n        localizations: []\n    };\n    public defaultDateFormats = ['MMMM d, y', 'yyyy-MM-dd', 'M/d/y', 'd/M/y'];\n    public initialDateFormat: string;\n\n    ngOnInit() {\n        const initial = this.state.client['dates.format'] as string;\n        this.initialDateFormat = this.defaultDateFormats.includes(initial) ? initial : 'custom';\n        this.valueLists.get(['timezones', 'localizations']).subscribe(response => {\n            this.selects = response;\n            this.cd.markForCheck();\n        });\n    }\n\n    public getCurrentDate() {\n        return new Date();\n    }\n\n    public updateDateFormat(value: string) {\n        if (value && value !== 'custom') {\n            this.state.client['dates.format'] = value;\n        }\n    }\n\n    public selectedDateFormat() {\n        return this.state.client['dates.format'] as string;\n    }\n}\n","<div class=\"header\">\n  <div class=\"title\" trans>Mail</div>\n  <div class=\"subtitle\" trans>\n    Change incoming and outgoing email handlers, email credentials and more.\n  </div>\n</div>\n\n<form\n  class=\"body many-inputs\"\n  (submit)=\"saveSettings()\"\n  ngNativeValidate\n  *ngIf=\"state.errors$ | async as errors\"\n>\n  <div class=\"input-container\">\n    <label for=\"env.mail_from_address\" trans>From Address</label>\n    <input\n      type=\"email\"\n      name=\"env.mail_from_address\"\n      id=\"env.mail_from_address\"\n      [(ngModel)]=\"state.server['mail_from_address']\"\n      required\n    />\n    <p trans>All outgoing application emails will be sent from this email address.</p>\n  </div>\n\n  <div class=\"input-container\">\n    <label for=\"mail.contact_page_address\" trans>Contact Page Address</label>\n    <input\n      type=\"email\"\n      name=\"mail.contact_page_address\"\n      id=\"mail.contact_page_address\"\n      [(ngModel)]=\"state.client['mail.contact_page_address']\"\n      required\n    />\n    <p [transValues]=\"{url: settings.getBaseUrl() + '/contact'}\" trans>\n      Where emails from :url page should be sent to.\n    </p>\n  </div>\n\n  <div class=\"input-container\">\n    <label for=\"env.mail_from_name\" trans>From Name</label>\n    <input\n      name=\"env.mail_from_name\"\n      id=\"env.mail_from_name\"\n      [(ngModel)]=\"state.server['mail_from_name']\"\n      required\n    />\n    <p trans>All outgoing application emails will be sent using this name.</p>\n  </div>\n\n  <div class=\"widget widget-info widget-important\">\n    <div class=\"title\" trans>Important!</div>\n    <p trans>\n      Your selected mail method must be authorized to send emails using this address and name.\n    </p>\n  </div>\n\n  <ng-container *ngIf=\"settings.get('vebto.admin.showIncomingMailMethod')\">\n    <div class=\"error-group no-bottom-border\">\n      <div class=\"input-container\">\n        <label for=\"mail.handler\" trans>Incoming Mail Method</label>\n        <select name=\"mail.handler\" id=\"mail.handler\" [(ngModel)]=\"state.client['mail.handler']\">\n          <option value=\"mailgun\" trans>Mailgun</option>\n          <option value=\"gmailApi\" trans>Gmail API</option>\n          <option value=\"null\" trans>Rest API (Send emails via http API)</option>\n          <option value=\"mime\" trans>Pipe (Pipe emails directly)</option>\n        </select>\n        <p>\n          <span trans>Which method should be used to handle incoming application emails.</span>\n          <span class=\"docs-link\">\n          <mat-icon svgIcon=\"link\"></mat-icon>\n          <a\n                  *ngIf=\"!settings.get('site.hide_docs_buttons')\"\n                  href=\"https://support.vebto.com/help-center/articles/76/configuring-email-provider\"\n                  target=\"_blank\"\n          >Learn more.\n          </a>\n        </span>\n        </p>\n      </div>\n    </div>\n  </ng-container>\n\n  <div class=\"error-group many-inputs\" id=\"mail_group\" [class.has-error]=\"errors.mail_group\">\n    <div class=\"input-container\">\n      <label for=\"mail.driver\" trans>Outgoing Mail Method</label>\n      <select\n        name=\"mail.driver\"\n        id=\"mail.driver\"\n        [(ngModel)]=\"state.server['mail_driver']\"\n        (ngModelChange)=\"clearErrors()\"\n      >\n        <option value=\"mailgun\">Mailgun</option>\n        <option value=\"gmailApi\">Gmail Api</option>\n        <option value=\"smtp\">SMTP</option>\n        <option value=\"sparkpost\">SparkPost</option>\n        <option value=\"ses\">Ses (Amazon Simple Email Service)</option>\n        <option value=\"sendmail\">SendMail</option>\n        <option value=\"log\">Log (Email will be saved to error log)</option>\n      </select>\n      <p>\n        <span trans>Which method should be used for sending outgoing application emails.</span>\n        <span class=\"docs-link\">\n          <mat-icon svgIcon=\"link\"></mat-icon>\n          <a\n            *ngIf=\"!settings.get('site.hide_docs_buttons')\"\n            href=\"https://support.vebto.com/help-center/articles/42/44/155/incoming-emails\"\n            target=\"_blank\"\n            >Learn more.\n          </a>\n        </span>\n      </p>\n    </div>\n\n    <!-- SMTP -->\n    <ng-container *ngIf=\"state.server['mail_driver'] === 'smtp'\">\n      <div class=\"input-container\">\n        <label for=\"env.mail_host\" trans>SMTP Host</label>\n        <input name=\"env.mail_host\" id=\"env.mail_host\" [(ngModel)]=\"state.server['mail_host']\" />\n      </div>\n\n      <div class=\"input-container\">\n        <label for=\"env.mail_username\" trans>SMTP Username</label>\n        <input\n          name=\"env.mail_username\"\n          id=\"env.mail_username\"\n          [(ngModel)]=\"state.server['mail_username']\"\n        />\n      </div>\n\n      <div class=\"input-container\">\n        <label for=\"env.mail_password\" trans>SMTP Password</label>\n        <input\n          type=\"password\"\n          name=\"env.mail_password\"\n          id=\"env.mail_password\"\n          [(ngModel)]=\"state.server['mail_password']\"\n        />\n      </div>\n\n      <div class=\"input-container\">\n        <label for=\"env.mail_port\" trans>SMTP Port</label>\n        <input name=\"env.mail_port\" id=\"env.mail_port\" [(ngModel)]=\"state.server['mail_port']\" />\n      </div>\n\n      <div class=\"input-container\">\n        <label for=\"env.mail_encryption\" trans>SMTP Encryption</label>\n        <input\n          name=\"env.mail_encryption\"\n          id=\"env.mail_encryption\"\n          [(ngModel)]=\"state.server['mail_encryption']\"\n        />\n      </div>\n    </ng-container>\n\n    <!-- MAILGUN -->\n    <ng-container *ngIf=\"state.server['mail_driver'] === 'mailgun'\">\n      <div class=\"input-container\" [class.has-error]=\"errors.mailgun_domain\">\n        <label for=\"mailgun_domain\" trans>Mailgun Domain</label>\n        <input\n          name=\"mailgun_domain\"\n          id=\"mailgun_domain\"\n          [(ngModel)]=\"state.server['mailgun_domain']\"\n        />\n        <div class=\"error\" *ngIf=\"errors.mailgun_domain\">{{ errors.mailgun_domain }}</div>\n        <p trans>Usually the domain of your site (site.com)</p>\n      </div>\n\n      <div class=\"input-container\" [class.has-error]=\"errors.mailgun_secret\">\n        <label for=\"mailgun_secret\" trans>Mailgun API Key</label>\n        <input\n          name=\"mailgun_secret\"\n          id=\"mailgun_secret\"\n          [(ngModel)]=\"state.server['mailgun_secret']\"\n        />\n        <div class=\"error\" *ngIf=\"errors.mailgun_secret\">{{ errors.mailgun_secret }}</div>\n        <p trans>Should start with \"key-\"</p>\n      </div>\n    </ng-container>\n\n    <!-- SES -->\n    <ng-container *ngIf=\"state.server['mail_driver'] === 'ses'\">\n      <div class=\"input-container\">\n        <label for=\"env.ses_key\" trans>SES Key</label>\n        <input name=\"env.ses_key\" id=\"env.ses_key\" [(ngModel)]=\"state.server['ses_key']\" />\n      </div>\n\n      <div class=\"input-container\">\n        <label for=\"env.ses_secret\" trans>SES Secret</label>\n        <input name=\"env.ses_secret\" id=\"env.ses_secret\" [(ngModel)]=\"state.server['ses_secret']\" />\n      </div>\n\n      <div class=\"input-container\">\n        <label for=\"env.ses_region\" trans>SES Region</label>\n        <input\n          name=\"env.ses_region\"\n          id=\"env.ses_region\"\n          [(ngModel)]=\"state.server['ses_region']\"\n          placeholder=\"us-east-1\"\n        />\n      </div>\n    </ng-container>\n\n    <!-- SPARKPOST-->\n    <div class=\"input-container\" *ngIf=\"state.server['mail_driver'] === 'sparkpost'\">\n      <label for=\"env.sparkpost_secret\" trans>Sparkpost Secret</label>\n      <input\n        name=\"env.sparkpost_secret\"\n        id=\"env.sparkpost_secret\"\n        [(ngModel)]=\"state.server['sparkpost_secret']\"\n      />\n    </div>\n\n    <!-- GMAIL -->\n    <div\n      id=\"gmail_group\"\n      *ngIf=\"\n        state.client['mail.handler'] === 'gmailApi' || state.server['mail_driver'] === 'gmailApi'\n      \"\n    >\n      <div class=\"gmail-input-container\">\n        <div class=\"gmail-label\">Gmail account:</div>\n        <div class=\"authorized-gmail-account\" *ngIf=\"state.server['connectedGmailAccount']\">\n          <img class=\"gmail-img\" src=\"client/assets/images/gmail.png\" alt=\"\" />\n          <span class=\"text\">Gmail {{ state.server['connectedGmailAccount'] }}</span>\n          <button type=\"button\" (click)=\"connectGmailAccount()\" mat-button color=\"accent\" trans>\n            Reconnect\n          </button>\n        </div>\n        <button\n          type=\"button\"\n          mat-flat-button\n          color=\"accent\"\n          class=\"connect-gmail-button\"\n          *ngIf=\"!state.server['connectedGmailAccount']\"\n          (click)=\"connectGmailAccount()\"\n        >\n          <img class=\"gmail-img\" src=\"client/assets/images/gmail.png\" alt=\"\" />\n          <span class=\"text\" trans>Connect gmail account</span>\n        </button>\n        <p class=\"error\" *ngIf=\"(state.errors$ | async).gmail_group as error\">{{ error }}</p>\n      </div>\n      <div class=\"input-container\" *ngIf=\"state.client['mail.handler'] === 'gmailApi'\">\n        <label for=\"gmail.incoming.topicName\">Gmail Topic Name</label>\n        <input\n          type=\"text\"\n          id=\"gmail.incoming.topicName\"\n          name=\"webhook_secret_key\"\n          [(ngModel)]=\"state.client['gmail.incoming.topicName']\"\n          required\n          minlength=\"10\"\n        />\n        <p trans>Google cloud Pub/Sub topic name.</p>\n      </div>\n    </div>\n\n    <p class=\"error group-error\" *ngIf=\"errors.mail_group\" [innerHTML]=\"errors.mail_group\"></p>\n  </div>\n\n  <button\n    mat-raised-button\n    color=\"accent\"\n    class=\"button primary update-button\"\n    type=\"submit\"\n    [disabled]=\"state.loading$ | async\"\n    trans\n  >\n    Update\n  </button>\n  <mat-progress-bar\n    mode=\"indeterminate\"\n    color=\"accent\"\n    *ngIf=\"state.loading$ | async\"\n  ></mat-progress-bar>\n</form>\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {SettingsPanelComponent} from '../settings-panel.component';\n\n@Component({\n    selector: 'mail-settings',\n    templateUrl: './mail-settings.component.html',\n    styleUrls: ['./mail-settings.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {class: 'settings-panel'},\n})\nexport class MailSettingsComponent extends SettingsPanelComponent {\n    connectGmailAccount() {\n        const url = `secure/settings/mail/gmail/connect`;\n        this.social.openNewSocialAuthWindow(url).then(user => {\n            this.state.server['connectedGmailAccount'] = user.email;\n            this.state.errors$.next({});\n            this.toast.open(`Connected gmail account: ${user.email}`);\n        });\n    }\n}\n","<div class=\"header\">\n  <div class=\"title\" trans>Logging</div>\n  <div class=\"subtitle\" trans>\n    Configure site error and access logging and related 3rd party integrations.\n  </div>\n</div>\n\n<form\n  class=\"body many-inputs\"\n  (submit)=\"saveSettings()\"\n  ngNativeValidate\n  *ngIf=\"state.errors$ | async as errors\"\n>\n  <div\n    class=\"error-group many-inputs no-spacing\"\n    id=\"logging-group\"\n    [class.has-error]=\"errors.logging_group\"\n  >\n    <div class=\"input-container\">\n      <label for=\"logging.sentry_dsn\" trans>Sentry DSN</label>\n      <input\n        type=\"url\"\n        name=\"logging.sentry_dsn\"\n        id=\"logging.sentry_dsn\"\n        [(ngModel)]=\"state.server['sentry_dsn']\"\n        minlength=\"30\"\n      />\n    </div>\n\n    <p class=\"error\" *ngIf=\"errors.logging_group\" [innerHTML]=\"errors.logging_group\"></p>\n  </div>\n\n  <div class=\"widget widget-info\">\n    <div class=\"title\" trans>Information</div>\n    <p>\n      <a href=\"https://sentry.io\" target=\"_blank\">Sentry</a>\n      <span>\n        {{\n          'integration provides real-time error tracking and helps identify and fix issues when site is in production.'\n            | trans\n        }}</span\n      >\n    </p>\n  </div>\n\n  <button\n    type=\"submit\"\n    mat-raised-button\n    color=\"accent\"\n    class=\"update-button\"\n    [disabled]=\"state.loading$ | async\"\n    trans\n  >\n    Update\n  </button>\n  <mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"state.loading$ | async\"></mat-progress-bar>\n</form>\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {SettingsPanelComponent} from '../settings-panel.component';\n\n@Component({\n    selector: 'logging-settings',\n    templateUrl: './logging-settings.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'class': 'settings-panel'},\n})\nexport class LoggingSettingsComponent extends SettingsPanelComponent {\n}\n","<div class=\"header\">\n  <div class=\"title\" trans>Queue</div>\n  <div class=\"subtitle\" trans>Select active queue method and enter related 3rd party API keys.</div>\n</div>\n\n<form\n  class=\"body many-inputs\"\n  (submit)=\"saveSettings()\"\n  ngNativeValidate\n  *ngIf=\"state.errors$ | async as errors\"\n>\n  <div class=\"widget widget-info\">\n    <div class=\"title\" trans>Information</div>\n    <p trans>\n      Queues allow to defer time consuming tasks, such as sending an email, until a later time.\n      Deferring these tasks can speed up web requests to the application.\n    </p>\n  </div>\n\n  <div class=\"widget widget-info widget-important\">\n    <div class=\"title\" trans>Important</div>\n    <p trans>\n      All methods except sync require additional setup, which should be performed before changing\n      the queue method. Consult documentation for more information.\n    </p>\n  </div>\n\n  <div\n    class=\"error-group many-inputs no-spacing\"\n    id=\"queue-group\"\n    [class.has-error]=\"errors.queue_group\"\n  >\n    <div class=\"input-container\">\n      <label for=\"queue.driver\" trans>Queue Method</label>\n      <select\n        name=\"queue.driver\"\n        id=\"queue.driver\"\n        [(ngModel)]=\"state.server['queue_driver']\"\n        (ngModelChange)=\"clearErrors()\"\n      >\n        <option value=\"sync\" trans>Sync (Default)</option>\n        <option value=\"beanstalkd\">Beanstalkd</option>\n        <option value=\"database\">Database</option>\n        <option value=\"sqs\" trans>SQS (Amazon simple queue service)</option>\n        <option value=\"redis\">Redis</option>\n      </select>\n    </div>\n\n    <!-- SQS -->\n    <ng-container *ngIf=\"state.server['queue_driver'] === 'sqs'\">\n      <div class=\"input-container\">\n        <label for=\"sqs_queue_key\" trans>SQS Queue Key</label>\n        <input\n          name=\"sqs_queue_key\"\n          id=\"sqs_queue_key\"\n          [(ngModel)]=\"state.server['sqs_queue_key']\"\n          required\n        />\n      </div>\n\n      <div class=\"input-container\">\n        <label for=\"sqs_queue_secret\" trans>SQS Queue Secret</label>\n        <input\n          name=\"sqs_queue_secret\"\n          id=\"sqs_queue_secret\"\n          [(ngModel)]=\"state.server['sqs_queue_secret']\"\n          required\n        />\n      </div>\n\n      <div class=\"input-container\">\n        <label for=\"sqs_queue_prefix\" trans>SQS Queue Prefix</label>\n        <input\n          name=\"sqs_queue_prefix\"\n          id=\"sqs_queue_prefix\"\n          [(ngModel)]=\"state.server['sqs_queue_prefix']\"\n        />\n      </div>\n\n      <div class=\"input-container\">\n        <label for=\"sqs_queue_name\" trans>SQS Queue Name</label>\n        <input\n          name=\"sqs_queue_name\"\n          id=\"sqs_queue_name\"\n          [(ngModel)]=\"state.server['sqs_queue_name']\"\n          required\n        />\n      </div>\n\n      <div class=\"input-container\">\n        <label for=\"sqs_queue_region\" trans>SQS Queue Region</label>\n        <input\n          name=\"sqs_queue_region\"\n          id=\"sqs_queue_region\"\n          [(ngModel)]=\"state.server['sqs_queue_region']\"\n          required\n        />\n      </div>\n    </ng-container>\n\n    <p class=\"error\" *ngIf=\"errors.queue_group\" [innerHTML]=\"errors.queue_group\"></p>\n  </div>\n\n  <button\n    mat-raised-button\n    color=\"accent\"\n    class=\"button primary update-button\"\n    [disabled]=\"state.loading$ | async\"\n    type=\"submit\"\n    trans\n  >\n    Update\n  </button>\n  <mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"state.loading$ | async\"></mat-progress-bar>\n</form>\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {SettingsPanelComponent} from '@common/admin/settings/settings-panel.component';\n\n@Component({\n    selector: 'queue-settings',\n    templateUrl: './queue-settings.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'class': 'settings-panel'},\n})\nexport class QueueSettingsComponent extends SettingsPanelComponent {\n    public saveSettings() {\n        const settings = this.state.getModified();\n\n        // need to save pusher key to both .env file and database\n        // because it is used on server side and on client side\n        if (settings.client['realtime.pusher_key']) {\n            settings.server['pusher_key'] = settings.client['realtime.pusher_key'];\n        }\n\n        super.saveSettings(settings);\n    }\n}\n","<div class=\"header\">\n  <div class=\"title\" trans>Billing</div>\n  <div class=\"subtitle\" trans>Configure billing and subscription settings.</div>\n</div>\n\n<form\n  class=\"body many-inputs\"\n  (submit)=\"saveSettings()\"\n  ngNativeValidate\n  *ngIf=\"state.errors$ | async as errors\"\n>\n  <mat-tab-group color=\"accent\" animationDuration=\"0\">\n    <mat-tab [label]=\"'General' | trans\">\n      <div class=\"many-inputs tab-content\">\n        <div class=\"setting-toggle-container\">\n          <mat-slide-toggle\n            name=\"billing.enable\"\n            id=\"billing.enable\"\n            [(ngModel)]=\"state.client['billing.enable']\"\n            trans\n            >Enable Billing</mat-slide-toggle\n          >\n          <p trans>Enable or disable all billing functionality across the site.</p>\n        </div>\n\n        <ng-container *ngIf=\"state.client['billing.enable']\">\n          <div class=\"setting-toggle-container\">\n            <mat-slide-toggle\n              name=\"billing.paypal.enable\"\n              id=\"billing.paypal.enable\"\n              [(ngModel)]=\"state.client['billing.paypal.enable']\"\n              trans\n              >Paypal Gateway</mat-slide-toggle\n            >\n            <p>\n              <span trans>Enable PayPal payment gateway.</span>\n              <span class=\"docs-link\">\n                <mat-icon svgIcon=\"link\"></mat-icon>\n                <a\n                  *ngIf=\"!settings.get('site.hide_docs_buttons')\"\n                  href=\"https://support.vebto.com/help-center/articles/147/configuring-paypal\"\n                  target=\"_blank\"\n                  >Learn more.\n                </a>\n              </span>\n            </p>\n          </div>\n\n          <div\n            class=\"error-group many-inputs\"\n            id=\"paypal_group\"\n            *ngIf=\"state.client['billing.paypal.enable']\"\n            [class.has-error]=\"errors.paypal_group\"\n          >\n            <div class=\"input-container\">\n              <label for=\"billing.paypal.id\" trans>Paypal Client ID</label>\n              <input\n                name=\"billing.paypal.id\"\n                id=\"billing.paypal.id\"\n                [(ngModel)]=\"state.server['paypal_client_id']\"\n                required\n              />\n            </div>\n\n            <div class=\"input-container\">\n              <label for=\"billing.paypal.secret\" trans>Paypal Secret</label>\n              <input\n                name=\"billing.paypal.secret\"\n                id=\"billing.paypal.secret\"\n                [(ngModel)]=\"state.server['paypal_secret']\"\n                required\n              />\n            </div>\n\n            <div class=\"input-container\">\n              <label for=\"billing.paypal.webhook_id\" trans>Paypal Webhook ID</label>\n              <input\n                name=\"billing.paypal.webhook_id\"\n                id=\"billing.paypal.webhook_id\"\n                [(ngModel)]=\"state.server['paypal_webhook_id']\"\n                required\n              />\n            </div>\n\n            <div class=\"setting-toggle-container\">\n              <mat-slide-toggle\n                name=\"billing.paypal.test_mode\"\n                id=\"billing.paypal.test_mode\"\n                [(ngModel)]=\"state.client['billing.paypal_test_mode']\"\n                trans\n                >Paypal Test Mode</mat-slide-toggle\n              >\n              <p trans>Allows testing PayPal payments with sandbox accounts.</p>\n            </div>\n\n            <p class=\"error\" *ngIf=\"errors.paypal_group\" [innerHTML]=\"errors.paypal_group\"></p>\n          </div>\n\n          <div class=\"setting-toggle-container\">\n            <mat-slide-toggle\n              name=\"billing.enable.stripe\"\n              id=\"billing.enable.stripe\"\n              [(ngModel)]=\"state.client['billing.stripe.enable']\"\n              trans\n              >Stripe Gateway</mat-slide-toggle\n            >\n            <p>\n              <span trans>Enable Stripe payment gateway.</span>\n              <span class=\"docs-link\">\n                <mat-icon svgIcon=\"link\"></mat-icon>\n                <a\n                  *ngIf=\"!settings.get('site.hide_docs_buttons')\"\n                  href=\"https://support.vebto.com/help-center/articles/148/configuring-stripe\"\n                  target=\"_blank\"\n                  >Learn more.\n                </a>\n              </span>\n            </p>\n          </div>\n\n          <div\n            class=\"error-group many-inputs\"\n            id=\"stripe_group\"\n            *ngIf=\"state.client['billing.stripe.enable']\"\n            [class.has-error]=\"errors.stripe_group\"\n          >\n            <div class=\"input-container\">\n              <label for=\"stripe_key\" trans>Stripe Client ID</label>\n              <input\n                name=\"billing.stripe.id\"\n                id=\"stripe_key\"\n                [(ngModel)]=\"state.server['stripe_key']\"\n                required\n              />\n            </div>\n\n            <div class=\"input-container\" [class.has-error]=\"errors.stripe_secret\">\n              <label for=\"stripe_secret\" trans>Stripe Secret</label>\n              <input\n                name=\"billing.stripe.secret\"\n                id=\"stripe_secret\"\n                [(ngModel)]=\"state.server['stripe_secret']\"\n                required\n              />\n              <div class=\"error\" *ngIf=\"errors.stripe_secret\">{{ errors.stripe_secret }}</div>\n            </div>\n\n            <p class=\"error\" *ngIf=\"errors.stripe_group\" [innerHTML]=\"errors.stripe_group\"></p>\n          </div>\n\n          <div class=\"input-container\">\n            <label for=\"accepted-cards\" trans>Accepted Cards</label>\n            <chip-input\n              id=\"accepted-cards\"\n              name=\"accepted-cards\"\n              [(ngModel)]=\"acceptedCards\"\n              placeholder=\"+New Card...\"\n              trans-placeholder\n            ></chip-input>\n          </div>\n        </ng-container>\n      </div>\n    </mat-tab>\n\n    <mat-tab [label]=\"'Invoices' | trans\">\n      <div class=\"many-inputs tab-content\">\n        <div class=\"input-container\">\n          <label for=\"billing.invoice.address\" trans>Invoice Address</label>\n          <textarea\n            name=\"billing.invoice.address\"\n            id=\"billing.invoice.address\"\n            [(ngModel)]=\"state.client['billing.invoice.address']\"\n            rows=\"5\"\n          ></textarea>\n          <p trans>\n            Address to show under \"from\" section of user invoice. Supports HTML. Optional.\n          </p>\n        </div>\n\n        <div class=\"input-container\">\n          <label for=\"billing.invoice.notes\" trans>Invoice Note</label>\n          <textarea\n            name=\"billing.invoice.notes\"\n            id=\"billing.invoice.notes\"\n            [(ngModel)]=\"state.client['billing.invoice.notes']\"\n            rows=\"5\"\n          ></textarea>\n          <p trans>Default notes to show under \"notes\" section of user invoice. Optional.</p>\n        </div>\n      </div>\n    </mat-tab>\n  </mat-tab-group>\n\n  <button\n    mat-raised-button\n    color=\"accent\"\n    class=\"button primary update-button\"\n    type=\"submit\"\n    [disabled]=\"state.loading$ | async\"\n    trans\n  >\n    Update\n  </button>\n  <mat-progress-bar\n    mode=\"indeterminate\"\n    color=\"accent\"\n    *ngIf=\"state.loading$ | async\"\n  ></mat-progress-bar>\n</form>\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {SettingsPanelComponent} from '../settings-panel.component';\n\n@Component({\n    selector: 'billing-settings',\n    templateUrl: './billing-settings.component.html',\n    styleUrls: ['./billing-settings.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'class': 'settings-panel'},\n})\nexport class BillingSettingsComponent extends SettingsPanelComponent implements OnInit {\n    public acceptedCards: string[] = [];\n\n    ngOnInit() {\n        this.acceptedCards = this.settings.getJson('billing.accepted_cards', []);\n    }\n\n    public saveSettings() {\n        const settings = this.state.getModified();\n        settings.client['billing.accepted_cards'] = JSON.stringify(this.acceptedCards);\n        super.saveSettings(settings);\n    }\n}\n","<label for=\"space-input-{{id}}\" *ngIf=\"label\" trans>{{label}}</label>\n<div class=\"wrapper\">\n    <input type=\"number\" min=\"0\" id=\"space-input-{{id}}\" [formControl]=\"form.get('amount')\" placeholder=\"Optional...\" trans-placeholder>\n    <select [formControl]=\"form.get('unit')\">\n        <option [ngValue]=\"unit\" *ngFor=\"let unit of spaceUnits\" trans>{{unit}}</option>\n    </select>\n</div>\n<ng-content select=\".description\"></ng-content>\n<ng-content select=\".error\"></ng-content>","import {ChangeDetectionStrategy, Component, HostBinding, Input, OnInit} from '@angular/core';\nimport {randomString} from '../../utils/random-string';\nimport {spaceUnits} from '../../utils/space-units';\nimport {ControlValueAccessor, FormControl, FormGroup, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {map} from 'rxjs/operators';\nimport {convertToBytes} from '../../utils/convertToBytes';\nimport {prettyBytes} from '../../utils/pretty-bytes';\n\n@Component({\n    selector: 'space-input',\n    templateUrl: './space-input.component.html',\n    styleUrls: ['./space-input.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: SpaceInputComponent,\n        multi: true,\n    }]\n})\nexport class SpaceInputComponent implements ControlValueAccessor, OnInit {\n    @HostBinding('class.input-container') inputContainer = true;\n    @Input() label: string;\n    @Input() name: string;\n\n    public id = randomString();\n    public spaceUnits = spaceUnits;\n    public form = new FormGroup({\n        unit: new FormControl('MB'),\n        amount: new FormControl(null)\n    });\n\n    public propagateChange: Function;\n\n    ngOnInit() {\n        this.form.valueChanges\n            .pipe(map(model => convertToBytes(model.amount, model.unit)))\n            .subscribe(value => this.propagateChange(value));\n    }\n\n    public writeValue(value: number) {\n        this.form.setValue(this.fromBytes(value), {emitEvent: false});\n    }\n\n    public registerOnChange(fn: Function) {\n        this.propagateChange = fn;\n    }\n\n    public registerOnTouched() {}\n\n    private fromBytes(bytes: number) {\n        const pretty = prettyBytes(bytes);\n        if ( ! pretty) return {amount: null, unit: 'MB'};\n        return {amount: pretty.split(' ')[0], unit: pretty.split(' ')[1]};\n    }\n}\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {SettingsState} from '../../../settings-state.service';\n\n@Component({\n    selector: 'ftp-form',\n    templateUrl: './ftp-form.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FtpFormComponent {\n    constructor(public state: SettingsState) {}\n}\n","<div class=\"input-container\">\n    <label for=\"storage_ftp_host\" trans>FTP Hostname</label>\n    <input type=\"text\" id=\"storage_ftp_host\" name=\"storage_ftp_host\" [(ngModel)]=\"state.server['storage_ftp_host']\" required>\n</div>\n\n<div class=\"input-container\">\n    <label for=\"storage_ftp_username\" trans>FTP Username</label>\n    <input type=\"text\" id=\"storage_ftp_username\" name=\"storage_ftp_username\" [(ngModel)]=\"state.server['storage_ftp_username']\" required>\n</div>\n\n<div class=\"input-container\">\n    <label for=\"storage_ftp_password\" trans>FTP Password</label>\n    <input type=\"password\" id=\"storage_ftp_password\" name=\"storage_ftp_password\" [(ngModel)]=\"state.server['storage_ftp_password']\" required>\n</div>\n\n<div class=\"input-container\">\n    <label for=\"storage_ftp_root\" trans>FTP Directory</label>\n    <input type=\"text\" id=\"storage_ftp_root\" name=\"storage_ftp_root\" [(ngModel)]=\"state.server['storage_ftp_root']\" placeholder=\"/\">\n</div>\n\n<div class=\"input-container\">\n    <label for=\"storage_ftp_port\" trans>FTP Port</label>\n    <input type=\"number\" id=\"storage_ftp_port\" name=\"storage_ftp_port\" [(ngModel)]=\"state.server['storage_ftp_port']\" min=\"0\" placeholder=\"21\">\n</div>\n\n<div class=\"setting-toggle-container\">\n    <mat-slide-toggle name=\"storage_ftp_passive\" id=\"storage_ftp_passive\" [(ngModel)]=\"state.server['storage_ftp_passive']\" trans>Passive</mat-slide-toggle>\n</div>\n\n<div class=\"setting-toggle-container\">\n    <mat-slide-toggle name=\"storage_ftp_ssl\" id=\"storage_ftp_ssl\" [(ngModel)]=\"state.server['storage_ftp_ssl']\" trans>SSL</mat-slide-toggle>\n</div>\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {SettingsState} from '../../../settings-state.service';\n\n@Component({\n    selector: 'dropbox-form',\n    templateUrl: './dropbox-form.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DropboxFormComponent {\n    constructor(public state: SettingsState) {}\n}\n","<div class=\"input-container\">\n    <label for=\"storage_dropbox_access_token\" trans>Access Token</label>\n    <input type=\"text\" id=\"storage_dropbox_access_token\" name=\"storage_dropbox_access_token\" [(ngModel)]=\"state.server['storage_dropbox_access_token']\" required>\n</div>\n\n<div class=\"input-container\">\n    <label for=\"storage_dropbox_root\" trans>Root Directory</label>\n    <input type=\"text\" id=\"storage_dropbox_root\" name=\"storage_dropbox_root\" [(ngModel)]=\"state.server['storage_dropbox_root']\" placeholder=\"/\">\n</div>\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {SettingsState} from '../../../settings-state.service';\n\n@Component({\n    selector: 'rackspace-form',\n    templateUrl: './rackspace-form.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RackspaceFormComponent {\n    constructor(public state: SettingsState) {}\n}\n","<div class=\"input-container\">\n    <label for=\"storage_rackspace_username\" trans>Rackspace Username</label>\n    <input type=\"text\" id=\"storage_rackspace_username\" name=\"storage_rackspace_username\" [(ngModel)]=\"state.server['storage_rackspace_username']\" required>\n</div>\n\n<div class=\"input-container\">\n    <label for=\"storage_rackspace_key\" trans>Rackspace Key</label>\n    <input type=\"text\" id=\"storage_rackspace_key\" name=\"storage_rackspace_key\" [(ngModel)]=\"state.server['storage_rackspace_key']\" required>\n</div>\n\n<div class=\"input-container\">\n    <label for=\"storage_rackspace_region\" trans>Rackspace Region</label>\n    <input type=\"text\" id=\"storage_rackspace_region\" name=\"storage_rackspace_region\" [(ngModel)]=\"state.server['storage_rackspace_region']\" required>\n</div>\n\n<div class=\"input-container\">\n    <label for=\"storage_rackspace_container\" trans>Rackspace Container</label>\n    <input type=\"text\" id=\"storage_rackspace_container\" name=\"storage_rackspace_container\" [(ngModel)]=\"state.server['storage_rackspace_container']\" required>\n</div>\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {SettingsState} from '../../../settings-state.service';\n\n@Component({\n    selector: 's3-form',\n    templateUrl: './s3-form.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class S3FormComponent {\n    constructor(public state: SettingsState) {}\n}\n","<div class=\"input-container\">\n    <label for=\"storage_s3_key\" trans>Amazon S3 Key</label>\n    <input type=\"text\" id=\"storage_s3_key\" name=\"storage_s3_key\" [(ngModel)]=\"state.server['storage_s3_key']\" required>\n</div>\n\n<div class=\"input-container\">\n    <label for=\"storage_s3_secret\" trans>Amazon S3 Secret</label>\n    <input type=\"text\" id=\"storage_s3_secret\" name=\"storage_s3_secret\" [(ngModel)]=\"state.server['storage_s3_secret']\" required>\n</div>\n\n<div class=\"input-container\">\n    <label for=\"storage_s3_region\" trans>Amazon S3 Region</label>\n    <input type=\"text\" id=\"storage_s3_region\" pattern=\"[a-z1-9\\-]+\" placeholder=\"us-east-1\" name=\"storage_s3_region\" [(ngModel)]=\"state.server['storage_s3_region']\" required>\n</div>\n\n<div class=\"input-container\">\n    <label for=\"storage_s3_bucket\" trans>Amazon S3 Bucket</label>\n    <input type=\"text\" id=\"storage_s3_bucket\" name=\"storage_s3_bucket\" [(ngModel)]=\"state.server['storage_s3_bucket']\" required>\n</div>\n\n<div class=\"input-container\">\n    <label for=\"storage_s3_endpoint\" trans>Amazon S3 Endpoint</label>\n    <input type=\"url\" id=\"storage_s3_endpoint\" name=\"storage_s3_endpoint\" [placeholder]=\"'Optional' | trans\" [(ngModel)]=\"state.server['storage_s3_endpoint']\">\n    <p trans>Only change endpoint if you are using another S3 compatible storage service.</p>\n</div>\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {SettingsState} from '../../../settings-state.service';\n\n@Component({\n    selector: 'digitalocean-form',\n    templateUrl: './digitalocean-form.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DigitaloceanFormComponent {\n    constructor(public state: SettingsState) {}\n}\n","<div class=\"input-container\">\n    <label for=\"storage_digitalocean_key\" trans>DigitalOcean Key</label>\n    <input type=\"text\" id=\"storage_digitalocean_key\" name=\"storage_digitalocean_key\" [(ngModel)]=\"state.server['storage_digitalocean_key']\" required>\n</div>\n\n<div class=\"input-container\">\n    <label for=\"storage_digitalocean_secret\" trans>DigitalOcean Secret</label>\n    <input type=\"text\" id=\"storage_digitalocean_secret\" name=\"storage_digitalocean_secret\" [(ngModel)]=\"state.server['storage_digitalocean_secret']\" required>\n</div>\n\n<div class=\"input-container\">\n    <label for=\"storage_digitalocean_region\" trans>DigitalOcean Region</label>\n    <input type=\"text\" id=\"storage_digitalocean_region\" name=\"storage_digitalocean_region\" [(ngModel)]=\"state.server['storage_digitalocean_region']\" required pattern=\"[a-z0-9]+\" maxlength=\"5\">\n</div>\n\n<div class=\"input-container\">\n    <label for=\"storage_digitalocean_bucket\" trans>DigitalOcean Bucket</label>\n    <input type=\"text\" id=\"storage_digitalocean_bucket\" name=\"storage_digitalocean_bucket\" [(ngModel)]=\"state.server['storage_digitalocean_bucket']\" required>\n</div>\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {SettingsState} from '../../../settings-state.service';\n\n@Component({\n    selector: 'backblaze-form',\n    templateUrl: './backblaze-form.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BackblazeFormComponent {\n    constructor(public state: SettingsState) {}\n}\n","<div class=\"input-container\">\n    <label for=\"storage_backblaze_key_id\" trans>Backblaze KeyID</label>\n    <input type=\"text\" id=\"storage_backblaze_key_id\" name=\"storage_backblaze_key_id\" [(ngModel)]=\"state.server['storage_backblaze_key_id']\" required>\n</div>\n\n<div class=\"input-container\">\n    <label for=\"storage_backblaze_application_key\" trans>Backblaze applicationKey</label>\n    <input type=\"text\" id=\"storage_backblaze_application_key\" name=\"storage_backblaze_application_key\" [(ngModel)]=\"state.server['storage_backblaze_application_key']\" required>\n</div>\n\n<div class=\"input-container\">\n    <label for=\"storage_backblaze_bucket\" trans>Backblaze Bucket Name</label>\n    <input type=\"text\" id=\"storage_backblaze_bucket\" name=\"storage_backblaze_bucket\" [(ngModel)]=\"state.server['storage_backblaze_bucket']\" required>\n</div>\n\n<div class=\"input-container\">\n    <label for=\"storage_backblaze_region\" trans>Backblaze Region</label>\n    <input type=\"text\" id=\"storage_backblaze_region\" pattern=\"[a-z0-9\\-]+\" placeholder=\"us-west-002\" name=\"storage_backblaze_region\" [(ngModel)]=\"state.server['storage_backblaze_region']\" required>\n</div>\n","<div class=\"header\">\n  <div class=\"title\" trans>User Uploads</div>\n  <div class=\"subtitle\" trans>\n    Configure size and type of files that users are able to upload. This will affect all uploads\n    across the site.\n  </div>\n</div>\n\n<form\n  class=\"body many-inputs\"\n  (ngSubmit)=\"saveSettings()\"\n  ngNativeValidate\n  *ngIf=\"state.errors$ | async as errors\"\n>\n  <div class=\"input-container\" *ngIf=\"state.server.uploads_disk_driver\">\n    <label for=\"uploads_disk_driver\" trans>User Uploads Storage Method</label>\n    <select\n      name=\"uploads_disk_driver\"\n      id=\"uploads_disk_driver\"\n      [(ngModel)]=\"state.server.uploads_disk_driver\"\n      (ngModelChange)=\"clearErrors()\"\n    >\n      <option value=\"local\" trans>Local Disk (Default)</option>\n      <option value=\"s3\">Amazon S3</option>\n      <option value=\"ftp\">FTP</option>\n      <option value=\"digitalocean\">DigitalOcean Spaces</option>\n      <option value=\"backblaze\">Backblaze</option>\n      <option value=\"dropbox\">Dropbox</option>\n      <option value=\"rackspace\">Rackspace</option>\n    </select>\n    <p trans>{{ settings.get('vebto.translations.uploads_disk_driver_description') }}</p>\n  </div>\n\n  <div class=\"input-container\" *ngIf=\"state.server.public_disk_driver\">\n    <label for=\"public_disk_driver\" trans>Public Uploads Storage Method</label>\n    <select\n      name=\"public_disk_driver\"\n      id=\"public_disk_driver\"\n      [(ngModel)]=\"state.server.public_disk_driver\"\n      (ngModelChange)=\"clearErrors()\"\n    >\n      <option value=\"local\" trans>Local Disk (Default)</option>\n      <option value=\"s3\">Amazon S3</option>\n      <option value=\"digitalocean\">DigitalOcean</option>\n      <option value=\"backblaze\">Backblaze</option>\n    </select>\n    <p trans>{{ settings.get('vebto.translations.public_disk_driver_description') }}</p>\n  </div>\n\n  <div\n    class=\"error-group storage-credentials-group\"\n    id=\"storage_group\"\n    [class.hidden]=\"allSelectedDriversAreLocal()\"\n    [class.has-error]=\"errors.storage_group\"\n  >\n    <ftp-form class=\"many-inputs credentials-form\" *ngIf=\"driverSelected('ftp')\"></ftp-form>\n    <dropbox-form\n      class=\"many-inputs credentials-form\"\n      *ngIf=\"driverSelected('dropbox')\"\n    ></dropbox-form>\n    <rackspace-form\n      class=\"many-inputs credentials-form\"\n      *ngIf=\"driverSelected('rackspace')\"\n    ></rackspace-form>\n    <s3-form class=\"many-inputs credentials-form\" *ngIf=\"driverSelected('s3')\"></s3-form>\n    <digitalocean-form\n      class=\"many-inputs credentials-form\"\n      *ngIf=\"driverSelected('digitalocean')\"\n    ></digitalocean-form>\n    <backblaze-form\n      class=\"many-inputs credentials-form\"\n      *ngIf=\"driverSelected('backblaze')\"\n    ></backblaze-form>\n    <p class=\"error\" *ngIf=\"errors.storage_group\" [innerHTML]=\"errors.storage_group\"></p>\n  </div>\n\n  <div class=\"error-group no-bottom-border\" id=\"static_delivery_group\">\n    <div class=\"input-container\" *ngIf=\"driverSelected('local')\">\n      <label for=\"static_file_delivery\" trans>File Delivery Optimization</label>\n      <select\n        name=\"static_file_delivery\"\n        id=\"static_file_delivery\"\n        [(ngModel)]=\"state.server['static_file_delivery']\"\n      >\n        <option [ngValue]=\"null\" trans>None</option>\n        <option value=\"xsendfile\">X-Sendfile (Apache)</option>\n        <option value=\"xaccel\">X-Accel (Nginx)</option>\n      </select>\n      <p trans>\n        Both X-Sendfile and X-Accel need to be enabled on the server first. When enabled it will\n        reduce server memory and CPU usage when previewing or downloading files, especially for\n        large files.\n      </p>\n      <p\n        class=\"error\"\n        *ngIf=\"errors.static_delivery_group\"\n        [innerHTML]=\"errors.static_delivery_group\"\n      ></p>\n    </div>\n  </div>\n\n  <div class=\"error-group\">\n    <div class=\"setting-toggle-container\">\n      <mat-slide-toggle\n        name=\"uploads.chunk\"\n        id=\"uploads.chunk\"\n        [(ngModel)]=\"state.client['uploads.chunk']\"\n        trans\n        >Chunked Uploads</mat-slide-toggle\n      >\n      <p trans>\n        When enabled larger files will be uploaded in smaller chunks to improve upload reliability\n        and avoid server max upload size limits.\n      </p>\n    </div>\n\n    <div class=\"input-container\" *ngIf=\"state.client['uploads.chunk']\">\n      <label for=\"uploads.chunk_size\" trans>Chunk Size</label>\n      <space-input\n        name=\"uploads.chunk_size\"\n        id=\"uploads.chunk_size\"\n        [(ngModel)]=\"state.client['uploads.chunk_size']\"\n      ></space-input>\n      <p trans>\n        Size for each file chunk. Recommended size is 5MB. It should generally only be changed if\n        maximum upload size on your server is lower then 5MB. Increasing or decreasing chunk size\n        will not affect upload speed.\n      </p>\n    </div>\n\n    <div class=\"widget widget-important\">\n      <div class=\"title\" trans>Important</div>\n      <p>\n        {{ 'Maximum upload size on your server currently is set to' | trans }}\n        <strong>{{ serverMaxUploadSize$ | async }}</strong\n        >.\n      </p>\n    </div>\n\n    <div class=\"setting-toggle-container\" *ngIf=\"state.client['uploads.chunk']\">\n      <mat-slide-toggle\n        name=\"uploads.resume\"\n        id=\"uploads.resume\"\n        [(ngModel)]=\"state.client['uploads.resume']\"\n        trans\n        >Resumable Uploads</mat-slide-toggle\n      >\n      <p trans>Allow users to resume partial or failed uploads.</p>\n    </div>\n  </div>\n\n  <div class=\"input-container\">\n    <label for=\"uploads.max_size\" trans>Maximum file size</label>\n    <space-input\n      name=\"uploads.max_size\"\n      id=\"uploads.max_size\"\n      [(ngModel)]=\"state.client['uploads.max_size']\"\n    ></space-input>\n    <p trans>Maximum size for a single file user can upload.</p>\n  </div>\n\n  <div class=\"input-container\">\n    <label for=\"uploads.available_space\" trans>Available Space</label>\n    <space-input\n      name=\"uploads.available_space\"\n      id=\"uploads.available_space\"\n      [(ngModel)]=\"state.client['uploads.available_space']\"\n    ></space-input>\n    <p trans>\n      Disk space each user uploads are allowed to take up. This can be overridden per user.\n    </p>\n  </div>\n\n  <div class=\"input-container\">\n    <label for=\"allowed_extensions\" trans>Allowed file types</label>\n    <chip-input\n      id=\"allowed_extensions\"\n      name=\"allowed_extensions\"\n      placeholder=\"Enter file type...\"\n      [(ngModel)]=\"allowedExtensions\"\n    ></chip-input>\n    <p trans>\n      List of allowed file types (jpg, mp3, pdf etc.). Leave empty to allow all file types.\n    </p>\n  </div>\n\n  <div class=\"input-container\">\n    <label for=\"blocked_extensions\" trans>Blocked file types</label>\n    <chip-input\n      id=\"blocked_extensions\"\n      name=\"blocked_extensions\"\n      placeholder=\"Enter file type...\"\n      [(ngModel)]=\"blockedExtensions\"\n    ></chip-input>\n    <p trans>Prevent uploading of these file types, even if they are allowed above.</p>\n  </div>\n\n  <button\n    mat-raised-button\n    color=\"accent\"\n    class=\"update-button\"\n    type=\"submit\"\n    [disabled]=\"state.loading$ | async\"\n    trans\n  >\n    Update\n  </button>\n  <mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"state.loading$ | async\"></mat-progress-bar>\n</form>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { SettingsPanelComponent } from '../settings-panel.component';\nimport { GenericBackendResponse } from '@common/core/types/backend-response';\nimport { Subject } from 'rxjs';\n\n@Component({\n    selector: 'uploading-settings',\n    templateUrl: './uploading-settings.component.html',\n    styleUrls: ['./uploading-settings.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'class': 'settings-panel'},\n})\nexport class UploadingSettingsComponent extends SettingsPanelComponent implements OnInit {\n    public allowedExtensions: string[] = [];\n    public blockedExtensions: string[] = [];\n    public serverMaxUploadSize$ = new Subject<string>();\n\n    ngOnInit() {\n        this.allowedExtensions = this.settings.getJson('uploads.allowed_extensions', []);\n        this.blockedExtensions = this.settings.getJson('uploads.blocked_extensions', []);\n        this.getServerMaxUploadSize();\n    }\n\n    public saveSettings() {\n        this.setJson('uploads.allowed_extensions', removeLeadingDot(this.allowedExtensions));\n        this.setJson('uploads.blocked_extensions', removeLeadingDot(this.blockedExtensions));\n        super.saveSettings();\n    }\n\n    public driverSelected(name: string): boolean {\n        return [this.state.server.uploads_disk_driver, this.state.server.public_disk_driver]\n            .includes(name);\n    }\n\n    public allSelectedDriversAreLocal() {\n        return [this.state.server.uploads_disk_driver, this.state.server.public_disk_driver]\n            .every(d => !d || d === 'local');\n    }\n\n    private getServerMaxUploadSize() {\n        this.http.get<GenericBackendResponse<{maxSize: string}>>('uploads/server-max-file-size').subscribe(response => {\n            this.serverMaxUploadSize$.next(response.maxSize);\n        });\n    }\n}\n\nfunction removeLeadingDot(values: string[]) {\n    return values.map(v => v.replace(/^\\./, ''));\n}\n","/**\n * Flatten specified array of arrays.\n */\nexport function flattenArray<T>(arrays: T[][]): T[] {\n    return [].concat.apply([], arrays);\n}\n","<div class=\"header\">\n  <div class=\"title\" trans>Recaptcha</div>\n  <div class=\"subtitle\" trans>Configure google recaptcha integration and credentials.</div>\n</div>\n\n<form\n  class=\"body many-inputs\"\n  (submit)=\"saveSettings()\"\n  ngNativeValidate\n  *ngIf=\"state.errors$ | async as errors\"\n>\n  <div class=\"setting-toggle-container\" *ngFor=\"let action of actions\">\n    <mat-slide-toggle\n      [name]=\"action.key\"\n      [id]=\"action.key\"\n      [(ngModel)]=\"state.client[action.key]\"\n      >{{ action.name | trans }}</mat-slide-toggle\n    >\n    <p>{{ action.description | trans }}</p>\n  </div>\n\n  <div\n    class=\"error-group many-inputs no-spacing\"\n    id=\"recaptcha-group\"\n    [class.has-error]=\"errors.recaptcha_group\"\n  >\n    <div class=\"input-container\" [class.has-error]=\"errors['recaptcha.site_key']\">\n      <label for=\"recaptcha.site_key\" trans>Recaptcha V3 Site Key</label>\n      <input\n        name=\"recaptcha.site_key\"\n        id=\"recaptcha.site_key\"\n        [(ngModel)]=\"state.client['recaptcha.site_key']\"\n      />\n      <p class=\"error\" *ngIf=\"errors['recaptcha.site_key']\">{{ errors['recaptcha.site_key'] }}</p>\n    </div>\n\n    <div class=\"input-container\" [class.has-error]=\"errors['recaptcha.secret_key']\">\n      <label for=\"recaptcha.secret_key\" trans>Recaptcha V3 Secret Key</label>\n      <input\n        name=\"recaptcha.secret_key\"\n        id=\"recaptcha.secret_key\"\n        [(ngModel)]=\"state.client['recaptcha.secret_key']\"\n      />\n      <p class=\"error\" *ngIf=\"errors['recaptcha.secret_key']\">\n        {{ errors['recaptcha.secret_key'] }}\n      </p>\n    </div>\n\n    <p class=\"error\" *ngIf=\"errors.recaptcha_group\" [innerHTML]=\"errors.recaptcha_group\"></p>\n  </div>\n\n  <button\n    mat-raised-button\n    color=\"accent\"\n    class=\"button primary update-button\"\n    [disabled]=\"state.loading$ | async\"\n    type=\"submit\"\n    trans\n  >\n    Update\n  </button>\n  <mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"state.loading$ | async\"></mat-progress-bar>\n</form>\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n} from '@angular/core';\nimport {SettingsPanelComponent} from '../settings-panel.component';\nimport {Settings} from '@common/core/config/settings.service';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {CustomHomepage} from '@common/pages/shared/custom-homepage.service';\nimport {ValueLists} from '@common/core/services/value-lists.service';\nimport {SettingsState} from '@common/admin/settings/settings-state.service';\nimport {RECAPTCHA_ACTIONS} from '@common/admin/settings/recaptcha/recaptcha-actions.token';\nimport {RecaptchaAction} from '@common/admin/settings/recaptcha/recaptcha-action';\nimport {flattenArray} from '@common/core/utils/flatten-array';\nimport {SocialAuthService} from '../../../auth/social-auth.service';\n\n@Component({\n    selector: 'recaptcha-settings',\n    templateUrl: './recaptcha-settings.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {class: 'settings-panel'},\n})\nexport class RecaptchaSettingsComponent extends SettingsPanelComponent {\n    public readonly actions: RecaptchaAction[];\n    constructor(\n        public settings: Settings,\n        protected toast: Toast,\n        protected http: AppHttpClient,\n        protected modal: Modal,\n        protected route: ActivatedRoute,\n        protected customHomepage: CustomHomepage,\n        protected valueLists: ValueLists,\n        protected cd: ChangeDetectorRef,\n        protected router: Router,\n        protected social: SocialAuthService,\n        public state: SettingsState,\n        @Inject(RECAPTCHA_ACTIONS) private recaptchaActions: RecaptchaAction[][]\n    ) {\n        super(\n            settings,\n            toast,\n            http,\n            modal,\n            route,\n            customHomepage,\n            valueLists,\n            cd,\n            router,\n            social,\n            state,\n        );\n        this.actions = flattenArray(this.recaptchaActions).reverse();\n    }\n}\n","export class SelectionModel<T> {\n    private readonly selected = [];\n\n    constructor(initialValues: T[], private readonly key: string|'id') {\n        this.selected = [...initialValues];\n        this.key = key || 'id';\n    }\n\n    public isSelected(item: T): boolean {\n        return this.findIndex(item) > -1;\n    }\n\n    public toggle(item: T) {\n        const i = this.findIndex(item);\n        if (i > -1) {\n            this.selected.splice(i, 1);\n        } else {\n            this.selected.push({...item});\n        }\n    }\n\n    public updateValue(newValue: T) {\n        const i = this.findIndex(newValue);\n        this.selected[i] = {...newValue};\n    }\n\n    public getValue(key: number|string): T {\n        return this.selected.find(item => item[this.key] === key);\n    }\n\n    public values(): T[] {\n        return [...this.selected];\n    }\n\n    private findIndex(item: T): number {\n        return this.selected.findIndex(p => p[this.key] === item[this.key]);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpCacheClient} from '../../core/http/http-cache-client';\nimport {Observable} from 'rxjs';\nimport {Role} from '../../core/types/models/Role';\nimport {PaginatedBackendResponse} from '../../core/types/pagination/paginated-backend-response';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoleService {\n    constructor(private httpClient: HttpCacheClient) {}\n\n    getRoles(): PaginatedBackendResponse<Role> {\n        return this.httpClient.getWithCache('roles?perPage=15');\n    }\n\n    createNew(data): Observable<Role> {\n        return this.httpClient.post('roles', data);\n    }\n\n    update(roleId, data): Observable<Role> {\n        return this.httpClient.put('roles/' + roleId, data);\n    }\n\n    delete(roleId: number): Observable<any> {\n        return this.httpClient.delete('roles/' + roleId);\n    }\n\n    addUsers(roleId: number, userIds: number[]): Observable<Role> {\n        return this.httpClient.post('roles/' + roleId + '/add-users', {userIds});\n    }\n\n    removeUsers(roleId: number, userIds: number[]): Observable<Role> {\n        return this.httpClient.post('roles/' + roleId + '/remove-users', {ids: userIds});\n    }\n}\n","<div class=\"modal-header\">\n    <h2 class=\"modal-title\" mat-dialog-title trans>Select Roles</h2>\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\"><mat-icon svgIcon=\"close\"></mat-icon></button>\n</div>\n\n<form (ngSubmit)=\"confirm()\" ngNativeValidate>\n    <mat-dialog-content>\n        <ul class=\"unstyled-list selection-list\">\n            <li class=\"list-item\" *ngFor=\"let role of allRoles$ | async\">\n                <div class=\"list-item-header\" (click)=\"selectionModel.toggle(role)\" matRipple>\n                    <div class=\"meta\">\n                        <div class=\"list-item-name\">{{role.name}}</div>\n                    </div>\n                    <mat-pseudo-checkbox [state]=\"selectionModel.isSelected(role) ? 'checked' : 'unchecked'\"></mat-pseudo-checkbox>\n                </div>\n            </li>\n        </ul>\n    </mat-dialog-content>\n\n    <mat-dialog-actions class=\"buttons right mat-dialog-actions\">\n        <button (click)=\"close()\" mat-button type=\"button\" trans>Cancel</button>\n        <button type=\"submit\" mat-raised-button color=\"accent\" trans>Select</button>\n    </mat-dialog-actions>\n</form>\n","import {ChangeDetectionStrategy, Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Role} from '@common/core/types/models/Role';\nimport {RoleService} from '@common/admin/roles/role.service';\nimport {SelectionModel} from '@common/core/utils/SelectionModel';\nimport {BehaviorSubject} from 'rxjs';\n\nexport interface SelectRolesModalData {\n    initialRoles?: Role[];\n}\n\n@Component({\n    selector: 'select-roles-modal',\n    templateUrl: './select-roles-modal.component.html',\n    styleUrls: ['./select-roles-modal.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectRolesModalComponent implements OnInit {\n    public allRoles$ = new BehaviorSubject<Role[]>([]);\n    public selectionModel = new SelectionModel(this.data.initialRoles || [], 'id');\n\n    constructor(\n        private rolesService: RoleService,\n        private dialogRef: MatDialogRef<SelectRolesModalComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: SelectRolesModalData,\n    ) {}\n\n    public ngOnInit() {\n        this.fetchAllRoles();\n    }\n\n    public confirm() {\n        this.close(this.selectionModel.values());\n    }\n\n    public close(data?) {\n        this.dialogRef.close(data);\n    }\n\n    private fetchAllRoles() {\n        this.rolesService.getRoles()\n            .subscribe(response => this.allRoles$.next(response.pagination.data));\n    }\n}\n","<div class=\"panel-outter\" *ngIf=\"currentUser.hasPermission('roles.update')\">\n    <div class=\"header\">\n        <div class=\"title\" trans>Roles</div>\n        <div class=\"add-button\" *ngIf=\"!readonly\">\n            <button mat-flat-button color=\"accent\" class=\"select-roles-modal-button\" (click)=\"openSelectRolesModal()\" type=\"button\" trans>Manage</button>\n        </div>\n    </div>\n    <div class=\"panel-body roles\">\n        <div class=\"no-permissions\" *ngIf=\"!(roles$ | async)?.length\" trans>No roles yet.</div>\n\n        <mat-chip-list [selectable]=\"false\">\n            <mat-chip (removed)=\"detachRole(role)\" [removable]=\"true\" *ngFor=\"let role of roles$ | async\" [disabled]=\"readonly\">\n                <span class=\"role-name\">{{role.name}}</span>\n                <mat-icon svgIcon=\"cancel\" matChipRemove></mat-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {Role} from '@common/core/types/models/Role';\nimport {Users} from '@common/auth/users.service';\nimport {RoleService} from '@common/admin/roles/role.service';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {SelectRolesModalComponent} from '@common/admin/users/select-roles-modal/select-roles-modal.component';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {BehaviorSubject} from 'rxjs';\n\n@Component({\n    selector: 'role-manager',\n    templateUrl: './role-manager.component.html',\n    styleUrls: ['./role-manager.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: RoleManagerComponent,\n        multi: true,\n    }]\n})\nexport class RoleManagerComponent implements ControlValueAccessor {\n    public roles$ = new BehaviorSubject<Role[]>([]);\n    @Input() readonly = false;\n    private propagateChange: Function;\n\n    constructor(\n        public users: Users,\n        private roleApi: RoleService,\n        private modal: Modal,\n        public currentUser: CurrentUser,\n    ) {}\n\n    public openSelectRolesModal() {\n        this.modal.open(\n            SelectRolesModalComponent,\n            {initialRoles: this.roles$.value},\n        ).afterClosed().subscribe((roles: Role[]) => {\n            if ( ! roles) return;\n            this.setRoles(roles);\n        });\n    }\n\n    public setRoles(roles: Role[]) {\n        this.roles$.next(roles);\n        this.propagateChange(this.roles$.value);\n    }\n\n    public detachRole(role: Role) {\n        const roles = this.roles$.value.filter(r => r.id !== role.id);\n        this.setRoles(roles);\n    }\n\n    public writeValue(value: Role[]) {\n        this.roles$.next(value);\n    }\n\n    public registerOnChange(fn: Function) {\n        this.propagateChange = fn;\n    }\n\n    public registerOnTouched() {}\n}\n","<div class=\"modal-header\">\n    <h2 class=\"modal-title mat-dialog-title\" mat-dialog-title trans>Select Permissions</h2>\n    <button type=\"button\" tabindex=\"-1\" (click)=\"close()\" class=\"close-button no-style\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<mat-dialog-content>\n    <mat-accordion>\n        <mat-expansion-panel\n            class=\"mat-elevation-z2\"\n            *ngFor=\"let pair of filteredPermissions$ | async | keyvalue\"\n            [expanded]=\"false\"\n        >\n            <mat-expansion-panel-header>\n                <mat-panel-title trans>{{ pair.key.replace('_', ' ') }}</mat-panel-title>\n            </mat-expansion-panel-header>\n\n            <ul class=\"unstyled-list selection-list\">\n                <li class=\"list-item\" *ngFor=\"let permission of pair.value\">\n                    <div\n                        class=\"list-item-header\"\n                        (click)=\"selectionModel.toggle(permission)\"\n                        matRipple\n                    >\n                        <div class=\"meta\">\n                            <div class=\"list-item-name\" trans>\n                                {{ permission.display_name || permission.name }}\n                            </div>\n                            <p *ngIf=\"permission.description\" class=\"list-item-description\" trans>\n                                {{ permission.description }}\n                            </p>\n                        </div>\n                        <mat-pseudo-checkbox\n                            [state]=\"\n                                selectionModel.isSelected(permission) ? 'checked' : 'unchecked'\n                            \"\n                        ></mat-pseudo-checkbox>\n                    </div>\n                    <div\n                        class=\"list-item-restrictions\"\n                        *ngIf=\"\n                            !data?.hideRestrictions &&\n                            permission.restrictions?.length &&\n                            selectionModel.isSelected(permission)\n                        \"\n                    >\n                        <ng-container *ngFor=\"let restriction of permission.restrictions\">\n                            <ng-container [ngSwitch]=\"restriction.type\">\n                                <div\n                                    class=\"input-container list-item-restriction\"\n                                    *ngSwitchCase=\"'number'\"\n                                >\n                                    <label [for]=\"permission.name + '-' + restriction.name\">{{\n                                        viewName(restriction.name)\n                                    }}</label>\n                                    <input\n                                        type=\"number\"\n                                        min=\"0\"\n                                        [id]=\"permission.name + '-' + restriction.name\"\n                                        [(ngModel)]=\"restriction.value\"\n                                    />\n                                    <p class=\"description\" *ngIf=\"restriction.description\" trans>\n                                        {{ restriction.description }}\n                                    </p>\n                                </div>\n                                <div\n                                    class=\"setting-toggle-container list-item-restriction\"\n                                    *ngSwitchCase=\"'bool'\"\n                                >\n                                    <mat-slide-toggle\n                                        [id]=\"permission.name + '-' + restriction.name\"\n                                        *ngSwitchCase=\"'bool'\"\n                                        [(ngModel)]=\"restriction.value\"\n                                        trans\n                                        >{{ viewName(restriction.name) }}</mat-slide-toggle\n                                    >\n                                    <p class=\"description\" *ngIf=\"restriction.description\" trans>\n                                        {{ restriction.description }}\n                                    </p>\n                                </div>\n                            </ng-container>\n                        </ng-container>\n                    </div>\n                </li>\n            </ul>\n        </mat-expansion-panel>\n    </mat-accordion>\n\n    <div class=\"show-advanced-container\">\n        <mat-slide-toggle [formControl]=\"showAdvancedControl\" trans\n            >Show advanced permissions</mat-slide-toggle\n        >\n    </div>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <button (click)=\"close()\" mat-button type=\"button\" trans>Cancel</button>\n    <button type=\"submit\" mat-raised-button color=\"accent\" (click)=\"confirm()\" trans>Select</button>\n</mat-dialog-actions>\n\n<loading-indicator\n    [isVisible]=\"loading$ | async\"\n    class=\"overlay overlay-partial\"\n></loading-indicator>\n","import {ChangeDetectionStrategy, Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Permission} from '@common/core/types/models/permission';\nimport {ValueLists} from '@common/core/services/value-lists.service';\nimport {SelectionModel} from '@common/core/utils/SelectionModel';\nimport {groupBy} from '@common/core/utils/group-by';\nimport {flattenArray} from '@common/core/utils/flatten-array';\nimport {BehaviorSubject} from 'rxjs';\nimport {filter, finalize} from 'rxjs/operators';\nimport {FormControl} from '@angular/forms';\n\nexport interface SelectPermissionsModalData {\n    initialPermissions: Permission[];\n    valueListKey: string;\n    hideRestrictions: boolean;\n}\n\n@Component({\n    selector: 'select-permissions-modal',\n    templateUrl: './select-permissions-modal.component.html',\n    styleUrls: ['./select-permissions-modal.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectPermissionsModalComponent implements OnInit {\n    public allPermissions$ = new BehaviorSubject<{[key: string]: Permission[]}>({});\n    public filteredPermissions$ = new BehaviorSubject<{[key: string]: Permission[]}>({});\n    public loading$ = new BehaviorSubject(false);\n    public selectionModel = new SelectionModel(this.data.initialPermissions || [], 'name');\n    public showAdvancedControl = new FormControl(false);\n\n    constructor(\n        private dialogRef: MatDialogRef<SelectPermissionsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: SelectPermissionsModalData,\n        private values: ValueLists,\n    ) {}\n\n    ngOnInit() {\n        this.fetchAllPermissions();\n        this.showAdvancedControl.valueChanges.subscribe(() => {\n            this.setShowAdvanced();\n        });\n    }\n\n    public confirm() {\n        this.close(this.getSelectedPermissions());\n    }\n\n    public close(permissions?: Permission[]) {\n        this.dialogRef.close(permissions);\n    }\n\n    private fetchAllPermissions() {\n        const valueListKey = this.data.valueListKey || 'permissions';\n        this.loading$.next(true);\n        this.values.get([valueListKey])\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                const allPermissions = groupBy<Permission>(this.mergeRestrictions(response[valueListKey]), 'group');\n                this.allPermissions$.next(allPermissions);\n                this.setShowAdvanced();\n            });\n    }\n\n    public setShowAdvanced() {\n        const allPermissions = this.allPermissions$.value;\n        const filteredPermissions = {};\n        Object.keys(allPermissions).forEach(groupName => {\n            const groupPermissions = allPermissions[groupName].filter(permission => {\n                return this.showAdvancedControl.value || !permission.advanced;\n            });\n            if (groupPermissions.length) {\n                filteredPermissions[groupName] = groupPermissions;\n            }\n        });\n        this.filteredPermissions$.next(filteredPermissions);\n    }\n\n    private getSelectedPermissions(): Permission[] {\n        const allPermissions = flattenArray(Object.values(this.allPermissions$.value));\n        return allPermissions.filter(permission => {\n            return this.selectionModel.isSelected(permission);\n        });\n    }\n\n    private mergeRestrictions(allPermissions: Permission[]) {\n        return allPermissions.map(permission => {\n            // merge restriction definition from \"allPermissions\" and value set for that\n            // restriction on pivot table so can bind ngModel to \"allRestrictions\" variable\n            const modelPermission = this.selectionModel.getValue(permission.name);\n            permission.restrictions = (permission.restrictions || []).map(restriction => {\n                let modelRestriction = {};\n                if (modelPermission && modelPermission.restrictions) {\n                    modelRestriction = modelPermission.restrictions.find(r => r.name === restriction.name) || {};\n                }\n                return {...restriction, ...modelRestriction};\n            });\n            return permission;\n        });\n    }\n\n    public viewName(name: string) {\n        return name.replace(/_/g, ' ');\n    }\n}\n","export const groupBy = function<T>(array: object[], key: string): {[key: string]: T[]} {\n    return array.reduce(function(rv, x) {\n        (rv[x[key]] = rv[x[key]] || []).push(x);\n        return rv;\n    }, {}) as {[key: string]: T[]};\n};\n\n","<div class=\"header\">\n    <span class=\"title\" trans>Permissions</span>\n    <button mat-flat-button color=\"accent\" (click)=\"showSelectPermissionsModal()\" type=\"button\" trans>Manage</button>\n</div>\n<div class=\"manage-permissions\">\n    <div class=\"no-permissions\" *ngIf=\"!(permissions$ | async)?.length\" trans>No permissions yet.</div>\n\n    <mat-chip-list [selectable]=\"false\">\n        <mat-chip (removed)=\"removePermission(permission.name)\" [removable]=\"true\" *ngFor=\"let permission of permissions$ | async\">\n            <span>\n                <span trans>{{permission.name}}</span>\n                <ng-container *ngIf=\"getCountRestriction(permission) as restriction\">\n                    <span *ngIf=\"restriction.value\">({{restriction.value + ' ' + 'max' | trans}})</span>\n                </ng-container>\n            </span>\n            <mat-icon svgIcon=\"cancel\" matChipRemove></mat-icon>\n        </mat-chip>\n    </mat-chip-list>\n</div>\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {\n    SelectPermissionsModalComponent,\n    SelectPermissionsModalData\n} from '@common/admin/permissions/select-permissions-modal/select-permissions-modal.component';\nimport {Permission, PermissionRestriction} from '@common/core/types/models/permission';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {BehaviorSubject} from 'rxjs';\n\n@Component({\n    selector: 'permission-manager',\n    templateUrl: './permission-manager.component.html',\n    styleUrls: ['./permission-manager.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: PermissionManagerComponent,\n        multi: true,\n    }]\n})\nexport class PermissionManagerComponent implements ControlValueAccessor {\n    @Input() valueListKey = 'permissions';\n    @Input() hideRestrictions = false;\n    public permissions$ = new BehaviorSubject<Permission[]>([]);\n    private propagateChange: Function;\n\n    constructor(private modal: Modal) {}\n\n    public showSelectPermissionsModal() {\n        this.modal.open(\n            SelectPermissionsModalComponent,\n            {\n                initialPermissions: this.permissions$.value,\n                valueListKey: this.valueListKey,\n                hideRestrictions: this.hideRestrictions,\n            } as SelectPermissionsModalData,\n        ).afterClosed()\n        .subscribe(permissions => {\n            if ( ! permissions) return;\n            this.setPermissions(permissions);\n        });\n    }\n\n    public removePermission(name: string) {\n        const permissions = this.permissions$.value.filter(p => p.name !== name);\n        this.setPermissions(permissions);\n    }\n\n    public setPermissions(permissions: Permission[]) {\n        this.permissions$.next(permissions);\n        this.propagateChange(this.permissions$.value);\n    }\n\n    public getCountRestriction(permission: Permission): PermissionRestriction {\n        return permission.restrictions.find(r => r.name === 'count');\n    }\n\n    public writeValue(value: Permission[]) {\n        this.permissions$.next(value);\n    }\n\n    public registerOnChange(fn: Function) {\n        this.propagateChange = fn;\n    }\n\n    public registerOnTouched() {}\n}\n","<div class=\"modal-header\">\n    <h2 class=\"modal-title\" mat-dialog-title *ngIf=\"data.user\" trans>Update User Details</h2>\n    <h2 class=\"modal-title\" mat-dialog-title *ngIf=\"!data.user\" trans>Create a New User</h2>\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form autocomplete=\"off\" (ngSubmit)=\"confirm()\" [formGroup]=\"form\" *ngIf=\"errors$ | async as errors\" ngNativeValidate>\n    <mat-dialog-content class=\"many-inputs\">\n        <div class=\"input-container\" *ngIf=\"!data.user\">\n            <label for=\"crupdate-user-email\" trans>Email</label>\n            <input type=\"email\" id=\"crupdate-user-email\" formControlName=\"email\" required>\n            <div class=\"error\" *ngIf=\"errors?.email\">{{errors?.email}}</div>\n        </div>\n\n        <div class=\"input-container\" *ngIf=\"!data.user\">\n            <label for=\"crupdate-user-password\" trans>Password</label>\n            <input type=\"password\" id=\"crupdate-user-password\" formControlName=\"password\" required>\n            <div class=\"error\" *ngIf=\"errors?.password\">{{errors?.password}}</div>\n        </div>\n\n        <div class=\"avatar-container\">\n            <div class=\"input-container avatar-input-container\">\n                <upload-image-control [uploadConfig]=\"avatarUploadConfig()\" class=\"inherit-size\" formControlName=\"avatar\"></upload-image-control>\n                <div class=\"error\" *ngIf=\"errors?.avatar\">{{errors?.avatar}}</div>\n            </div>\n            <div class=\"many-inputs\">\n                <div class=\"input-container\">\n                    <label for=\"crupdate-user-first_name\" trans>First Name</label>\n                    <input type=\"text\" id=\"crupdate-user-first_name\" formControlName=\"first_name\">\n                    <div class=\"error\" *ngIf=\"errors?.first_name\">{{errors?.first_name}}</div>\n                </div>\n\n                <div class=\"input-container\">\n                    <label for=\"crupdate-user-last_name\" trans>Last Name</label>\n                    <input type=\"text\" id=\"crupdate-user-last_name\" formControlName=\"last_name\">\n                    <div class=\"error\" *ngIf=\"errors?.last_name\">{{errors?.last_name}}</div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"input-container\" [class.resend-button-visible]=\"shouldShowResendButton()\">\n            <label for=\"crupdate-user-confirmed\" trans>Email Confirmed</label>\n            <div class=\"confirmed-select-wrapper\">\n                <select id=\"crupdate-user-confirmed\" formControlName=\"email_verified_at\">\n                    <option [ngValue]=\"true\" trans>Yes</option>\n                    <option [ngValue]=\"false\" trans>No</option>\n                </select>\n                <button mat-flat-button color=\"accent\" type=\"button\" class=\"resend-confirmation-button\" [disabled]=\"loading$ | async\" (click)=\"sendEmailConfirmation()\" trans>Resend</button>\n            </div>\n            <div class=\"error\" *ngIf=\"errors?.email_verified_at\">{{errors?.email_verified_at}}</div>\n        </div>\n\n        <div class=\"input-container\">\n            <label for=\"crupdate-user-new-password\" trans>New Password</label>\n            <div class=\"input-with-action\">\n                <input type=\"text\" id=\"crupdate-user-new-password\" formControlName=\"password\">\n                <button type=\"button\" mat-flat-button color=\"accent\" (click)=\"generateNewPassword()\" trans>Generate</button>\n            </div>\n        </div>\n\n        <space-input label=\"Available Space\" formControlName=\"available_space\">\n            <p class=\"description\" trans>Disk space available to user. If left empty, it will be inherited from value set in \"admin -> settings -> uploading\" page.</p>\n            <div class=\"error\" *ngIf=\"errors?.available_space\">{{errors?.available_space}}</div>\n        </space-input>\n\n        <role-manager formControlName=\"roles\"></role-manager>\n        <div class=\"error\" *ngIf=\"errors?.roles\">{{errors?.roles}}</div>\n\n        <permission-manager formControlName=\"permissions\" *ngIf=\"currentUser.hasPermission('permissions.update')\"></permission-manager>\n        <div class=\"error\" *ngIf=\"errors?.permissions\">{{errors?.permissions}}</div>\n    </mat-dialog-content>\n\n    <div class=\"buttons right mat-dialog-actions\" mat-dialog-actions>\n        <button (click)=\"close()\" type=\"button\" mat-button class=\"button cancel\" trans>Cancel</button>\n        <button type=\"submit\" class=\"button primary\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\">\n            <span *ngIf=\"data.user\" trans>Update User</span>\n            <span *ngIf=\"!data.user\" trans>Create User</span>\n        </button>\n    </div>\n</form>\n","import {ChangeDetectionStrategy, Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {finalize} from 'rxjs/operators';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {User} from '@common/core/types/models/User';\nimport {Users} from '@common/auth/users.service';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {BehaviorSubject} from 'rxjs';\nimport {FormBuilder} from '@angular/forms';\nimport {AuthService} from '@common/auth/auth.service';\nimport {Settings} from '@common/core/config/settings.service';\nimport {UploadApiConfig} from '@common/uploads/types/upload-api-config';\nimport {AvatarValidator} from '@common/account-settings/avatar-validator';\nimport {UploadUri} from '@common/uploads/types/upload-uri.enum';\nimport {randomString} from '@common/core/utils/random-string';\nimport {HttpErrors} from '@common/core/http/errors/http-errors.enum';\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\n\nexport interface CrupdateUserModalData {\n    user?: User;\n}\n\n@Component({\n    selector: 'crupdate-user-modal',\n    templateUrl: './crupdate-user-modal.component.html',\n    styleUrls: ['./crupdate-user-modal.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CrupdateUserModalComponent implements OnInit {\n    public loading$ = new BehaviorSubject<boolean>(false);\n    public form = this.fb.group({\n        email: [''],\n        password: [''],\n        avatar: [''],\n        first_name: [''],\n        last_name: [''],\n        email_verified_at: [false],\n        available_space: [''],\n        roles: [],\n        permissions: [],\n    });\n    public errors$ = new BehaviorSubject<Partial<User>>({});\n\n    constructor(\n        private dialogRef: MatDialogRef<CrupdateUserModalComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: CrupdateUserModalData,\n        public users: Users,\n        private toast: Toast,\n        public currentUser: CurrentUser,\n        private fb: FormBuilder,\n        private auth: AuthService,\n        private settings: Settings,\n        private avatarValidator: AvatarValidator,\n    ) {}\n\n    ngOnInit() {\n        if (this.data.user) {\n            // password input should always be empty\n            this.form.patchValue({\n                ...this.data.user,\n                password: null,\n                email_verified_at: !!this.data.user.email_verified_at\n            });\n        }\n    }\n    \n    public confirm() {\n        if (this.loading$.value) {\n            return;\n        }\n        let request;\n        const payload = this.getPayload();\n\n        this.loading$.next(true);\n\n        if (this.data.user) {\n            request = this.users.update(this.data.user.id, payload);\n        } else {\n            request = this.users.create(payload);\n        }\n\n        request.pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.close(response.user);\n                const action = this.data.user ? 'updated' : 'created';\n                this.toast.open('User ' + action);\n            }, (errResponse: BackendErrorResponse) => this.errors$.next(errResponse.errors));\n    }\n    \n    public close(data?: any) {\n        this.dialogRef.close(data);\n    }\n    \n    private getPayload() {\n        const payload = {...this.form.value};\n        payload.roles = (payload.roles || []).map(role => role.id);\n        payload.permissions = (payload.permissions || []);\n        if ( ! payload.password) {\n            delete payload.password;\n        }\n        payload.email_verified_at = payload.email_verified_at ? new Date() : null;\n        return payload;\n    }\n\n    public sendEmailConfirmation() {\n        this.loading$.next(true);\n        this.auth.resendEmailConfirmation(this.data.user.email)\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(() => {\n                this.toast.open('Verification email re-sent.');\n            }, (errResponse: BackendErrorResponse) => {\n                this.toast.open(errResponse.message || HttpErrors.Default);\n            });\n    }\n\n    public shouldShowResendButton(): boolean {\n        return this.data.user &&\n            this.data.user.id &&\n            this.settings.get('require_email_confirmation') &&\n            !this.form.get('email_verified_at').value;\n    }\n\n    public avatarUploadConfig(): UploadApiConfig {\n        const uri = this.data.user ?\n            `users/${this.data.user.id}/avatar` :\n            UploadUri.Image;\n        return {\n            uri: uri,\n            httpParams: {diskPrefix: 'avatars'},\n            validator: this.avatarValidator,\n        };\n    }\n\n    public generateNewPassword() {\n        this.form.patchValue({password: randomString(15)});\n    }\n}\n","import {\n    DatatableFilter,\n    FilterControlType,\n    FilterOperator,\n} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/datatable-filter';\nimport {\n    CreatedAtFilter,\n    UpdatedAtFilter,\n} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/timestamp-filter';\n\nexport const USER_INDEX_FILTERS: DatatableFilter[] = [\n    new DatatableFilter({\n        type: FilterControlType.Select,\n        key: 'email_verified_at',\n        label: 'Email',\n        description: 'Email verification status',\n        defaultValue: {value: null, operator: FilterOperator.ne},\n        defaultOperator: FilterOperator.ne,\n        options: [\n            {\n                key: 'Confirmed',\n                value: {value: null, operator: FilterOperator.ne},\n            },\n            {\n                key: 'Not Confirmed',\n                value: {value: null, operator: FilterOperator.eq},\n            },\n        ],\n    }),\n    new CreatedAtFilter({\n        description: 'Date user registered or was created',\n    }),\n    new UpdatedAtFilter({\n        description: 'Date user was last updated',\n    }),\n    new DatatableFilter({\n        type: FilterControlType.Select,\n        key: 'subscriptions',\n        label: 'Subscribed',\n        description: 'Whether user is subscribed or not',\n        defaultValue: {value: '*', operator: FilterOperator.has},\n        defaultOperator: FilterOperator.ne,\n        options: [\n            {key: 'Yes', value: {value: '*', operator: FilterOperator.has}},\n            {\n                key: 'No',\n                value: {value: '*', operator: FilterOperator.doesntHave},\n            },\n        ],\n    }),\n];\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n    selector: 'csv-export-info-dialog',\n    templateUrl: './csv-export-info-dialog.component.html',\n    styleUrls: ['./csv-export-info-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CsvExportInfoDialogComponent {\n    constructor(\n        private dialogRef: MatDialogRef<CsvExportInfoDialogComponent>,\n    ) {}\n\n    public close() {\n        this.dialogRef.close();\n    }\n}\n","<div class=\"modal-header\">\n    <h2 class=\"modal-title\" mat-dialog-title>CSV Export</h2>\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<div class=\"mat-dialog-contents\" mat-dialog-content>\n    <div class=\"message-container\">\n        <mat-icon svgIcon=\"check\" class=\"success-icon\" color=\"su\"></mat-icon>\n        <div trans>\n            Your request is being processed. We'll email you when the report is ready to download. In\n            certain cases, it might take a little longer, depending on the number of items beings\n            exported and the volume of activity.\n        </div>\n    </div>\n</div>\n\n<div class=\"buttons right mat-dialog-actions\" mat-dialog-actions>\n    <button\n        mat-raised-button\n        color=\"accent\"\n        class=\"button primary submit-button\"\n        cdkFocusInitial\n        (click)=\"close()\"\n        trans\n    >\n        Got it\n    </button>\n</div>\n","import {Injectable} from '@angular/core';\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {downloadFileFromUrl} from '@common/uploads/utils/download-file-from-url';\nimport {CsvExportInfoDialogComponent} from '@common/csv/csv-info-dialog/csv-export-info-dialog.component';\n\nexport interface CsvExportResponse {\n    downloadPath?: string;\n    result?: 'jobQueued';\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CsvExporterService {\n    constructor(private http: AppHttpClient, private modal: Modal) {}\n\n    export(url: string, params: object = {}) {\n        return this.http.post(url, params).subscribe((response: CsvExportResponse) => {\n          if (response.downloadPath) {\n            downloadFileFromUrl(response.downloadPath);\n          } else {\n            this.modal.open(CsvExportInfoDialogComponent);\n          }\n      });\n    }\n}\n","<div class=\"datatable-page-header\">\n  <h1 trans>Users</h1>\n\n  <div class=\"header\">\n    <datatable-filters pluralName=\"users\" [filters]=\"filters\"></datatable-filters>\n    <div class=\"action-buttons\">\n      <button mat-raised-button class=\"btn-with-dropdown-icon\" [matMenuTriggerFor]=\"menu\">\n        <span trans>More Actions</span>\n        <mat-icon svgIcon=\"keyboard-arrow-down\"></mat-icon>\n      </button>\n      <mat-menu #menu=\"matMenu\">\n        <button mat-menu-item (click)=\"exportCsv()\">\n          <mat-icon svgIcon=\"export-csv\"></mat-icon>\n          <span trans>Export users in CSV</span>\n        </button>\n      </mat-menu>\n      <button\n        mat-raised-button\n        color=\"accent\"\n        (click)=\"showCrupdateUserModal()\"\n        class=\"button-with-icon\"\n      >\n        <mat-icon svgIcon=\"add\"></mat-icon>\n        <span trans>Add New User</span>\n      </button>\n    </div>\n  </div>\n</div>\n\n<div class=\"datatable responsive-table\">\n  <mat-progress-bar\n    class=\"loading-bar\"\n    mode=\"indeterminate\"\n    color=\"accent\"\n    *ngIf=\"datatable.paginator && datatable.paginator.loading$ | async\"\n  ></mat-progress-bar>\n  <table class=\"material-table\">\n    <thead>\n      <tr>\n        <th table-header-checkbox></th>\n        <th table-sort-header=\"email\" trans>User</th>\n        <th *ngIf=\"settings.get('billing.enable')\" trans>Subscribed</th>\n        <th trans>Roles</th>\n        <th table-sort-header trans>First Name</th>\n        <th table-sort-header trans>Last Name</th>\n        <th table-sort-header trans>Created At</th>\n        <th></th>\n      </tr>\n      <tr *ngIf=\"datatable.selectedRows$.value.length as selectedCount\">\n          <th colspan=\"8\">\n              <div\n                class=\"bulk-actions-title\"\n                [transValues]=\"{count: selectedCount, resource: 'user(s)'}\"\n                trans\n              >\n                  :count :resource selected:\n              </div>\n              <div class=\"bulk-actions\">\n                  <button\n                    mat-raised-button\n                    color=\"warn\"\n                    (click)=\"maybeDeleteSelectedUsers()\"\n                    *ngIf=\"currentUser.hasPermission('users.delete')\"\n                    trans\n                  >\n                      Delete\n                  </button>\n              </div>\n          </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let user of users$ | async\">\n        <td [table-body-checkbox]=\"user.id\"></td>\n        <td>\n          <user-column [user]=\"user\"></user-column>\n        </td>\n        <td data-label=\"Subscribed\" *ngIf=\"settings.get('billing.enable')\">\n          {{ user.subscriptions?.length ? 'Yes' : 'No' }}\n        </td>\n        <td data-label=\"Roles\">{{ makeRolesList(user.roles) }}</td>\n        <td data-label=\"First Name\">{{ user.first_name || '-' }}</td>\n        <td data-label=\"Last Name\">{{ user.last_name || '-' }}</td>\n        <td>{{ user.created_at | formattedDate }}</td>\n        <td class=\"edit-column\">\n          <button\n            mat-icon-button\n            (click)=\"showCrupdateUserModal(user)\"\n            *ngIf=\"currentUser.hasPermission('users.update')\"\n            [matTooltip]=\"'Edit user' | trans\"\n          >\n            <mat-icon svgIcon=\"edit\"></mat-icon>\n          </button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <no-results-message svgImage=\"people.svg\" *ngIf=\"datatable.paginator.noResults$ | async\">\n    <span primary-text trans>No users have been created yet</span>\n  </no-results-message>\n  <datatable-footer></datatable-footer>\n</div>\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\nimport {CrupdateUserModalComponent} from './crupdate-user-modal/crupdate-user-modal.component';\nimport {User} from '@common/core/types/models/User';\nimport {Users} from '@common/auth/users.service';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {Settings} from '@common/core/config/settings.service';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {HttpErrors} from '@common/core/http/errors/http-errors.enum';\nimport {Role} from '@common/core/types/models/Role';\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\nimport {DatatableService} from '../../datatable/datatable.service';\nimport {Observable} from 'rxjs';\nimport {CsvExporterService} from '@common/csv/csv-exporter.service';\nimport { USER_INDEX_FILTERS } from '@common/admin/users/user-index-filters';\n\n@Component({\n    selector: 'user-index',\n    templateUrl: './user-index.component.html',\n    styleUrls: ['./user-index.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [DatatableService],\n})\nexport class UserIndexComponent implements OnInit, OnDestroy {\n    filters = USER_INDEX_FILTERS;\n    users$ = this.datatable.data$ as Observable<User[]>;\n\n    constructor(\n        private userService: Users,\n        public currentUser: CurrentUser,\n        public settings: Settings,\n        private toast: Toast,\n        public datatable: DatatableService<User>,\n        private csv: CsvExporterService\n    ) {}\n\n    ngOnInit() {\n        this.datatable.init({\n            uri: Users.BASE_URI,\n            staticParams: {\n                with: ['subscriptions']\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.datatable.destroy();\n    }\n\n    public makeRolesList(roles: Role[]): string {\n        return roles\n            .slice(0, 3)\n            .map(role => role.name)\n            .join(', ');\n    }\n\n    public maybeDeleteSelectedUsers() {\n        this.datatable.confirmResourceDeletion('users').subscribe(() => {\n            this.userService\n                .delete(this.datatable.selectedRows$.value)\n                .subscribe(\n                    () => {\n                        this.datatable.reset();\n                        this.toast.open('Deleted selected users');\n                    },\n                    (errResponse: BackendErrorResponse) => {\n                        this.toast.open(\n                            errResponse.message || HttpErrors.Default\n                        );\n                    }\n                );\n        });\n    }\n\n    public showCrupdateUserModal(user?: User) {\n        this.datatable\n            .openCrupdateResourceModal(CrupdateUserModalComponent, {user})\n            .subscribe();\n    }\n\n    exportCsv() {\n        this.csv.export(Users.EXPORT_CSV_URI);\n    }\n}\n","import {Permission} from '@common/core/types/models/permission';\n\nexport class Role {\n    id: number;\n    name: string;\n    type: string;\n    description: string;\n    permissions?: Permission[];\n    default: boolean;\n    guests: boolean;\n    internal: boolean;\n    created_at?: string;\n    updated_at?: string;\n\n    constructor(params: object = {}) {\n        for (const name in params) {\n            this[name] = params[name];\n        }\n    }\n}\n","<div class=\"modal-header\">\n    <h2 class=\"modal-title mat-dialog-title\" mat-dialog-title *ngIf=\"data.role\" trans>Update Role</h2>\n    <h2 class=\"modal-title mat-dialog-title\" mat-dialog-title *ngIf=\"!data.role\" trans>Create a New Role</h2>\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\"><mat-icon svgIcon=\"close\"></mat-icon></button>\n</div>\n\n<form autocomplete=\"off\" (submit)=\"confirm()\" *ngIf=\"errors$ | async as errors\" [formGroup]=\"form\" ngNativeValidate>\n   <div class=\"many-inputs mat-dialog-content\" mat-dialog-content>\n       <div class=\"input-container\">\n           <label for=\"name\" trans>Name</label>\n           <input type=\"text\" formControlName=\"name\" id=\"name\" required>\n           <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\n       </div>\n\n       <div class=\"input-container\">\n           <label for=\"description\" trans>Description</label>\n           <textarea type=\"text\" id=\"description\" formControlName=\"description\" maxlength=\"190\"></textarea>\n       </div>\n\n       <div class=\"input-container\" *ngIf=\"settings.get('workspaces.integrated')\">\n           <label for=\"type\" trans>Type</label>\n           <select id=\"type\" formControlName=\"type\">\n               <option value=\"sitewide\" trans>Site Wide</option>\n               <option value=\"workspace\" trans>Workspace</option>\n           </select>\n       </div>\n\n       <permission-manager formControlName=\"permissions\" [valueListKey]=\"form.get('type').value === 'workspace' ? 'workspacePermissions' : 'permissions'\" [hideRestrictions]=\"data?.role?.guests\"></permission-manager>\n       <div class=\"error\" *ngIf=\"errors?.permissions\">{{errors?.permissions}}</div>\n\n        <ng-container *ngIf=\"!data.role?.internal\">\n            <div class=\"setting-container\">\n                <mat-slide-toggle formControlName=\"default\" id=\"default\" trans>Default</mat-slide-toggle>\n                <p trans>Assign this role to new users automatically.</p>\n                <div class=\"error\" *ngIf=\"errors.default\">{{errors.default}}</div>\n            </div>\n\n            <div class=\"setting-container\" *ngIf=\"form.get('type').value === 'sitewide'\">\n                <mat-slide-toggle id=\"guest\" formControlName=\"guests\" trans>Guests</mat-slide-toggle>\n                <p trans>Assign this role to guests (not logged in users).</p>\n                <div class=\"error\" *ngIf=\"errors.guests\">{{errors.guests}}</div>\n            </div>\n        </ng-container>\n   </div>\n\n    <div class=\"buttons right mat-dialog-actions\" mat-dialog-actions>\n        <button (click)=\"close()\" type=\"button\" class=\"button cancel\" mat-button trans>Cancel</button>\n        <button type=\"submit\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\">\n            <span *ngIf=\"data.role\" trans>Update</span>\n            <span *ngIf=\"!data.role\" trans>Create</span>\n        </button>\n    </div>\n</form>\n","import {ChangeDetectionStrategy, Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Role} from '@common/core/types/models/Role';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {RoleService} from '@common/admin/roles/role.service';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {FormBuilder} from '@angular/forms';\nimport {BehaviorSubject} from 'rxjs';\nimport {finalize} from 'rxjs/operators';\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\nimport {Settings} from '../../../core/config/settings.service';\n\nexport interface CrupdateRoleModalData {\n    role: Role;\n}\n\n@Component({\n    selector: 'crupdate-role-modal',\n    templateUrl: './crupdate-role-modal.component.html',\n    styleUrls: ['./crupdate-role-modal.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CrupdateRoleModalComponent implements OnInit {\n    public form = this.fb.group({\n        name: [''],\n        description: [''],\n        type: ['sitewide'],\n        default: [false],\n        guests: [false],\n        permissions: [],\n    });\n    public loading$ = new BehaviorSubject<boolean>(false);\n    public errors$ = new BehaviorSubject<Partial<Role>>({});\n\n    constructor(\n        private toast: Toast,\n        private roleService: RoleService,\n        private modal: Modal,\n        private fb: FormBuilder,\n        private dialogRef: MatDialogRef<CrupdateRoleModalComponent>,\n        public settings: Settings,\n        @Inject(MAT_DIALOG_DATA) public data: CrupdateRoleModalData,\n    ) {}\n\n    ngOnInit() {\n        this.resetState();\n        if (this.data.role) {\n           this.form.patchValue(this.data.role);\n        }\n    }\n\n    public close(data?: Role) {\n        this.resetState();\n        this.dialogRef.close(data);\n    }\n\n    public confirm() {\n        this.loading$.next(true);\n        let request;\n        if (this.data.role) {\n            request = this.roleService.update(this.data.role.id, this.form.value);\n        } else {\n            request = this.roleService.createNew(this.form.value);\n        }\n\n        request\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.toast.open('Role ' + (this.data.role ? 'Updated' : 'Created'));\n                this.close(response.data);\n            }, (errResponse: BackendErrorResponse) => this.errors$.next(errResponse.errors));\n    }\n\n    private resetState() {\n        this.form.reset();\n        this.errors$.next({});\n    }\n}\n","<section class=\"admin-pill-nav\">\n    <div class=\"new-role\">\n        <button mat-flat-button color=\"accent\" class=\"new-role-button\" (click)=\"showCrupdateRoleModal()\" *ngIf=\"currentUser.hasPermission('roles.create')\" trans>New Role</button>\n    </div>\n\n    <ng-container *ngIf=\"breakpoints.isMobile$ | async; else desktopNav\">\n        <button [matMenuTriggerFor]=\"navMenu\" class=\"no-style admin-pill-nav-mobile-selector\">\n            <span class=\"name\" trans>{{(selectedRole$ | async).name}}</span>\n            <mat-icon svgIcon=\"keyboard-arrow-down\"></mat-icon>\n        </button>\n        <mat-menu #navMenu=\"matMenu\" class=\"admin-pill-nav-menu\">\n            <button mat-menu-item *ngFor=\"let role of roles$ | async\" (click)=\"selectRole(role)\" [class.selected]=\"(selectedRole$ | async).id === role.id\">{{role.name}}</button>\n        </mat-menu>\n    </ng-container>\n\n    <ng-template #desktopNav>\n        <aside class=\"admin-pill-nav rounded\">\n            <div class=\"nav-item\" *ngFor=\"let role of roles$ | async\" (click)=\"selectRole(role)\" [class.selected]=\"(selectedRole$ | async).id === role.id\">\n                <div class=\"name\" trans>\n                    <div>{{role.name}}</div>\n                    <div class=\"role-type\">{{role.type}}</div>\n                </div>\n\n                <div class=\"actions\">\n                    <button mat-icon-button [matMenuTriggerFor]=\"actionsMenu\" (click)=\"$event.stopPropagation()\">\n                        <mat-icon svgIcon=\"settings\"></mat-icon>\n                    </button>\n                    <mat-menu #actionsMenu>\n                        <div mat-menu-item (click)=\"showCrupdateRoleModal(role)\" *ngIf=\"currentUser.hasPermission('roles.update')\" trans>Edit</div>\n                        <div mat-menu-item (click)=\"maybeDeleteRole(role)\" *ngIf=\"!role.internal && currentUser.hasPermission('roles.delete')\" trans>Delete</div>\n                    </mat-menu>\n                </div>\n            </div>\n        </aside>\n    </ng-template>\n</section>\n\n<div class=\"datatable responsive-table\">\n    <datatable-header pluralResourceName=\"roles\" [showSelectedActions]=\"false\">\n        <ng-container leftContent *ngIf=\"currentUser.hasPermission('roles.update')\">\n            <button class=\"assign-users-button\" mat-raised-button color=\"accent\" (click)=\"showAssignUsersModal()\" [disabled]=\"!canAssignUsers()\" trans>Assign Users</button>\n            <button mat-raised-button color=\"accent\" (click)=\"maybeDetachUsers()\" [disabled]=\"!(datatable.selectedRows$ | async).length\" trans>Unassign Users</button>\n        </ng-container>\n    </datatable-header>\n    <table class=\"material-table\">\n        <thead>\n        <tr>\n            <th table-header-checkbox></th>\n            <th table-sort-header=\"email\" trans>User</th>\n            <th table-sort-header trans>First Name</th>\n            <th table-sort-header trans>Last Name</th>\n            <th table-sort-header=\"created_at\" trans>Assigned At</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let user of users$ | async\">\n            <td [table-body-checkbox]=\"user.id\"></td>\n            <td class=\"mobile-no-label\">\n                <user-column [user]=\"user\"></user-column>\n            </td>\n            <td data-label=\"First Name\">{{user.first_name || '-'}}</td>\n            <td data-label=\"Last Name\">{{user.last_name || '-'}}</td>\n            <td data-label=\"Assigned At\">{{user.created_at | formattedDate}}</td>\n        </tr>\n        </tbody>\n    </table>\n\n   <ng-container *ngIf=\"selectedRole$ | async as selectedRole; else noRoleSelected\">\n       <no-results-message svgImage=\"people.svg\" *ngIf=\"selectedRole.guests || selectedRole.type !== 'sitewide'; else regularRole\">\n           <span primary-text trans>This role can't be assigned to users.</span>\n       </no-results-message>\n       <ng-template #regularRole>\n           <no-results-message svgImage=\"people.svg\" *ngIf=\"(datatable.paginator.noResults$ | async) && !(datatable.paginator.loading$ | async)\">\n               <span primary-text trans>No users are assigned this role yet.</span>\n           </no-results-message>\n       </ng-template>\n   </ng-container>\n    <ng-template #noRoleSelected>\n        <no-results-message svgImage=\"people.svg\">\n            <span primary-text trans>No role selected.</span>\n        </no-results-message>\n    </ng-template>\n\n    <datatable-footer></datatable-footer>\n</div>\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {CurrentUser} from '../../auth/current-user';\nimport {User} from '../../core/types/models/User';\nimport {Role} from '../../core/types/models/Role';\nimport {RoleService} from './role.service';\nimport {Toast} from '../../core/ui/toast.service';\nimport {Modal} from '../../core/ui/dialogs/modal.service';\nimport {ConfirmModalComponent} from '../../core/ui/confirm-modal/confirm-modal.component';\nimport {CrupdateRoleModalComponent} from './crupdate-role-modal/crupdate-role-modal.component';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {FindUserModalComponent} from '@common/auth/find-user-modal/find-user-modal.component';\nimport {BreakpointsService} from '@common/core/ui/breakpoints.service';\nimport {Users} from '../../auth/users.service';\nimport {DatatableService} from '../../datatable/datatable.service';\nimport {NormalizedModel} from '../../core/types/models/normalized-model';\n\n@Component({\n    selector: 'role-index',\n    templateUrl: './role-index.component.html',\n    styleUrls: ['./role-index.component.scss'],\n    providers: [DatatableService],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RoleIndexComponent implements OnInit {\n    public roles$ = new BehaviorSubject<Role[]>([]);\n    public users$ = this.datatable.data$ as Observable<User[]>;\n    public selectedRole$ = new BehaviorSubject<Role>(new Role());\n\n    constructor(\n        private roleApi: RoleService,\n        private toast: Toast,\n        private modal: Modal,\n        public currentUser: CurrentUser,\n        public breakpoints: BreakpointsService,\n        public datatable: DatatableService<User>,\n    ) {}\n\n    ngOnInit() {\n        this.refreshRoles().then(() => {\n            this.datatable.init({\n                uri: Users.BASE_URI,\n                staticParams: {\n                    role_id: this.selectedRole$.value?.id\n                }\n            });\n        });\n    }\n\n    public selectRole(role: Role) {\n        if (this.selectedRole$.value.id !== role.id) {\n            this.selectedRole$.next(role);\n            this.refreshRoleUsers(role);\n        }\n    }\n\n    public refreshRoles() {\n        return new Promise<void>(resolve => {\n            this.roleApi.getRoles().subscribe(response => {\n                this.roles$.next(response.pagination.data);\n                if (this.roles$.value.length) {\n                    // if no role is currently selected, select first\n                    if ( ! this.selectedRole$.value.id) {\n                        this.selectRole(this.roles$.value[0]);\n\n                    // if role is selected, try to re-select it with the one returned from server\n                    } else {\n                        const role = this.roles$.value.find(r => r.id === this.selectedRole$.value.id);\n                        if (role) {\n                            this.selectedRole$.next(role);\n                        }\n                    }\n                }\n                resolve();\n            });\n        });\n    }\n\n    public refreshRoleUsers(role: Role) {\n        if (role.type === 'sitewide' && !role.guests) {\n            this.datatable.reset({role_id: role.id});\n        } else {\n            this.datatable.reset({role_id: 999});\n        }\n    }\n\n    public showAssignUsersModal() {\n        this.modal.open(FindUserModalComponent)\n            .afterClosed()\n            .subscribe((user: NormalizedModel) => {\n                if (user) {\n                    this.roleApi.addUsers(this.selectedRole$.value.id, [user.id]).subscribe(() => {\n                        this.toast.open('User assigned to role');\n                        this.refreshRoleUsers(this.selectedRole$.value);\n                    });\n                }\n            });\n    }\n\n    public showCrupdateRoleModal(role?: Role) {\n        this.modal.show(CrupdateRoleModalComponent, {role}).afterClosed().subscribe(data => {\n            if ( ! data) return;\n            this.refreshRoles();\n        });\n    }\n\n    public maybeDeleteRole(role: Role) {\n        this.modal.open(ConfirmModalComponent, {\n            title: 'Delete Role',\n            body:  'Are you sure you want to delete this role?',\n            ok:    'Delete'\n        }).afterClosed().subscribe(confirmed => {\n            if ( ! confirmed) return;\n            this.deleteRole(role);\n        });\n    }\n\n    public deleteRole(role: Role) {\n        this.roleApi.delete(role.id).subscribe(() => {\n            this.selectedRole$.next(new Role());\n            this.refreshRoles().then(() => {\n                this.refreshRoleUsers(this.selectedRole$.value);\n            });\n        });\n    }\n\n    public maybeDetachUsers() {\n        this.modal.show(ConfirmModalComponent, {\n            title: 'Remove users from role',\n            body:  'Are you sure you want to remove selected users from this role?',\n            ok:    'Remove'\n        }).afterClosed().subscribe(confirmed => {\n            if ( ! confirmed) return;\n            this.removeUsersFromSelectedRole();\n        });\n    }\n\n    public removeUsersFromSelectedRole() {\n        this.roleApi.removeUsers(this.selectedRole$.value.id, this.datatable.selectedRows$.value).subscribe(() => {\n            this.refreshRoleUsers(this.selectedRole$.value);\n            this.datatable.selectedRows$.next([]);\n            this.toast.open('Users removed from role.');\n        });\n    }\n\n    public canAssignUsers() {\n        return this.selectedRole$.value.id && !this.datatable.selectedRows$.value.length && !this.selectedRole$.value.guests;\n    }\n}\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title>\n        <span *ngIf=\"data.localization\" trans>Update Localization</span>\n        <span *ngIf=\"!data.localization\" trans>Create Localization</span>\n    </h2>\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form class=\"modal-content\" (ngSubmit)=\"confirm()\" [formGroup]=\"form\" *ngIf=\"errors$ | async as errors\" ngNativeValidate>\n    <mat-dialog-content class=\"many-inputs\">\n        <div class=\"input-container\">\n            <label for=\"name\" trans>Name</label>\n            <input type=\"text\" formControlName=\"name\" id=\"name\" pattern=\"[A-Za-z0-9_-]+\" required>\n            <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\n        </div>\n\n        <div class=\"input-container\">\n            <label for=\"language\" trans>Language</label>\n            <select id=\"language\" formControlName=\"language\">\n                <option [value]=\"lang.code\" *ngFor=\"let lang of languages$ | async\" trans>{{lang.name}}</option>\n            </select>\n        </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <button (click)=\"close()\" mat-button type=\"button\" trans>Cancel</button>\n        <button type=\"submit\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\" trans>\n            <span *ngIf=\"data.localization\" trans>Update</span>\n            <span *ngIf=\"!data.localization\" trans>Create</span>\n        </button>\n    </mat-dialog-actions>\n</form>\n","import {ChangeDetectionStrategy, Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {Localization} from '@common/core/types/models/Localization';\nimport {Localizations} from '@common/core/translations/localizations.service';\nimport {LocalizationWithLines} from '@common/core/types/localization-with-lines';\nimport {Role} from '@common/core/types/models/Role';\nimport {FormBuilder} from '@angular/forms';\nimport {finalize} from 'rxjs/operators';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {LanguageListItem, ValueLists} from '@common/core/services/value-lists.service';\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\n\nexport interface CrupdateLocalizationModalData {\n    localization?: LocalizationWithLines;\n}\n\n@Component({\n    selector: 'crupdate-localization-modal',\n    templateUrl: './crupdate-localization-modal.component.html',\n    styleUrls: ['./crupdate-localization-modal.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CrupdateLocalizationModalComponent implements OnInit {\n    public loading$ = new BehaviorSubject<boolean>(false);\n    public errors$ = new BehaviorSubject<Partial<Role>>({});\n    public languages$ = new BehaviorSubject<LanguageListItem[]>([]);\n    public form = this.fb.group({\n        name: [''],\n        language: [''],\n    });\n\n    constructor(\n        private fb: FormBuilder,\n        private localizations: Localizations,\n        private dialogRef: MatDialogRef<CrupdateLocalizationModalComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: CrupdateLocalizationModalData,\n        private toast: Toast,\n        private lists: ValueLists,\n    ) {}\n\n    ngOnInit() {\n        this.lists.get(['languages']).subscribe(response => {\n            this.languages$.next(response.languages);\n        });\n        if (this.data.localization) {\n            this.form.patchValue(this.data.localization.model);\n        }\n    }\n\n    public confirm() {\n        this.loading$.next(true);\n        const request = this.data.localization\n            ? this.updateLocalization() :\n            this.createNewLocalization();\n        request\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.close(response.localization);\n                this.toast.open('Localization ' + (this.data.localization ? 'updated' : 'created'));\n            }, (errResponse: BackendErrorResponse) => this.errors$.next(errResponse.errors));\n    }\n\n    public close(localization?: LocalizationWithLines) {\n        this.dialogRef.close(localization);\n    }\n\n    public createNewLocalization(): Observable<{localization: LocalizationWithLines}> {\n        return this.localizations.create(this.form.value);\n    }\n\n    public updateLocalization(): Observable<{localization: LocalizationWithLines}> {\n        return this.localizations.update(this.data.localization.model.id, this.form.value);\n    }\n}\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {FormControl, FormGroup} from '@angular/forms';\n\n@Component({\n    selector: 'new-line-modal',\n    templateUrl: './new-line-modal.component.html',\n    styleUrls: ['./new-line-modal.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NewLineModalComponent {\n    public form = new FormGroup({\n        key: new FormControl(),\n        value: new FormControl(),\n    });\n\n    constructor(private dialogRef: MatDialogRef<NewLineModalComponent>) {}\n\n    public confirm() {\n        this.close(this.form.value);\n    }\n\n    public close(line?: {key: string, value: string}) {\n        this.dialogRef.close(line);\n    }\n}\n","<div class=\"modal-header\">\n    <h2 class=\"mat-dialog-title\" mat-dialog-title trans>Add New Translation Line</h2>\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form class=\"modal-content\" (ngSubmit)=\"confirm()\" [formGroup]=\"form\" ngNativeValidate>\n    <mat-dialog-content class=\"many-inputs\">\n        <div class=\"input-container\">\n            <label for=\"translation-key\" trans>Translation Key</label>\n            <input type=\"text\" formControlName=\"key\" name=\"translation-key\" id=\"translation-key\" required>\n            <p trans>Word or sentence you want to translate.</p>\n        </div>\n\n        <div class=\"input-container\">\n            <label for=\"translation-value\" trans>Translation Value</label>\n            <input type=\"text\" formControlName=\"value\" name=\"translation-value\" id=\"translation-value\" required>\n            <p trans>What word or sentence should be translated to.</p>\n        </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <button (click)=\"close()\" mat-button type=\"button\" trans>Cancel</button>\n        <button type=\"submit\" mat-raised-button color=\"accent\" trans>Add</button>\n    </mat-dialog-actions>\n</form>\n","import {animate, style, transition, trigger} from '@angular/animations';\n\nexport const SKELETON_ANIMATIONS = [\n    trigger('fadeIn', [\n        transition(':enter', [\n            style({opacity: 0}),\n            animate('325ms ease-in', style({\n                opacity: 1,\n            }))\n        ])\n    ]),\n    trigger('fadeOut', [\n        transition(':leave', [\n            style({opacity: 1, position: 'absolute', left: '0', right: '0'}),\n            animate('325ms ease-out', style({\n                opacity: 0\n            }))\n        ])\n    ])\n];\n","<aside class=\"admin-pill-nav\">\n    <div class=\"new-localization\">\n        <button mat-button (click)=\"showCrupdateLocalizationModal()\" *ngIf=\"currentUser.hasPermission('localizations.create')\">\n            <mat-icon svgIcon=\"add\"></mat-icon>\n            <span trans>New Localization</span>\n        </button>\n    </div>\n\n    <ng-container *ngIf=\"breakpoints.isMobile$ | async; else desktopNav\">\n        <button [matMenuTriggerFor]=\"navMenu\" class=\"no-style admin-pill-nav-mobile-selector\">\n            <span class=\"name\" trans>{{selectedLocalization?.model.name}}</span>\n            <mat-icon svgIcon=\"keyboard-arrow-down\"></mat-icon>\n        </button>\n        <mat-menu #navMenu=\"matMenu\" class=\"admin-pill-nav-menu\">\n            <button mat-menu-item *ngFor=\"let localization of localizations$ | async\" (click)=\"setSelectedLocalization(localization)\" [class.selected]=\"selectedLocalization?.model.id == localization.model.id\">{{localization.model.name}}</button>\n        </mat-menu>\n    </ng-container>\n\n    <ng-template #desktopNav>\n        <div class=\"nav-item\" [@fadeIn] *ngFor=\"let localization of localizations$ | async; trackBy: trackByFn\" (click)=\"setSelectedLocalization(localization)\" [class.selected]=\"selectedLocalization?.model.id == localization.model.id\">\n            <div class=\"name\">{{localization.model.name.replace('-', ' ')}}</div>\n\n            <div class=\"actions\">\n                <button mat-icon-button (click)=\"$event.stopPropagation()\" [matMenuTriggerFor]=\"actionsMenu\" ><mat-icon svgIcon=\"settings\" class=\"size-22\"></mat-icon></button>\n                <mat-menu #actionsMenu>\n                    <div mat-menu-item (click)=\"setDefaultLocalization(localization)\" *ngIf=\"currentUser.hasPermission('settings.update')\" trans>Set as Default</div>\n                    <div mat-menu-item (click)=\"showCrupdateLocalizationModal(localization)\" *ngIf=\"localization.name !== 'English' && currentUser.hasPermission('localizations.update')\" trans>Update</div>\n                    <div mat-menu-item (click)=\"confirmLocalizationDeletion(localization)\" *ngIf=\"localization.name !== 'English' && currentUser.hasPermission('localizations.delete')\" trans>Delete</div>\n                </mat-menu>\n            </div>\n        </div>\n\n        <div *ngIf=\"!selectedLocalization && loading$ | async\">\n            <div class=\"nav-item skeleton-nav-item\" *ngFor=\"let i of [1, 2, 3, 4, 5]\">\n                <skeleton variant=\"text\"></skeleton>\n            </div>\n        </div>\n    </ng-template>\n\n    <div class=\"update-translations\">\n        <button mat-raised-button color=\"accent\" (click)=\"updateLocalization()\" [disabled]=\"loading$ | async\" *ngIf=\"currentUser.hasPermission('localizations.update')\" trans>Update</button>\n    </div>\n</aside>\n\n<div class=\"datatable responsive-table\">\n    <div class=\"datatable-header localizations-datatable-header\">\n        <button mat-raised-button class=\"new-translation-button\" color=\"accent\" (click)=\"addLine()\" trans>Add New Translation</button>\n        <div class=\"input-container search-input-container\">\n            <input type=\"text\" class=\"search\" placeholder=\"Search Translations\" trans-placeholder [formControl]=\"searchQuery\">\n            <mat-icon svgIcon=\"search\"></mat-icon>\n        </div>\n    </div>\n    <table class=\"material-table\">\n        <thead>\n        <tr>\n            <th class=\"source-column\" trans>Source Text</th>\n            <th trans>Translation</th>\n            <th></th>\n        </tr>\n        </thead>\n        <tbody>\n\n       <ng-container *ngIf=\"loadingLines$ | async\">\n           <tr *ngFor=\"let i of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\">\n               <td><skeleton variant=\"text\" class=\"table-skeleton\"></skeleton></td>\n               <td><skeleton variant=\"text\" class=\"table-skeleton\"></skeleton></td>\n           </tr>\n       </ng-container>\n\n        <tr *ngFor=\"let line of lines$ | async\" [@fadeIn]>\n            <td class=\"mobile-no-label source-column\">{{line.key}}</td>\n            <td class=\"mobile-no-label\">\n                <input type=\"text\" class=\"translation-input\" id=\"{{line.key}}\" [(ngModel)]=\"selectedLocalization.lines[line.key]\">\n            </td>\n            <td class=\"edit-column\">\n                <button type=\"button\" mat-icon-button (click)=\"removeLine(line)\" [matTooltip]=\"'Remove' | trans\">\n                    <mat-icon svgIcon=\"close\"></mat-icon>\n                </button>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n</div>\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {CrupdateLocalizationModalComponent} from './crupdate-localization-modal/crupdate-localization-modal.component';\nimport {ActivatedRoute} from '@angular/router';\nimport {Settings} from '../../core/config/settings.service';\nimport {Modal} from '../../core/ui/dialogs/modal.service';\nimport {ConfirmModalComponent} from '../../core/ui/confirm-modal/confirm-modal.component';\nimport {Toast} from '../../core/ui/toast.service';\nimport {distinctUntilChanged, finalize} from 'rxjs/operators';\nimport {Translations} from '../../core/translations/translations.service';\nimport {Localizations} from '../../core/translations/localizations.service';\nimport {NewLineModalComponent} from './new-line-modal/new-line-modal.component';\nimport {CurrentUser} from '../../auth/current-user';\nimport {HttpErrors} from '../../core/http/errors/http-errors.enum';\nimport {LocalizationWithLines} from '@common/core/types/localization-with-lines';\nimport {BehaviorSubject} from 'rxjs';\nimport {BreakpointsService} from '@common/core/ui/breakpoints.service';\nimport {SKELETON_ANIMATIONS} from '@common/core/ui/skeleton/skeleton-animations';\n\ninterface TranslationLine {\n    key: string;\n    translation: string;\n}\n\n@Component({\n    selector: 'localization-index',\n    templateUrl: './localization-index.component.html',\n    styleUrls: ['./localization-index.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: SKELETON_ANIMATIONS,\n})\nexport class LocalizationIndexComponent implements OnInit {\n    public loading$ = new BehaviorSubject<boolean>(false);\n    public loadingLines$ = new BehaviorSubject<boolean>(false);\n    public searchQuery = new FormControl();\n    public selectedLocalization: LocalizationWithLines;\n    public localizations$ = new BehaviorSubject<LocalizationWithLines[]>([]);\n    public lines$ = new BehaviorSubject<TranslationLine[]>([]);\n\n    constructor(\n        private toast: Toast,\n        private modal: Modal,\n        private settings: Settings,\n        private i18n: Translations,\n        private route: ActivatedRoute,\n        public currentUser: CurrentUser,\n        private localizationsApi: Localizations,\n        public breakpoints: BreakpointsService\n    ) {}\n\n    ngOnInit() {\n        this.loading$.next(true);\n        this.localizationsApi\n            .all()\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.setLocalizations(response.localizations);\n                this.bindSearchQuery();\n            });\n    }\n\n    private setLocalizations(localizations: LocalizationWithLines[]) {\n        this.localizations$.next(localizations);\n        const active =\n            localizations.find(\n                l =>\n                    l.model.language ===\n                    this.settings.get('i18n.default_localization')\n            ) || localizations[0];\n        if (active) {\n            this.setSelectedLocalization(active);\n        }\n    }\n\n    public setSelectedLocalization(localization: LocalizationWithLines) {\n        if (this.selectedLocalization?.model.id === localization.model.id)\n            return;\n\n        this.selectedLocalization = localization;\n        this.searchQuery.setValue(null);\n\n        // if lang lines are already fetched for this localization, bail\n        if (localization.lines) {\n            this.lines$.next(this.originalLines());\n        } else {\n            this.selectedLocalization.lines = {};\n            this.loadingLines$.next(true);\n            this.localizationsApi\n                .get(this.selectedLocalization.model.name)\n                .pipe(finalize(() => this.loadingLines$.next(false)))\n                .subscribe(response => {\n                    this.selectedLocalization = response.localization;\n                    const localizations = [...this.localizations$.value];\n                    const i = localizations.findIndex(\n                        loc => loc.model.id === localization.model.id\n                    );\n                    localizations[i] = response.localization;\n                    this.localizations$.next(localizations);\n                    this.lines$.next(this.originalLines());\n                });\n        }\n    }\n\n    public addLine() {\n        this.modal\n            .open(NewLineModalComponent)\n            .beforeClosed()\n            .subscribe(line => {\n                if (!line) return;\n                this.selectedLocalization.lines[line.key] = line.value;\n                this.lines$.next(this.originalLines());\n            });\n    }\n\n    public setDefaultLocalization(localization: LocalizationWithLines) {\n        if (!this.selectedLocalization.model.id) {\n            this.setSelectedLocalization(localization);\n        }\n        this.localizationsApi.setDefault(localization.model).subscribe(\n            () => {\n                this.toast.open('Default Localization Changed');\n            },\n            () => {\n                this.toast.open(HttpErrors.Default);\n            }\n        );\n    }\n\n    public updateLocalization() {\n        this.loading$.next(true);\n        this.localizationsApi\n            .update(\n                this.selectedLocalization.model.id,\n                this.selectedLocalization\n            )\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(() => {\n                this.toast.open('Localizations updated');\n                if (this.i18n.isActive(this.selectedLocalization.model)) {\n                    this.i18n.setLocalization(this.selectedLocalization);\n                }\n            });\n    }\n\n    public showCrupdateLocalizationModal(localization?: LocalizationWithLines) {\n        this.modal\n            .show(CrupdateLocalizationModalComponent, {localization})\n            .afterClosed()\n            .subscribe((newLocalization: LocalizationWithLines) => {\n                if (!newLocalization) return;\n                let localizations = [...this.localizations$.value];\n                if (localization) {\n                    localizations = localizations.map(l => {\n                        return l.model.id === newLocalization.model.id\n                            ? newLocalization\n                            : l;\n                    });\n                } else {\n                    localizations.push(newLocalization);\n                    this.setSelectedLocalization(newLocalization);\n                }\n                this.localizations$.next(localizations);\n            });\n    }\n\n    public confirmLocalizationDeletion(language: LocalizationWithLines) {\n        if (this.localizations$.value.length < 2) {\n            this.toast.open('There must be at least one localization.');\n            return;\n        }\n\n        this.modal\n            .open(ConfirmModalComponent, {\n                title: 'Delete Localization',\n                body: 'Are you sure you want to delete this localization?',\n                ok: 'Delete',\n            })\n            .afterClosed()\n            .subscribe(confirmed => {\n                if (!confirmed) return;\n                this.deleteLocalization(language);\n            });\n    }\n\n    private deleteLocalization(language: LocalizationWithLines) {\n        this.localizationsApi.delete(language.model.id).subscribe(() => {\n            this.toast.open('Localization deleted');\n            const localizations = [...this.localizations$.value];\n            localizations.splice(localizations.indexOf(language), 1);\n            this.localizations$.next(localizations);\n\n            if (this.selectedLocalization.model.id === language.model.id) {\n                this.setSelectedLocalization(localizations[0]);\n            }\n        });\n    }\n\n    private bindSearchQuery() {\n        this.searchQuery.valueChanges\n            .pipe(distinctUntilChanged())\n            .subscribe(query => {\n                const lines = this.originalLines();\n                this.lines$.next(\n                    query\n                        ? lines.filter(l => this.filterPredicate(l, query))\n                        : lines\n                );\n            });\n    }\n\n    private filterPredicate(data: object, query: string) {\n        const dataStr = Object.keys(data)\n            .reduce((currentTerm: string, key: string) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + data[key] + '◬';\n            }, '')\n            .toLowerCase();\n\n        // Transform the filter by converting it to lowercase and removing whitespace.\n        const transformedFilter = query.trim().toLowerCase();\n\n        return dataStr.indexOf(transformedFilter) != -1;\n    }\n\n    private linesToArray(lines: {[key: string]: string}): TranslationLine[] {\n        const transformed = [];\n        for (const key in lines) {\n            transformed.push({key, translation: lines[key]});\n        }\n        return transformed;\n    }\n\n    private originalLines() {\n        return this.selectedLocalization.lines\n            ? this.linesToArray(this.selectedLocalization.lines)\n            : [];\n    }\n\n    public removeLine(line: TranslationLine) {\n        delete this.selectedLocalization.lines[line.key];\n        this.lines$.next(this.originalLines());\n    }\n\n    trackByFn = (i: number, localization: LocalizationWithLines) =>\n        localization.model.id;\n}\n","import {\n    DatatableFilter,\n    FilterControlType,\n} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/datatable-filter';\nimport { CreatedAtFilter, UpdatedAtFilter } from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/timestamp-filter';\nimport { FindUserModalComponent } from '@common/auth/find-user-modal/find-user-modal.component';\n\nexport const FILE_ENTRY_TYPE_FILTER = new DatatableFilter({\n    type: FilterControlType.Select,\n    key: 'type',\n    description: 'Type of the file',\n    defaultValue: 'text',\n    options: [\n        {key: 'Text', value: 'text'},\n        {key: 'Audio', value: 'audio'},\n        {key: 'Video', value: 'video'},\n        {key: 'Image', value: 'image'},\n        {key: 'PDF', value: 'pdf'},\n        {key: 'Spreadsheet', value: 'spreadsheet'},\n        {key: 'Word Document', value: 'word'},\n        {key: 'Photoshop', value: 'photoshop'},\n        {key: 'Archive', value: 'archive'},\n        {key: 'Folder', value: 'folder'},\n    ],\n});\n\nexport const FILE_ENTRY_INDEX_FILTERS: DatatableFilter[] = [\n    FILE_ENTRY_TYPE_FILTER,\n    new DatatableFilter({\n        type: FilterControlType.Select,\n        key: 'public',\n        label: 'status',\n        defaultValue: false,\n        description: 'Whether file is publicly accessible',\n        options: [\n            {key: 'Private', value: false},\n            {key: 'Public', value: true},\n        ],\n    }),\n    new CreatedAtFilter({\n        description: 'Date file was uploaded',\n    }),\n    new UpdatedAtFilter({\n        description: 'Date file was last changed',\n    }),\n    new DatatableFilter({\n        type: FilterControlType.SelectModel,\n        key: 'owner_id',\n        label: 'Uploader',\n        description: 'User that this file was uploaded by',\n        component: FindUserModalComponent,\n    }),\n];\n","<div class=\"datatable-page-header\">\n  <h1 trans>Uploaded Files</h1>\n\n  <div class=\"header\">\n    <datatable-filters pluralName=\"files\" [filters]=\"filters\"></datatable-filters>\n    <div class=\"action-buttons\"></div>\n  </div>\n</div>\n\n<div class=\"datatable responsive-table\">\n  <mat-progress-bar\n    class=\"loading-bar\"\n    mode=\"indeterminate\"\n    color=\"accent\"\n    *ngIf=\"datatable.paginator && datatable.paginator.loading$ | async\"\n  ></mat-progress-bar>\n  <table class=\"material-table\">\n    <thead>\n      <tr>\n        <th table-header-checkbox></th>\n        <th table-sort-header trans>Name</th>\n        <th table-sort-header trans>File Name</th>\n        <th table-sort-header=\"user_id\" trans>Owner</th>\n        <th table-sort-header trans>Type</th>\n        <th table-sort-header trans>Public</th>\n        <th table-sort-header trans>File Size</th>\n        <th table-sort-header=\"created_at\" trans>Uploaded At</th>\n      </tr>\n      <tr *ngIf=\"datatable.selectedRows$.value.length as selectedCount\">\n          <th colspan=\"9\">\n              <div\n                class=\"bulk-actions-title\"\n                [transValues]=\"{count: selectedCount, resource: 'file(s)'}\"\n                trans\n              >\n                  :count :resource selected:\n              </div>\n              <div class=\"bulk-actions\">\n                  <button\n                    mat-raised-button\n                    color=\"warn\"\n                    (click)=\"maybeDeleteSelectedEntries()\"\n                    *ngIf=\"currentUser.hasPermission('files.delete')\"\n                    trans\n                  >\n                      Delete\n                  </button>\n              </div>\n          </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let file of files$ | async\">\n        <td [table-body-checkbox]=\"file.id\"></td>\n        <td data-label=\"Name\">{{ file.name }}</td>\n        <td data-label=\"File Name\">{{ file.file_name }}</td>\n        <td>\n          <user-column [user]=\"file.users[0]\"></user-column>\n        </td>\n        <td data-label=\"Type\">{{ file.type }}</td>\n        <td data-label=\"Public\">{{ file.public ? 'Yes' : 'No' }}</td>\n        <td data-label=\"File Size\">\n          {{ file.file_size ? (file.file_size | formattedFileSize) : '-' }}\n        </td>\n        <td>{{ file.created_at | formattedDate }}</td>\n      </tr>\n    </tbody>\n  </table>\n  <no-results-message svgImage=\"file-searching.svg\" *ngIf=\"datatable.paginator.noResults$ | async\">\n    <span primary-text trans>No files have been created yet</span>\n  </no-results-message>\n  <datatable-footer></datatable-footer>\n</div>\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {Settings} from '../../core/config/settings.service';\nimport {FileEntry} from '../../uploads/types/file-entry';\nimport {CurrentUser} from '../../auth/current-user';\nimport {UploadsApiService} from '../../uploads/uploads-api.service';\nimport {Observable} from 'rxjs';\nimport {DatatableService} from '../../datatable/datatable.service';\nimport {FILE_ENTRY_INDEX_FILTERS} from '@common/admin/file-entry-index/file-entry-index-filters';\n\n@Component({\n    selector: 'file-entry-index',\n    templateUrl: './file-entry-index.component.html',\n    styleUrls: ['./file-entry-index.component.scss'],\n    providers: [DatatableService],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FileEntryIndexComponent implements OnInit {\n    files$ = this.datatable.data$ as Observable<FileEntry[]>;\n    filters = FILE_ENTRY_INDEX_FILTERS;\n\n    constructor(\n        public currentUser: CurrentUser,\n        public settings: Settings,\n        private uploads: UploadsApiService,\n        public datatable: DatatableService<FileEntry>\n    ) {}\n\n    ngOnInit() {\n        this.datatable.init({\n            uri: UploadsApiService.BASE_URI,\n        });\n    }\n\n    public maybeDeleteSelectedEntries() {\n        this.datatable.confirmResourceDeletion('files').subscribe(() => {\n            const entryIds = this.datatable.selectedRows$.value;\n            this.uploads\n                .delete({entryIds, deleteForever: true})\n                .subscribe(() => {\n                    this.datatable.reset();\n                });\n        });\n    }\n}\n","import {ChangeDetectionStrategy, Component, Inject, Optional, ViewEncapsulation} from '@angular/core';\nimport {OVERLAY_PANEL_DATA} from '@common/core/ui/overlay-panel/overlay-panel-data';\nimport {OverlayPanelRef} from '@common/core/ui/overlay-panel/overlay-panel-ref';\nimport { matDialogAnimations } from '@angular/material/dialog';\n\n@Component({\n    selector: 'image-zoom-overlay',\n    templateUrl: './image-zoom-overlay.component.html',\n    styleUrls: ['./image-zoom-overlay.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '[@dialogContainer]': `'enter'`\n    },\n    animations: [\n        matDialogAnimations.dialogContainer,\n    ]\n})\nexport class ImageZoomOverlayComponent {\n    constructor(\n        @Inject(OVERLAY_PANEL_DATA) @Optional() public data: {src: string, alt?: string},\n        private overlayPanelRef: OverlayPanelRef\n    ) {}\n\n    public close() {\n        this.overlayPanelRef.close();\n    }\n}\n","<img [src]=\"data.src\" [alt]=\"data.alt\">\n\n<button mat-mini-fab color=\"accent\" class=\"close-button\" (click)=\"close()\">\n    <mat-icon svgIcon=\"close\"></mat-icon>\n</button>","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {OverlayPanel} from '@common/core/ui/overlay-panel/overlay-panel.service';\nimport {ImageZoomOverlayComponent} from '@common/core/ui/image-zoom/image-zoom-overlay/image-zoom-overlay.component';\n\n@Component({\n    selector: 'image-zoom',\n    templateUrl: './image-zoom.component.html',\n    styleUrls: ['./image-zoom.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImageZoomComponent {\n    @Input() src: string;\n    @Input() alt: string;\n\n    constructor(private overlay: OverlayPanel) {}\n\n    public zoomImage() {\n        this.overlay.open(ImageZoomOverlayComponent, {\n            position: 'center',\n            origin: 'global',\n            data: {src: this.src, alt: this.alt},\n            panelClass: 'image-zoom-overlay-container'\n        });\n    }\n}\n","<img [src]=\"src\" [alt]=\"alt\" (click)=\"zoomImage()\">","<form class=\"panel\" (ngSubmit)=\"saveAds()\" [formGroup]=\"form\" ngNativeValidate>\n    <div class=\"header\" trans>Predefined AD Slots</div>\n\n    <div class=\"vert-row\" *ngFor=\"let ad of allAds()\">\n        <div class=\"input-container\">\n            <label [for]=\"ad.slot\" trans>{{ad.description}}</label>\n            <textarea [name]=\"ad.slot\" [id]=\"ad.slot\" [formControlName]=\"ad.slot\"></textarea>\n        </div>\n        <image-zoom [src]=\"getPreviewUrl(ad)\"></image-zoom>\n    </div>\n\n    <div class=\"setting-toggle-container margin-top margin-bottom\">\n        <mat-slide-toggle name=\"ads.disable\" id=\"ads.disable\" formControlName=\"ads.disable\" trans>Disable Ads</mat-slide-toggle>\n        <p trans>Disable all ad related functionality.</p>\n    </div>\n\n    <button type=\"submit\" mat-raised-button color=\"accent\" class=\"save-button\" [disabled]=\"loading$ | async\" trans>Save</button>\n    <mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"loading$ | async\"></mat-progress-bar>\n</form>","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {finalize} from 'rxjs/operators';\nimport {AdSlotConfig} from '@common/core/config/app-config';\nimport {FormBuilder} from '@angular/forms';\nimport {Settings} from '@common/core/config/settings.service';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {HttpErrors} from '@common/core/http/errors/http-errors.enum';\nimport {BehaviorSubject} from 'rxjs';\n\n@Component({\n    selector: 'ads-page',\n    templateUrl: './ads-page.component.html',\n    styleUrls: ['./ads-page.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AdsPageComponent implements OnInit {\n    public loading$ = new BehaviorSubject(false);\n    public form = this.fb.group({\n        'ads.disable': [false],\n    });\n\n    constructor(\n        public settings: Settings,\n        private toast: Toast,\n        private fb: FormBuilder,\n    ) {}\n\n    ngOnInit() {\n        this.hydrate();\n    }\n\n    public saveAds() {\n        this.loading$.next(true);\n        this.settings.save({client: this.form.value})\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(() => {\n                this.toast.open('Ads updated');\n            }, () => {\n                this.toast.open(HttpErrors.Default);\n            });\n    }\n\n    public allAds() {\n        return this.settings.get('vebto.admin.ads', []) as AdSlotConfig[];\n    }\n\n    public getPreviewUrl(config: AdSlotConfig): string {\n        // ads.splash.top => splash-top\n        const name = config.slot.replace(/\\./g, '-').replace('ads-', '');\n        return `client/assets/images/verts/${name}.png`;\n    }\n\n    private hydrate() {\n        const settings = this.settings.getFlat() || {};\n        this.form.patchValue({'ads.disable': settings['ads.disable']});\n        this.allAds().forEach(ad => {\n            this.form.addControl(ad.slot, this.fb.control(settings[ad.slot]));\n        });\n    }\n}\n","<div class=\"modal-header\">\n    <h2 class=\"modal-title\" mat-dialog-title *ngIf=\"data.plan\" trans>Update Plan Details</h2>\n    <h2 class=\"modal-title\" mat-dialog-title *ngIf=\"!data.plan\" trans>Create a New Plan</h2>\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form autocomplete=\"off\" (ngSubmit)=\"confirm()\" ngNativeValidate *ngIf=\"errors$ | async as errors\" [formGroup]=\"form\">\n    <div class=\"many-inputs mat-dialog-content\" mat-dialog-content>\n        <div class=\"input-container\">\n            <label for=\"plan-modal-name\" trans>Name</label>\n            <input type=\"text\" id=\"plan-modal-name\" formControlName=\"name\" required>\n            <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\n        </div>\n\n        <div class=\"input-container\">\n            <label for=\"parent_id\" trans>Parent Plan</label>\n            <select id=\"parent_id\" formControlName=\"parent_id\" required>\n                <option [ngValue]=\"null\" trans>None</option>\n                <option [ngValue]=\"plan.id\" *ngFor=\"let plan of getBasePlans(data.plan)\">{{plan.name}}</option>\n            </select>\n            <p trans>Used for creating yearly, weekly etc versions of base plan. Child plans will inherit their parent permissions/features.</p>\n            <div class=\"error\" *ngIf=\"errors.parent_id\">{{errors.parent_id}}</div>\n        </div>\n\n       <ng-container *ngIf=\"!formValue().free\">\n           <div class=\"input-container\">\n               <label for=\"amount\" trans>Amount</label>\n               <input type=\"number\" step=\"0.01\" id=\"amount\" formControlName=\"amount\" required [min]=\"getMinAmount()\" [max]=\"getMaxAmount()\">\n                <ng-container *ngIf=\"!data.plan\">\n                    <p trans>How much subscribers of this plan should be charged. (Dollars, euros etc.)</p>\n                    <p trans>For example, Amount=100, Interval=Year and Interval Count=1, will charge user 100 dollars every year.</p>\n                </ng-container>\n               <p *ngIf=\"data.plan\" trans>Plan amount can't be changed once plan has already been created, however you can add a new child plan with a different price or delete this plan and create a new one.</p>\n               <div class=\"error\" *ngIf=\"errors.amount\">{{errors.amount}}</div>\n           </div>\n\n           <div class=\"input-container\" *ngIf=\"!formValue().parent_id\">\n               <label for=\"currency\" trans>Currency</label>\n               <select id=\"currency\" formControlName=\"currency\" required>\n                   <option [ngValue]=\"currency.code\" *ngFor=\"let currency of currencies$ | async\">{{currency.code}} - {{currency.name}}</option>\n               </select>\n               <div class=\"error\" *ngIf=\"errors.currency\">{{errors.currency}}</div>\n           </div>\n\n           <div class=\"input-container\">\n               <label for=\"interval\" trans>Interval</label>\n               <select id=\"interval\" class=\"interval-select\" formControlName=\"interval\" required>\n                   <option [ngValue]=\"interval\" *ngFor=\"let interval of intervals\">{{interval}}</option>\n               </select>\n               <p trans>The frequency with which a subscription should be billed.</p>\n               <div class=\"error\" *ngIf=\"errors.interval\">{{errors.interval}}</div>\n           </div>\n\n           <div class=\"input-container\" *ngIf=\"formValue().interval !== 'year'\">\n               <label for=\"interval_count\" trans>Interval Count</label>\n               <input type=\"number\" id=\"interval_count\" formControlName=\"interval_count\" required min=\"1\" max=\"12\">\n               <p trans>The number of intervals (specified in the interval property above) between each subscription billing. For example, Interval=Month and Interval Count=3 bills every 3 months.</p>\n               <div class=\"error\" *ngIf=\"errors.interval_count\">{{errors.interval_count}}</div>\n           </div>\n       </ng-container>\n\n        <ng-container *ngIf=\"!formValue().parent_id\">\n            <div class=\"input-container\">\n                <label for=\"position\" trans>Position</label>\n                <select type=\"text\" id=\"position\" formControlName=\"position\" required>\n                    <option [ngValue]=\"1\">1</option>\n                    <option [ngValue]=\"2\">2</option>\n                    <option [ngValue]=\"3\">3</option>\n                    <option [ngValue]=\"4\">4</option>\n                    <option [ngValue]=\"5\">5</option>\n                    <option [ngValue]=\"6\">6</option>\n                    <option [ngValue]=\"7\">7</option>\n                    <option [ngValue]=\"8\">8</option>\n                </select>\n                <p trans>Order of plans. Lower position will appear first.</p>\n                <div class=\"error\" *ngIf=\"errors.position\">{{errors.position}}</div>\n            </div>\n\n            <div class=\"setting-toggle-container\">\n                <mat-slide-toggle id=\"recommended\" formControlName=\"recommended\" trans>Recommended</mat-slide-toggle>\n                <p trans>Plan will be marked as \"Most Popular\" and emphasized to users.</p>\n            </div>\n\n            <div class=\"setting-toggle-container\" *ngIf=\"!data.plan || data.plan.free\">\n                <mat-slide-toggle id=\"free\" formControlName=\"free\" trans>Free</mat-slide-toggle>\n                <p trans>Basic free plan that will be assigned to new users that have not upgraded to other plans.</p>\n            </div>\n\n            <div class=\"setting-toggle-container\">\n                <mat-slide-toggle id=\"show_permissions\" formControlName=\"show_permissions\" trans>Show Permissions</mat-slide-toggle>\n                <p trans>Whether plan permissions should be displayed as features to users.</p>\n            </div>\n\n            <div class=\"setting-toggle-container\">\n                <mat-slide-toggle id=\"plan-modal-hidden\" formControlName=\"hidden\" trans>Hidden</mat-slide-toggle>\n                <p trans>Whether this plan should be hidden on upgrade and pricing pages.</p>\n            </div>\n\n            <permission-manager formControlName=\"permissions\"></permission-manager>\n            <div class=\"error\" *ngIf=\"errors?.permissions\">{{errors?.permissions}}</div>\n\n            <div class=\"plan-features\">\n                <div class=\"section-title\" trans>Custom Features</div>\n\n                <ul class=\"unstyled-list feature-list\" cdkDropList (cdkDropListDropped)=\"reorderPlanFeatures($event)\">\n                    <li class=\"feature-list-item\" *ngFor=\"let feature of features$ | async\" [attr.data-id]=\"feature.id\" cdkDrag>\n                        <button cdkDragHandle mat-icon-button class=\"drag-handle\"><mat-icon svgIcon=\"drag-handle\" matListIcon></mat-icon></button>\n                        <div class=\"text\">{{feature.content}}</div>\n                        <button class=\"delete-button\" mat-icon-button (click)=\"removeFeature(feature)\"><mat-icon svgIcon=\"delete\" matListIcon></mat-icon></button>\n                    </li>\n                </ul>\n\n                <p *ngIf=\"!(features$ | async).length\" trans>No custom features yet.</p>\n\n                <form (ngSubmit)=\"addFeature()\" ngNativeValidate>\n                    <div class=\"input-container\">\n                        <div class=\"input-with-action\">\n                            <input type=\"text\" name=\"new-feature\" placeholder=\"+New Feature\" trans-placeholder [(ngModel)]=\"newFeature\" autocomplete=\"false\" required>\n                            <button type=\"submit\" mat-flat-button color=\"accent\" trans>Add</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n\n            <div class=\"available-space\">\n                <div class=\"section-title\" trans>Available Space</div>\n\n                <space-input formControlName=\"available_space\">\n                    <p class=\"description\" trans>Hard drive space available to users subscribed to this plan.</p>\n                    <div class=\"error\" *ngIf=\"errors.available_space\">{{errors.available_space}}</div>\n                </space-input>\n            </div>\n        </ng-container>\n    </div>\n\n    <div class=\"buttons right mat-dialog-actions\" mat-dialog-actions>\n        <button (click)=\"close()\" type=\"button\" mat-button class=\"button cancel\" trans>Cancel</button>\n        <button type=\"submit\" class=\"button primary\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\">\n            <span *ngIf=\"data.plan\" trans>Update Plan</span>\n            <span *ngIf=\"!data.plan\" trans>Create Plan</span>\n        </button>\n    </div>\n</form>\n\n<loading-indicator class=\"overlay\" [isVisible]=\"loading$ | async\"></loading-indicator>\n","import {ChangeDetectionStrategy, Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\nimport {Plan} from '@common/core/types/models/Plan';\nimport {Plans} from '@common/shared/billing/plans.service';\nimport {Currency, ValueLists} from '@common/core/services/value-lists.service';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {randomString} from '@common/core/utils/random-string';\nimport {finalize} from 'rxjs/operators';\nimport {BehaviorSubject} from 'rxjs';\nimport {FormBuilder} from '@angular/forms';\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\n\nexport interface CrupdatePlanModalData {\n    plan?: Plan;\n    plans: Plan[];\n}\n\ninterface Errors extends Partial<Plan> {\n    general?: string;\n}\n\n@Component({\n    selector: 'crupdate-plan-modal',\n    templateUrl: './crupdate-plan-modal.component.html',\n    styleUrls: ['./crupdate-plan-modal.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CrupdatePlanModalComponent implements OnInit {\n    public loading$ = new BehaviorSubject(false);\n    public newFeature: string;\n    public features$ = new BehaviorSubject<{content: string, id: string}[]>([]);\n    public errors$ = new BehaviorSubject<Errors>({});\n    public currencies$ = new BehaviorSubject<Currency[]>([]);\n    public intervals = ['day', 'week', 'month', 'year'];\n    private allPlans$ = new BehaviorSubject<Plan[]>([]);\n    public form = this.fb.group({\n        name: [''],\n        parent_id: [],\n        free: [false],\n        hidden: [false],\n        recommended: [false],\n        show_permissions: [false],\n        amount: [],\n        currency: [],\n        interval: [],\n        interval_count: [],\n        position: [],\n        available_space: [],\n        permissions: [[]],\n    });\n\n    constructor(\n        private dialogRef: MatDialogRef<CrupdatePlanModalComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: CrupdatePlanModalData,\n        public plans: Plans,\n        private toast: Toast,\n        private valueLists: ValueLists,\n        private fb: FormBuilder,\n    ) {}\n\n    ngOnInit() {\n        this.resetState();\n        this.allPlans$.next(this.data.plans || []);\n\n        this.valueLists.get(['currencies']).subscribe(response => {\n            this.currencies$.next(Object.values(response.currencies));\n        });\n\n        if (this.data.plan) {\n            this.hydrateModel(this.data.plan);\n        }\n    }\n\n    public confirm() {\n        this.loading$.next(true);\n        let request;\n\n        if (this.data.plan) {\n            request = this.plans.update(this.data.plan.id, this.getPayload());\n        } else {\n            request = this.plans.create(this.getPayload());\n        }\n\n        request\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.close(response.plan);\n                const action = this.data.plan ? 'updated' : 'created';\n                this.toast.open('Plan has been ' + action);\n            }, (errResponse: BackendErrorResponse) => {\n                this.errors$.next(errResponse.errors);\n            });\n    }\n\n    public getPayload() {\n        const payload = {...this.form.getRawValue()};\n        payload.features = this.features$.value.map(feature => feature.content);\n\n        const currency = this.currencies$.value.find(curr => curr.code === payload.currency);\n        payload.currency_symbol = currency.symbol;\n\n        if (payload.interval === 'year') {\n            payload.interval_count = 1;\n        }\n\n        return payload;\n    }\n\n    public close(data?: Plan) {\n        this.resetState();\n        this.dialogRef.close(data);\n    }\n\n    public addFeature() {\n        const exists = this.features$.value.findIndex(curr => curr.content === this.newFeature) > -1;\n        if (exists || ! this.newFeature) return;\n        this.features$.next([...this.features$.value, {content: this.newFeature, id: randomString(5)}]);\n        this.newFeature = null;\n    }\n\n    public removeFeature(feature: {content: string, id: string}) {\n        const newFeatures = this.features$.value.filter(f => f.id !== feature.id);\n        this.features$.next(newFeatures);\n    }\n\n    public getBasePlans(planToSkip?: Plan): Plan[] {\n        return this.allPlans$.value.filter(p => !p.parent_id && !p.free && (!planToSkip || planToSkip.id !== p.id));\n    }\n\n    private hydrateModel(plan: Plan) {\n        this.form.patchValue(plan);\n        const newFeatures = plan.features.map(feature => {\n            return {content: feature, id: randomString(5)};\n        });\n        this.form.get('amount').disable();\n        this.features$.next(newFeatures);\n    }\n\n    private resetState() {\n        this.form.reset({\n            currency: 'USD',\n            interval: 'month',\n            interval_count: 1,\n            position: 1,\n            permissions: [],\n            free: false,\n            recommended: false,\n            show_permissions: false,\n        });\n        this.features$.next([]);\n        this.errors$.next({});\n    }\n\n    public reorderPlanFeatures(e: CdkDragDrop<void>) {\n        const newFeatures = [...this.features$.value];\n        moveItemInArray(newFeatures, e.previousIndex, e.currentIndex);\n        this.features$.next(newFeatures);\n    }\n\n    public formValue() {\n        return this.form.value as Partial<Plan>;\n    }\n\n    public getMinAmount(): number {\n        // child plans can't be set as free,\n        // so should have amount more than 0\n        return this.form.get('parent_id').value ? 1 : 0;\n    }\n\n    public getMaxAmount(): number {\n        return null;\n        // TODO: fix this using interval/interval count\n        // if (this.form.get('parent_id').value) {\n        //     // child plan amount per interval should be cheaper then parent\n        //     const parent = this.allPlans$.value.find(p => p.id === this.form.get('parent_id').value);\n        //     return ((parent.amount / parent.interval_count) * this.form.get('interval_count').value) - 0.01;\n        // } else {\n        //     return null;\n        // }\n    }\n}\n","import { DatatableFilter, FilterControlType } from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/datatable-filter';\nimport { CreatedAtFilter, UpdatedAtFilter } from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/timestamp-filter';\n\nexport const PLAN_INDEX_FILTERS: DatatableFilter[] = [\n  new DatatableFilter({\n    type: FilterControlType.Select,\n    key: 'parent_id',\n    label: 'Type',\n    description: 'Whether plan is a child or not',\n    defaultValue: null,\n    options: [\n      {key: 'Any', value: null},\n      {key: 'Child', value: {value: null, operator: '!='}},\n      {key: 'Parent', value: {value: null, operator: '='}},\n    ],\n  }),\n  new DatatableFilter({\n    type: FilterControlType.Select,\n    key: 'currency',\n    description: 'Currency assigned to the plan',\n    defaultValue: 'USD',\n    options: [\n      {key: 'USD', value: 'USD'},\n      {key: 'EUR', value: 'EUR'},\n      {key: 'Pound Sterling', value: 'GBP'},\n      {key: 'Canadian Dollar', value: 'CAD'},\n    ],\n  }),\n  new DatatableFilter({\n    type: FilterControlType.Select,\n    key: 'interval',\n    description: 'Currency assigned to the plan',\n    defaultValue: 'USD',\n    options: [\n      {key: 'Day', value: 'day'},\n      {key: 'Week', value: 'week'},\n      {key: 'Month', value: 'month'},\n      {key: 'Year', value: 'yea'},\n    ],\n  }),\n  new CreatedAtFilter({\n    description: 'Date plan was created',\n  }),\n  new UpdatedAtFilter({\n    description: 'Date plan was last updated',\n  }),\n];\n","<div class=\"datatable-page-header\">\n  <h1 trans>Subscription Plans</h1>\n\n  <div class=\"header\">\n    <datatable-filters pluralName=\"plans\" [filters]=\"filters\"></datatable-filters>\n    <div class=\"action-buttons\">\n      <button\n        mat-raised-button\n        [disabled]=\"loading$ | async\"\n        (click)=\"syncPlans()\"\n        [matTooltip]=\"\n          'Sync if one of payment gateways was enabled after plan has already been created'\n        \"\n        class=\"btn-with-dropdown-icon\"\n      >\n        <span trans>Sync</span>\n        <mat-icon svgIcon=\"sync\"></mat-icon>\n      </button>\n      <button\n        mat-raised-button\n        color=\"accent\"\n        (click)=\"showCrupdatePlanModal()\"\n        [disabled]=\"!currentUser.hasPermission('plans.create')\"\n        class=\"button-with-icon\"\n      >\n        <mat-icon svgIcon=\"add\"></mat-icon>\n        <span trans>Add New Plan</span>\n      </button>\n    </div>\n  </div>\n</div>\n\n<div class=\"datatable responsive-table\">\n  <table class=\"material-table\">\n    <thead>\n      <tr>\n        <th table-header-checkbox></th>\n        <th table-sort-header trans>Name</th>\n        <th table-sort-header=\"parent_id\" trans>Parent Plan</th>\n        <th table-sort-header trans>Amount</th>\n        <th table-sort-header trans>Currency</th>\n        <th table-sort-header trans>Interval</th>\n        <th table-sort-header trans>Recommended</th>\n        <th table-sort-header trans>Position</th>\n        <th table-sort-header=\"updated_at\" trans>Last Updated</th>\n        <th></th>\n      </tr>\n      <tr *ngIf=\"datatable.selectedRows$.value.length as selectedCount\">\n        <th colspan=\"10\">\n          <div\n            class=\"bulk-actions-title\"\n            [transValues]=\"{count: selectedCount, resource: 'plan(s)'}\"\n            trans\n          >\n            :count :resource selected:\n          </div>\n          <div class=\"bulk-actions\">\n            <button\n              mat-raised-button\n              color=\"warn\"\n              (click)=\"maybeDeleteSelectedPlans()\"\n              *ngIf=\"currentUser.hasPermission('plans.delete')\"\n              trans\n            >\n              Delete\n            </button>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let plan of plans$ | async\">\n        <td [table-body-checkbox]=\"plan.id\"></td>\n        <td data-label=\"Name\">{{ plan.name }}</td>\n        <td data-label=\"Parent Plan\">{{ plan.parent ? plan.parent.name : '-' }}</td>\n        <td data-label=\"Amount\">\n          {{ plan.free ? 'Free' : (plan.amount | currency: plan.currency) }}\n        </td>\n        <td data-label=\"Currency\">{{ plan.free ? 'Free' : plan.currency }}</td>\n        <td data-label=\"Interval\">{{ plan.free ? 'Free' : plan.interval }}</td>\n        <td data-label=\"Recommended\">\n          {{ plan.parent_id ? '-' : plan.recommended ? 'Yes' : 'No' }}\n        </td>\n        <td data-label=\"Position\">{{ plan.parent_id ? '-' : plan.position }}</td>\n        <td data-label=\"Last Updated\">{{ plan.updated_at | formattedDate }}</td>\n        <td class=\"edit-column\">\n          <button\n            mat-icon-button\n            (click)=\"showCrupdatePlanModal(plan)\"\n            *ngIf=\"currentUser.hasPermission('plans.update')\"\n            [matTooltip]=\"'Edit plan' | trans\"\n          >\n            <mat-icon svgIcon=\"edit\"></mat-icon>\n          </button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <no-results-message svgImage=\"online-payments.svg\" *ngIf=\"datatable.paginator.noResults$ | async\">\n    <span primary-text trans>No plans have been created yet</span>\n  </no-results-message>\n  <datatable-footer></datatable-footer>\n</div>\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {CrupdatePlanModalComponent} from '../crupdate-plan-modal/crupdate-plan-modal.component';\nimport {finalize} from 'rxjs/operators';\nimport {Plans} from '@common/shared/billing/plans.service';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {Plan} from '@common/core/types/models/Plan';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {DatatableService} from '@common/datatable/datatable.service';\nimport { PLAN_INDEX_FILTERS } from '@common/admin/billing/plans/plan-index/plan-index-filters';\n\n@Component({\n    selector: 'plan-index',\n    templateUrl: './plan-index.component.html',\n    styleUrls: ['./plan-index.component.scss'],\n    providers: [DatatableService],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PlanIndexComponent implements OnInit {\n    filters = PLAN_INDEX_FILTERS;\n    loading$ = new BehaviorSubject<boolean>(false);\n    plans$ = this.datatable.data$ as Observable<Plan[]>;\n\n    constructor(\n        private plans: Plans,\n        public currentUser: CurrentUser,\n        private toast: Toast,\n        public datatable: DatatableService<Plan>,\n    ) {}\n\n    ngOnInit() {\n        this.datatable.init({\n            uri: Plans.BASE_URI,\n        });\n    }\n\n    public maybeDeleteSelectedPlans() {\n        this.datatable.confirmResourceDeletion('plans')\n            .subscribe(() => {\n                this.loading$.next(true);\n                this.plans.delete(this.datatable.selectedRows$.value).pipe(finalize(() => {\n                    this.loading$.next(false);\n                    this.datatable.reset();\n                })).subscribe();\n            });\n    }\n\n    public showCrupdatePlanModal(plan?: Plan) {\n        this.datatable.openCrupdateResourceModal(\n            CrupdatePlanModalComponent,\n            {plan, plans: this.datatable.data$.value},\n        ).subscribe();\n    }\n\n    public syncPlans() {\n        this.loading$.next(true);\n        this.plans.sync()\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(() => {\n                this.toast.open('Synced plans across all enabled payment gateways');\n            });\n    }\n}\n","<div class=\"modal-header\">\n    <h2 class=\"modal-title\" mat-dialog-title *ngIf=\"data.subscription\" trans>Update Subscription Details</h2>\n    <h2 class=\"modal-title\" mat-dialog-title *ngIf=\"!data.subscription\" trans>Create a New Subscription</h2>\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form autocomplete=\"off\" (ngSubmit)=\"confirm()\" *ngIf=\"errors$ | async as errors\" ngNativeValidate>\n    <div class=\"many-inputs mat-dialog-content\" mat-dialog-content>\n\n        <div class=\"input-container\">\n            <label for=\"user\" trans>User</label>\n            <input type=\"text\" id=\"user\" placeholder=\"Search for user...\" [formControl]=\"userAutocomplete\" [matAutocomplete]=\"auto\" required>\n            <div class=\"error\" *ngIf=\"errors.user_id\">{{errors.user_id}}</div>\n            <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\">\n                <mat-option *ngFor=\"let user of filteredUsers | async\" [value]=\"user\">{{ user.email }}</mat-option>\n            </mat-autocomplete>\n        </div>\n\n        <ng-container [formGroup]=\"form\">\n            <div class=\"input-container\">\n                <label for=\"plan\" trans>Plan</label>\n                <select id=\"plan\" formControlName=\"plan_id\" required>\n                    <option [ngValue]=\"plan.id\" *ngFor=\"let plan of plans\">\n                        <full-plan-name [plan]=\"plan\"></full-plan-name>\n                        ({{plan.amount | currency:plan.currency}})\n                    </option>\n                </select>\n            </div>\n\n            <div class=\"input-container\">\n                <label for=\"description\" trans>Description</label>\n                <textarea id=\"description\" formControlName=\"description\"></textarea>\n                <div class=\"error\" *ngIf=\"errors.description\">{{errors.description}}</div>\n            </div>\n\n            <div class=\"input-container date-picker-input-container\">\n                <label for=\"renews_at\" trans>Renews At</label>\n                <input id=\"renews_at\" formControlName=\"renews_at\" [matDatepicker]=\"renewsAtDatePicker\" (click)=\"toggleDatePicker(renewsAtDatePicker)\">\n                <mat-datepicker-toggle [for]=\"renewsAtDatePicker\"></mat-datepicker-toggle>\n                <p trans>This will only change local records. User will continue to be billed on their original cycle on the payment gateway.</p>\n                <div class=\"error\" *ngIf=\"errors.renews_at\">{{errors.renews_at}}</div>\n                <mat-datepicker #renewsAtDatePicker></mat-datepicker>\n            </div>\n\n            <div class=\"input-container date-picker-input-container\">\n                <label for=\"ends_at\" trans>Ends At</label>\n                <input id=\"ends_at\" formControlName=\"ends_at\" [matDatepicker]=\"endsAtDatePicker\" (click)=\"toggleDatePicker(endsAtDatePicker)\">\n                <p trans>This will only change local records. User will continue to be billed on their original cycle on the payment gateway.</p>\n                <div class=\"error\" *ngIf=\"errors.ends_at\">{{errors.ends_at}}</div>\n                <mat-datepicker-toggle [for]=\"endsAtDatePicker\"></mat-datepicker-toggle>\n                <mat-datepicker #endsAtDatePicker></mat-datepicker>\n            </div>\n        </ng-container>\n    </div>\n\n    <div class=\"buttons right mat-dialog-actions\" mat-dialog-actions>\n        <button (click)=\"close()\" type=\"button\" mat-button class=\"button cancel\" trans>Cancel</button>\n        <button type=\"submit\" class=\"button primary\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\">\n            <span *ngIf=\"data.subscription\" trans>Update</span>\n            <span *ngIf=\"!data.subscription\" trans>Create</span>\n        </button>\n    </div>\n</form>\n\n<loading-indicator class=\"overlay\" [isVisible]=\"loading$ | async\"></loading-indicator>\n","import {ChangeDetectionStrategy, Component, Inject, OnInit} from '@angular/core';\nimport {MatDatepicker} from '@angular/material/datepicker';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormBuilder, FormControl} from '@angular/forms';\nimport {debounceTime, distinctUntilChanged, finalize, switchMap} from 'rxjs/operators';\nimport {BehaviorSubject, Observable, of as observableOf, Subject} from 'rxjs';\nimport {User} from '@common/core/types/models/User';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {Users} from '@common/auth/users.service';\nimport {Subscription} from '@common/shared/billing/models/subscription';\nimport {Plans} from '@common/shared/billing/plans.service';\nimport {Subscriptions} from '@common/shared/billing/subscriptions.service';\nimport {Plan} from '@common/core/types/models/Plan';\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\n\nexport interface CrupdateSubscriptionModalData {\n    subscription?: Subscription;\n}\n\ninterface Errors extends Partial<Subscription> {\n    general?: string;\n}\n\n@Component({\n    selector: 'crupdate-subscription-modal',\n    templateUrl: './crupdate-subscription-modal.component.html',\n    styleUrls: ['./crupdate-subscription-modal.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CrupdateSubscriptionModalComponent implements OnInit {\n    public loading$ = new BehaviorSubject<boolean>(false);\n\n    public form = this.fb.group({\n        plan_id: [''],\n        description: [''],\n        renews_at: [''],\n        ends_at: [''],\n    });\n    \n    public errors$ = new BehaviorSubject<Errors>({});\n\n    public userAutocomplete: FormControl = new FormControl(null);\n    public filteredUsers: Observable<User[]> = new Subject();\n    public plans: Plan[] = [];\n    \n    constructor(\n        private dialogRef: MatDialogRef<CrupdateSubscriptionModalComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: CrupdateSubscriptionModalData,\n        public subscriptions: Subscriptions,\n        private toast: Toast,\n        private users: Users,\n        private plansApi: Plans,\n        private fb: FormBuilder,\n    ) {\n        this.resetState();\n    }\n\n    ngOnInit() {\n        this.resetState();\n        this.bindToUserAutocomplete();\n        this.fetchPlans();\n\n        // toggle renews_at/ends_at enabled/disabled state\n        this.form.get('ends_at').valueChanges.pipe(distinctUntilChanged()).subscribe(value => {\n            value ? this.form.get('renews_at').disable() : this.form.get('renews_at').enable();\n        });\n        this.form.get('renews_at').valueChanges.pipe(distinctUntilChanged()).subscribe(value => {\n            value ? this.form.get('ends_at').disable() : this.form.get('ends_at').enable();\n        });\n\n        if (this.data.subscription) {\n            this.hydrateModel(this.data.subscription);\n        }\n    }\n    \n    public confirm() {\n        this.loading$.next(true);\n        let request;\n\n        if (this.data.subscription) {\n            request = this.subscriptions.update(this.data.subscription.id, this.getPayload());\n        } else {\n            request = this.subscriptions.create(this.getPayload());\n        }\n\n        request\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.close(response.subscription);\n                const action = this.data.subscription ? 'updated' : 'created';\n                this.toast.open('Subscription ' + action);\n            }, (errResponse: BackendErrorResponse) => this.errors$.next(errResponse.errors));\n    }\n    \n    public close(data?: any) {\n        this.resetState();\n        this.dialogRef.close(data);\n    }\n\n    public displayFn(user?: User): string {\n        return user ? user.email : null;\n    }\n    \n    private hydrateModel(subscription: Subscription) {\n        const data = {...subscription};\n        if (subscription.user_id) {\n            this.userAutocomplete.setValue(subscription.user);\n        }\n        this.form.patchValue(data);\n    }\n    \n    private getPayload() {\n        const payload = this.form.value as Partial<Subscription>;\n\n        // if we are creating a new subscription, add user ID to payload\n        if (!this.data.subscription && this.userAutocomplete.value) {\n            payload.user_id = this.userAutocomplete.value.id;\n        }\n        \n        return payload;\n    }\n    \n    private resetState() {\n        this.form.reset();\n        this.errors$.next({});\n    }\n\n    public toggleDatePicker(datePicker: MatDatepicker<Date>) {\n        if (datePicker.opened) {\n            datePicker.close();\n        } else {\n            datePicker.open();\n        }\n    }\n    \n    private bindToUserAutocomplete() {\n        this.filteredUsers = this.userAutocomplete.valueChanges.pipe(\n            debounceTime(400),\n            switchMap(query => {\n                if (!query) return observableOf([]);\n                return this.users.getAll({query});\n            })\n        );\n    }\n    \n    private fetchPlans() {\n        this.plansApi.all().subscribe(response => {\n            this.plans = response.pagination.data;\n\n            // select first plan, if none is selected yet\n            if (!this.form.value.plan_id && this.plans.length) {\n                this.form.patchValue({plan_id: this.plans[0].id});\n            }\n        });\n    }\n}\n","import {\n    DatatableFilter,\n    FilterControlType,\n    FilterOperator,\n} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/datatable-filter';\nimport { CreatedAtFilter, UpdatedAtFilter } from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/timestamp-filter';\n\nexport const SUBSCRIPTION_INDEX_FILTERS: DatatableFilter[] = [\n    new DatatableFilter({\n        type: FilterControlType.Select,\n        key: 'ends_at',\n        label: 'Status',\n        description: 'Whether subscription is active or cancelled',\n        defaultValue: {value: null, operator: FilterOperator.eq},\n        options: [\n            {key: 'Active', value: {value: null, operator: FilterOperator.eq}},\n            {key: 'Cancelled', value: {value: null, operator: FilterOperator.ne}},\n        ],\n    }),\n    new DatatableFilter({\n        type: FilterControlType.Select,\n        key: 'gateway_name',\n        label: 'Gateway',\n        description: 'With which payment provider was subscription created',\n        defaultValue: 'stripe',\n        options: [\n            {key: 'Stripe', value: 'stripe'},\n            {key: 'Paypal', value: 'paypal'},\n            {key: 'None', value: null},\n        ],\n    }),\n  new CreatedAtFilter({\n    description: 'Date subscription was created',\n  }),\n  new UpdatedAtFilter({\n    description: 'Date subscription was last updated',\n  }),\n];\n","<div class=\"datatable-page-header\">\n    <h1 trans>Subscriptions</h1>\n\n    <div class=\"header\">\n        <datatable-filters pluralName=\"subscriptions\" [filters]=\"filters\"></datatable-filters>\n        <div class=\"action-buttons\">\n            <button\n              mat-raised-button\n              color=\"accent\"\n              (click)=\"openCrupdateSubscriptionModal()\"\n              [disabled]=\"!currentUser.hasPermission('subscriptions.create')\"\n              class=\"button-with-icon\"\n            >\n                <mat-icon svgIcon=\"add\"></mat-icon>\n                <span trans>Add New Subscription</span>\n            </button>\n        </div>\n    </div>\n</div>\n\n<div class=\"datatable responsive-table\">\n    <table class=\"material-table\">\n        <thead>\n        <tr>\n            <th table-sort-header=\"user_id\" trans>User</th>\n            <th table-sort-header trans>Gateway</th>\n            <th table-sort-header=\"ends_at\" trans>Cancelled</th>\n            <th trans>On Grace Period</th>\n            <th table-sort-header trans>Renews At</th>\n            <th table-sort-header trans>Ends At</th>\n            <th table-sort-header=\"created_at\" trans>Created At</th>\n            <th></th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let subscription of subscriptions$ | async\">\n            <td>\n                <user-column [user]=\"subscription.user\"></user-column>\n            </td>\n            <td data-label=\"Gateway\">{{subscription.gateway_name}}</td>\n            <td data-label=\"Cancelled\">\n                <mat-icon svgIcon=\"check\" *ngIf=\"subscription.cancelled\"></mat-icon>\n                <span *ngIf=\"!subscription.cancelled\">-</span>\n            </td>\n            <td data-label=\"On Grace Period\">\n                <mat-icon svgIcon=\"check\" *ngIf=\"subscription.on_grace_period\"></mat-icon>\n                <span *ngIf=\"!subscription.on_grace_period\">-</span>\n            </td>\n            <td data-label=\"Renews At\">{{subscription.renews_at ? (subscription.renews_at | formattedDate) : '-'}}</td>\n            <td data-label=\"Ends At\">{{subscription.ends_at ? (subscription.ends_at | formattedDate) : '-'}}</td>\n            <td data-label=\"Created At\">{{subscription.created_at | formattedDate}}</td>\n            <td class=\"edit-column\">\n                <ng-container *ngIf=\"currentUser.hasPermission('subscriptions.delete')\">\n                    <button mat-icon-button (click)=\"openCrupdateSubscriptionModal(subscription)\" [matTooltip]=\"'Edit' | trans\"><mat-icon svgIcon=\"edit\"></mat-icon></button>\n                    <button mat-icon-button (click)=\"maybeCancelSubscription(subscription)\" [disabled]=\"subscription.cancelled\" [matTooltip]=\"'Cancel/Suspend' | trans\"><mat-icon svgIcon=\"pause\"></mat-icon></button>\n                    <button mat-icon-button (click)=\"maybeDeleteSubscription(subscription)\" [matTooltip]=\"'Delete' | trans\"><mat-icon svgIcon=\"delete\"></mat-icon></button>\n                </ng-container>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n    <no-results-message svgImage=\"subscriptions.svg\" *ngIf=\"datatable.paginator.noResults$ | async\">\n        <span primary-text trans>No subscriptions have been created yet</span>\n    </no-results-message>\n    <datatable-footer></datatable-footer>\n</div>\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {finalize} from 'rxjs/operators';\nimport {CrupdateSubscriptionModalComponent} from '../crupdate-subscription-modal/crupdate-subscription-modal.component';\nimport {Subscription} from '@common/shared/billing/models/subscription';\nimport {Subscriptions} from '@common/shared/billing/subscriptions.service';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {ConfirmModalComponent} from '@common/core/ui/confirm-modal/confirm-modal.component';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {DatatableService} from '@common/datatable/datatable.service';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport { SUBSCRIPTION_INDEX_FILTERS } from '@common/admin/billing/subscriptions/subscription-index/subscription-index-filters';\n\n@Component({\n    selector: 'subscription-index',\n    templateUrl: './subscription-index.component.html',\n    styleUrls: ['./subscription-index.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [DatatableService],\n})\nexport class SubscriptionIndexComponent implements OnInit {\n    filters = SUBSCRIPTION_INDEX_FILTERS;\n    loading$ = new BehaviorSubject<boolean>(false);\n    subscriptions$ = this.datatable.data$ as Observable<Subscription[]>;\n\n    constructor(\n        private modal: Modal,\n        private subscriptions: Subscriptions,\n        public currentUser: CurrentUser,\n        private toast: Toast,\n        public datatable: DatatableService<Subscription>,\n    ) {}\n\n    ngOnInit() {\n        this.datatable.init({\n            uri: Subscriptions.BASE_URI,\n        });\n    }\n\n    public maybeCancelSubscription(subscription: Subscription) {\n        this.modal.open(ConfirmModalComponent, {\n            title: 'Cancel Subscription',\n            body: 'Are you sure you want to cancel this subscription?',\n            bodyBold: 'This will cancel or suspend subscription based on its gateway and put user on grace period until their next scheduled renewal date and allow them to renew the subscription.',\n            ok: 'Cancel',\n            cancel: 'Go Back'\n        }).afterClosed().subscribe(confirmed => {\n            if ( ! confirmed) return;\n            this.cancelOrDeleteSubscription(subscription, {delete: false});\n        });\n    }\n\n    public maybeDeleteSubscription(subscription: Subscription) {\n        this.modal.open(ConfirmModalComponent, {\n            title: 'Delete Subscription',\n            body: 'Are you sure you want to delete this subscription?',\n            bodyBold: 'This will permanently delete user subscription and immediately cancel it on billing gateway.',\n            ok: 'Delete',\n            cancel: 'Go Back'\n        }).afterClosed().subscribe(confirmed => {\n            if ( ! confirmed) return;\n            this.cancelOrDeleteSubscription(subscription, {delete: true});\n        });\n    }\n\n    private cancelOrDeleteSubscription(subscription: Subscription, params: {delete?: boolean} = {}) {\n        this.loading$.next(true);\n        this.subscriptions.cancel(subscription.id, {delete: params.delete})\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(() => {\n                this.datatable.reset();\n                this.toast.open('Subscription cancelled.');\n            });\n    }\n\n    public openCrupdateSubscriptionModal(subscription?: Subscription) {\n        this.modal.open(CrupdateSubscriptionModalComponent, {subscription})\n            .afterClosed()\n            .subscribe(newSubscription => {\n                if ( ! newSubscription) return;\n                this.datatable.reset();\n            });\n    }\n}\n","<div class=\"header\">\n  <div class=\"title\" trans>GDPR</div>\n  <div class=\"subtitle\" trans>\n    Configure settings related to EU General Data Protection Regulation.\n  </div>\n</div>\n\n<form class=\"body many-inputs\" (ngSubmit)=\"saveSettings()\" ngNativeValidate>\n  <div class=\"setting-toggle-container\">\n    <mat-slide-toggle\n      name=\"cookie_notice.enable\"\n      id=\"cookie_notice.enable\"\n      [(ngModel)]=\"state.client['cookie_notice.enable']\"\n      trans\n      >Enable Cookie Notice</mat-slide-toggle\n    >\n    <p trans>\n      Whether cookie notice should be shown automatically to users from EU until it is accepted.\n    </p>\n  </div>\n\n  <div class=\"error-group many-inputs\" *ngIf=\"state.client['cookie_notice.enable']\">\n    <div class=\"input-container\" *ngIf=\"customPages$ | async as customPages\">\n      <label for=\"cookie_notice.learn_more\">Learn More Link</label>\n      <select\n        id=\"cookie_notice.learn_more\"\n        name=\"cookie_notice.learn_more\"\n        [(ngModel)]=\"state.client['cookie_notice.learn_more']\"\n      >\n        <option value=\"\" trans>None (Hide learn more link)</option>\n        <option *ngFor=\"let item of customPages.items\" [value]=\"item.action\">\n          {{ item.label }}\n        </option>\n      </select>\n    </div>\n\n    <div class=\"input-container\">\n      <div class=\"input-container\">\n        <label for=\"cookie-notice-position\" trans>Cookie Notice Position</label>\n        <select\n          id=\"cookie-notice-position\"\n          name=\"cookie-notice-position\"\n          [(ngModel)]=\"state.client['cookie_notice.position']\"\n        >\n          <option value=\"top\" trans>Top</option>\n          <option value=\"bottom\" trans>Bottom</option>\n        </select>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"error-group no-border-top no-bottom-border policies-group\">\n    <h2>\n      <span>Registration Page Policies</span>\n      <button\n        type=\"button\"\n        mat-icon-button\n        color=\"accent\"\n        class=\"add-policy-button\"\n        (click)=\"addRegisterPolicy()\"\n      >\n        <mat-icon svgIcon=\"add\"></mat-icon>\n      </button>\n    </h2>\n    <p trans>\n      Here you can create policies that will be shown on registration page and user will be required\n      to accept them by toggling a checkbox.\n    </p>\n    <ul class=\"unstyled-list\">\n      <li\n        *ngFor=\"let policy of registerPolicies.controls; index as i\"\n        [formGroup]=\"policy\"\n        class=\"many-inputs policy-list-item\"\n      >\n        <div class=\"input-container\">\n          <label for=\"policy-name-{{ i }}\" class=\"policy-name-label\">\n            <span trans>Name</span>\n            <button\n              mat-icon-button\n              color=\"warn\"\n              [disableRipple]=\"true\"\n              (click)=\"removeRegisterPolicy(i)\"\n            >\n              <mat-icon svgIcon=\"remove\"></mat-icon>\n            </button>\n          </label>\n          <input type=\"text\" id=\"policy-name-{{ i }}\" formControlName=\"label\" required />\n        </div>\n        <div class=\"input-container\">\n          <label for=\"policy-action-{{ i }}\" trans>Link</label>\n          <div class=\"inline-inputs\">\n            <select\n              class=\"policy-type-select\"\n              id=\"policy-type-{{ i }}\"\n              formControlName=\"type\"\n              (change)=\"onPolicyTypeChange(policy)\"\n            >\n              <option value=\"page\" trans>Page</option>\n              <option value=\"link\" trans>Link</option>\n            </select>\n            <input\n              type=\"url\"\n              class=\"policy-action-input\"\n              id=\"policy-action-{{ i }}\"\n              *ngIf=\"policy.value.type === 'link'\"\n              formControlName=\"action\"\n              placeholder=\"Optional...\"\n              trans-placeholder\n            />\n            <select\n              id=\"policy-action-{{ i }}\"\n              class=\"policy-action-input\"\n              formControlName=\"action\"\n              *ngIf=\"policy.value.type === 'page'\"\n            >\n              <option *ngFor=\"let item of (customPages$ | async).items\" [value]=\"item.action\">\n                {{ item.label }}\n              </option>\n            </select>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </div>\n\n  <button\n    mat-raised-button\n    color=\"accent\"\n    class=\"button primary update-button\"\n    type=\"submit\"\n    [disabled]=\"state.loading$ | async\"\n    trans\n  >\n    Update\n  </button>\n  <mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"state.loading$ | async\"></mat-progress-bar>\n</form>\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {SettingsPanelComponent} from '@common/admin/settings/settings-panel.component';\nimport {BehaviorSubject} from 'rxjs';\nimport {MenuItemCategory} from '@common/admin/appearance/panels/menus-appearance-panel/menus/item-categories/menu-item-category';\nimport {AbstractControl, FormArray, FormControl, FormGroup} from '@angular/forms';\nimport {MenuItem} from '@common/core/ui/custom-menu/menu-item';\n\n@Component({\n    selector: 'gdpr-settings',\n    templateUrl: './gdpr-settings.component.html',\n    styleUrls: ['./gdpr-settings.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'class': 'settings-panel'},\n})\nexport class GdprSettingsComponent extends SettingsPanelComponent implements OnInit {\n    public customPages$ = new BehaviorSubject<MenuItemCategory>({name: '', items: []});\n    public registerPolicies = new FormArray([]);\n\n    ngOnInit() {\n        this.valueLists.get(['menuItemCategories']).subscribe(response => {\n            this.customPages$.next(response.menuItemCategories.find(c => c.name === 'Custom Page'));\n        });\n\n        this.settings.getJson('register_policies', []).forEach(policy => {\n            this.addRegisterPolicy(policy);\n        });\n    }\n\n    public saveSettings() {\n        const settings = this.state.getModified();\n        settings.client.register_policies = JSON.stringify(this.registerPolicies.value);\n        super.saveSettings(settings);\n    }\n\n    public addRegisterPolicy(policy: Partial<MenuItem> = {}) {\n        this.registerPolicies.push(new FormGroup({\n            label: new FormControl(policy.label || ''),\n            action: new FormControl(policy.action || this.getFirstCustomPageAction()),\n            type: new FormControl(policy.type || 'page'),\n        }));\n    }\n\n    public removeRegisterPolicy(i: number) {\n        this.registerPolicies.removeAt(i);\n    }\n\n    public onPolicyTypeChange(control: AbstractControl) {\n        control.get('action').reset();\n        if (control.get('type').value === 'page') {\n            control.get('action').setValue(this.getFirstCustomPageAction());\n        }\n    }\n\n    private getFirstCustomPageAction(): string {\n        return this.customPages$.value.items[0] && this.customPages$.value.items[0].action;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {AppHttpClient} from '../../core/http/app-http-client.service';\nimport {PaginatedBackendResponse} from '../../core/types/pagination/paginated-backend-response';\nimport {Tag} from '@common/core/types/models/Tag';\nimport {BackendResponse} from '@common/core/types/backend-response';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TagsService {\n    static BASE_URI = 'tags';\n\n    constructor(private http: AppHttpClient) {\n    }\n\n    public index(params?: object): PaginatedBackendResponse<Tag> {\n        return this.http.get(TagsService.BASE_URI, params);\n    }\n\n    public create(params: Partial<Tag>): BackendResponse<{tag: Tag}> {\n        return this.http.post(TagsService.BASE_URI, params);\n    }\n\n    public update(id: number, params: Partial<Tag>): BackendResponse<{tag: Tag}> {\n        return this.http.put(`${TagsService.BASE_URI}/${id}`, params);\n    }\n\n    public delete(tagIds: number[]): BackendResponse<void> {\n        return this.http.delete(`${TagsService.BASE_URI}/${tagIds}`);\n    }\n\n}\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title>\n        <span *ngIf=\"data.tag\" trans>Update Tag</span>\n        <span *ngIf=\"!data.tag\" trans>Create a New Tag</span>\n    </h2>\n    <button type=\"button\" (click)=\"close()\" class=\"close-button\" mat-icon-button tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form autocomplete=\"off\" ngNativeValidate [formGroup]=\"form\" (ngSubmit)=\"confirm()\">\n   <mat-dialog-content class=\"many-inputs\">\n\n       <div class=\"input-container\">\n           <label for=\"crupdate-tag-modal-name\" trans>Name</label>\n           <input type=\"text\" id=\"crupdate-tag-modal-name\" formControlName=\"name\" required>\n           <p trans>Unique tag identifier.</p>\n           <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\n       </div>\n\n       <div class=\"input-container\">\n           <label for=\"display_name\" trans>Display Name</label>\n           <input type=\"text\" formControlName=\"display_name\" id=\"display_name\">\n           <p trans>User friendly tag name.</p>\n           <div class=\"error\" *ngIf=\"errors.display_name\">{{errors.display_name}}</div>\n       </div>\n\n       <div class=\"input-container\">\n           <label for=\"crupdate_tag_modal_type\" trans>Type</label>\n           <select formControlName=\"type\" id=\"crupdate_tag_modal_type\" class=\"capitalize\" required>\n               <option [value]=\"type.name\" *ngFor=\"let type of tagTypes\" trans>{{type.name}}</option>\n           </select>\n           <div class=\"error\" *ngIf=\"errors.type\">{{errors.type}}</div>\n       </div>\n   </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <button (click)=\"close()\" type=\"button\" class=\"cancel-button\" mat-button trans>Cancel</button>\n        <button type=\"submit\" class=\"submit-button\" mat-raised-button color=\"accent\">\n            <span *ngIf=\"data.tag\" trans>Update</span>\n            <span *ngIf=\"!data.tag\" trans>Create</span>\n        </button>\n    </mat-dialog-actions>\n</form>\n","import {Component, Inject} from '@angular/core';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Tag} from '@common/core/types/models/Tag';\nimport {TagsService} from '@common/core/services/tags.service';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {Settings} from '@common/core/config/settings.service';\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\n\ninterface CrupdateTagModalData {\n   tag?: Tag;\n   forceType?: string;\n}\n\ninterface CrupdateTagModalErrors {\n    name?: string;\n    display_name?: string;\n    type?: string;\n}\n\n@Component({\n    selector: 'crupdate-tag-modal',\n    templateUrl: './crupdate-tag-modal.component.html',\n    styleUrls: ['./crupdate-tag-modal.component.scss'],\n})\nexport class CrupdateTagModalComponent {\n    public errors: CrupdateTagModalErrors = {};\n    public tagTypes: {name: string, system?: boolean}[];\n    public isSystemTag = false;\n\n    public form = new FormGroup({\n        name: new FormControl(''),\n        display_name: new FormControl(''),\n        type: new FormControl(''),\n    });\n\n    constructor(\n        private dialogRef: MatDialogRef<CrupdateTagModalComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: CrupdateTagModalData,\n        private toast: Toast,\n        private tags: TagsService,\n        private settings: Settings,\n    ) {\n        this.hydrate();\n    }\n\n    public close(tag?: Tag) {\n        this.errors = {};\n        this.dialogRef.close(tag);\n    }\n\n    private hydrate() {\n        this.tagTypes = this.settings.get('vebto.admin.tagTypes', []);\n\n        if (this.data.tag) {\n            this.form.patchValue(this.data.tag);\n        } else {\n            this.form.get('type').patchValue(this.data.forceType || this.tagTypes[0]?.name || '');\n        }\n\n        const type = this.data.forceType || this.data.tag?.type;\n        this.isSystemTag = this.tagTypes.find(t => t.name === type)?.system;\n        if (this.isSystemTag || this.data.forceType) {\n            this.form.get('type').disable();\n        }\n        if (this.isSystemTag) {\n            this.form.get('name').disable();\n        }\n    }\n\n    public confirm() {\n        const request = this.data.tag ?\n            this.tags.update(this.data.tag.id, this.form.getRawValue()) :\n            this.tags.create(this.form.getRawValue());\n        request.subscribe(response => {\n            this.toast.open('Tag ' + (this.data.tag ? 'Updated' : 'Created'));\n            this.close(response.tag);\n        }, (errResponse: BackendErrorResponse) => this.errors = errResponse.errors);\n    }\n}\n","<div class=\"datatable-page-header\">\n  <h1 trans>\n    <span trans>Tags</span>\n  </h1>\n\n  <div class=\"header\">\n    <datatable-filters pluralName=\"tags\" [filters]=\"filters\"></datatable-filters>\n    <div class=\"action-buttons\">\n      <button\n        *ngIf=\"currentUser.hasPermission('tags.create')\"\n        mat-raised-button\n        color=\"accent\"\n        class=\"button-with-icon\"\n        (click)=\"showCrupdateTagModal()\"\n      >\n        <mat-icon svgIcon=\"add\"></mat-icon>\n        <span trans>Add New Tag</span>\n      </button>\n    </div>\n  </div>\n</div>\n\n<div class=\"datatable responsive-table\">\n  <mat-progress-bar\n    class=\"loading-bar\"\n    mode=\"indeterminate\"\n    color=\"accent\"\n    *ngIf=\"datatable.paginator && datatable.paginator.loading$ | async\"\n  ></mat-progress-bar>\n  <table class=\"material-table\">\n    <thead>\n      <tr>\n        <th table-header-checkbox></th>\n        <th table-sort-header trans>Name</th>\n        <th table-sort-header trans>Type</th>\n        <th table-sort-header trans>Display Name</th>\n        <th table-sort-header=\"updated_at\" trans>Last Updated</th>\n        <th></th>\n      </tr>\n      <tr *ngIf=\"datatable.selectedRows$.value.length as selectedCount\">\n        <th colspan=\"6\">\n          <div\n            class=\"bulk-actions-title\"\n            [transValues]=\"{count: selectedCount, resource: 'tag(s)'}\"\n            trans\n          >\n            :count :resource selected:\n          </div>\n          <div class=\"bulk-actions\">\n            <button\n              type=\"button\"\n              mat-raised-button\n              color=\"warn\"\n              (click)=\"maybeDeleteSelectedTags()\"\n              [disabled]=\"!currentUser.hasPermission('tags.delete')\"\n              trans\n            >\n              Delete\n            </button>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let tag of tags$ | async\">\n        <td [table-body-checkbox]=\"tag.id\"></td>\n        <td data-label=\"Name\">{{ tag.name }}</td>\n        <td data-label=\"Type\">{{ tag.type }}</td>\n        <td data-label=\"Display Name\">{{ tag.display_name }}</td>\n        <td data-label=\"Last Updated\">\n          {{ tag.updated_at ? (tag.updated_at | formattedDate) : '-' }}\n        </td>\n        <td class=\"edit-column\">\n          <button\n            mat-icon-button\n            (click)=\"showCrupdateTagModal(tag)\"\n            *ngIf=\"currentUser.hasPermission('tags.update')\"\n            [matTooltip]=\"'Edit tag' | trans\"\n          >\n            <mat-icon svgIcon=\"edit\"></mat-icon>\n          </button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <no-results-message svgImage=\"folder.svg\" *ngIf=\"datatable.paginator.noResults$ | async\">\n    <span primary-text trans>No tags have been created yet</span>\n  </no-results-message>\n  <datatable-footer></datatable-footer>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {CrupdateTagModalComponent} from './crupdate-tag-modal/crupdate-tag-modal.component';\nimport {Tag} from '@common/core/types/models/Tag';\nimport {TagsService} from '@common/core/services/tags.service';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {DatatableService} from '../../datatable/datatable.service';\nimport {Observable} from 'rxjs';\nimport {Settings} from '../../core/config/settings.service';\nimport {TAG_INDEX_FILTERS} from '@common/admin/tag-index/tag-index-filters';\n\n@Component({\n    selector: 'tags',\n    templateUrl: './tag-index.component.html',\n    providers: [DatatableService],\n})\nexport class TagIndexComponent implements OnInit {\n    filters = TAG_INDEX_FILTERS(this.settings.get('vebto.admin.tagTypes'));\n    tags$ = this.datatable.data$ as Observable<Tag[]>;\n\n    constructor(\n        private tags: TagsService,\n        public currentUser: CurrentUser,\n        public datatable: DatatableService<Tag>,\n        public settings: Settings\n    ) {}\n\n    ngOnInit() {\n        this.datatable.init({\n            uri: TagsService.BASE_URI,\n        });\n    }\n\n    maybeDeleteSelectedTags() {\n        this.datatable.confirmResourceDeletion('tags').subscribe(() => {\n            this.tags\n                .delete(this.datatable.selectedRows$.value)\n                .subscribe(() => {\n                    this.datatable.reset();\n                });\n        });\n    }\n\n    showCrupdateTagModal(tag?: Tag) {\n        this.datatable\n            .openCrupdateResourceModal(CrupdateTagModalComponent, {tag})\n            .subscribe();\n    }\n}\n","import {\n    DatatableFilter,\n    FilterControlType,\n} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/datatable-filter';\nimport {\n    CreatedAtFilter,\n    UpdatedAtFilter,\n} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/timestamp-filter';\n\nexport const TAG_INDEX_FILTERS = (\n    types: {name: string; system?: boolean}[]\n): DatatableFilter[] => {\n    return [\n        new DatatableFilter({\n            type: FilterControlType.Select,\n            key: 'type',\n            description: 'Type of the link',\n            defaultValue: types[0].name,\n            options: types.map(t => {\n                return {key: t.name, value: t.name};\n            }),\n        }),\n        new CreatedAtFilter({\n            description: 'Date tag was created',\n        }),\n        new UpdatedAtFilter({\n            description: 'Date tag was last updated',\n        }),\n    ];\n};\n","import {\n    DatatableFilter,\n    FilterControlType,\n} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/datatable-filter';\nimport {FindUserModalComponent} from '@common/auth/find-user-modal/find-user-modal.component';\nimport {\n    CreatedAtFilter,\n    UpdatedAtFilter,\n} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/timestamp-filter';\n\nexport const CUSTOM_PAGE_FILTERS: DatatableFilter[] = [\n    new UpdatedAtFilter({\n        description: 'Date the page was last updated',\n    }),\n    new CreatedAtFilter({\n        description: 'Date the page was created',\n    }),\n    new DatatableFilter({\n        type: FilterControlType.SelectModel,\n        key: 'user_id',\n        label: 'User',\n        description: 'User page was created by',\n        component: FindUserModalComponent,\n    }),\n];\n","<div class=\"datatable-page-header\">\n  <h1 trans>\n    <span trans>Custom Pages</span>\n  </h1>\n\n  <div class=\"header\">\n    <datatable-filters pluralName=\"pages\" [filters]=\"filters\"></datatable-filters>\n    <div class=\"action-buttons\">\n      <a\n        *ngIf=\"currentUser.hasPermission('custom_pages.create')\"\n        mat-raised-button\n        color=\"accent\"\n        routerLink=\"new\"\n        class=\"button-with-icon\"\n      >\n        <mat-icon svgIcon=\"add\"></mat-icon>\n        <span trans>Add New Page</span>\n      </a>\n    </div>\n  </div>\n</div>\n\n<div class=\"datatable responsive-table\">\n  <mat-progress-bar\n    class=\"loading-bar\"\n    mode=\"indeterminate\"\n    color=\"accent\"\n    *ngIf=\"datatable.paginator && datatable.paginator.loading$ | async\"\n  ></mat-progress-bar>\n  <table class=\"material-table\">\n    <thead>\n      <tr>\n        <th table-header-checkbox></th>\n        <th table-sort-header trans>Slug</th>\n        <th table-sort-header=\"user_id\" trans>Owner</th>\n        <th class=\"body-column\" trans>Body</th>\n        <th class=\"type-column\" table-sort-header *ngIf=\"!endpoint\" trans>Type</th>\n        <th trans>Last Updated</th>\n        <th></th>\n      </tr>\n      <tr *ngIf=\"datatable.selectedRows$.value.length as selectedCount\">\n        <th colspan=\"7\">\n          <div\n            class=\"bulk-actions-title\"\n            [transValues]=\"{count: selectedCount, resource: 'page(s)'}\"\n            trans\n          >\n            :count :resource selected:\n          </div>\n          <div class=\"bulk-actions\">\n            <button\n              type=\"button\"\n              mat-raised-button\n              color=\"warn\"\n              (click)=\"maybeDeleteSelectedPages()\"\n              trans\n            >\n              Delete\n            </button>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let page of pages$ | async\">\n        <td [table-body-checkbox]=\"page.id\"></td>\n        <td data-label=\"Slug\">\n          <a [href]=\"getPageUrl(page)\" target=\"_blank\">{{ page.slug }}</a>\n        </td>\n        <td data-label=\"Owner\">\n          <user-column [user]=\"page.user\"></user-column>\n        </td>\n        <td data-label=\"Body\" class=\"body-column\">{{ page.body }}</td>\n        <td data-label=\"Type\" class=\"type-column\" *ngIf=\"!endpoint\">\n          {{ page.type ? viewName(page.type) : 'default' }}\n        </td>\n        <td data-label=\"Last Updated\">{{ page.updated_at | formattedDate }}</td>\n        <td class=\"edit-column\">\n          <a\n            [routerLink]=\"[page.id, 'edit']\"\n            mat-icon-button\n            *ngIf=\"currentUser.hasPermission('custom_pages.update')\"\n            [matTooltip]=\"'Edit page' | trans\"\n          >\n            <mat-icon svgIcon=\"edit\"></mat-icon>\n          </a>\n          <button\n            type=\"button\"\n            mat-icon-button\n            (click)=\"maybeDeleteSelectedPages([page.id])\"\n            trans\n          >\n            <mat-icon svgIcon=\"delete\"></mat-icon>\n          </button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <no-results-message svgImage=\"custom-page.svg\" *ngIf=\"datatable.paginator.noResults$ | async\">\n    <span primary-text trans>No pages have been created yet</span>\n  </no-results-message>\n  <datatable-footer></datatable-footer>\n</div>\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {CustomPage} from '../../core/types/models/CustomPage';\nimport {Pages} from '../shared/pages.service';\nimport {CurrentUser} from '../../auth/current-user';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Toast} from '../../core/ui/toast.service';\nimport {BackendErrorResponse} from '../../core/types/backend-error-response';\nimport {HttpErrors} from '../../core/http/errors/http-errors.enum';\nimport {DatatableService} from '../../datatable/datatable.service';\nimport {Settings} from '../../core/config/settings.service';\nimport {Observable} from 'rxjs';\nimport {CUSTOM_PAGE_FILTERS} from '@common/pages/custom-pages-index/cusomt-page-filters';\n\n@Component({\n    selector: 'custom-pages-index',\n    templateUrl: './custom-pages-index.component.html',\n    styleUrls: ['./custom-pages-index.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [DatatableService],\n})\nexport class CustomPagesIndexComponent implements OnInit {\n    endpoint = this.route.snapshot.data.endpoint;\n    filters = CUSTOM_PAGE_FILTERS;\n    pages$ = this.datatable.data$ as Observable<CustomPage[]>;\n    constructor(\n        public settings: Settings,\n        public datatable: DatatableService<CustomPage>,\n        public currentUser: CurrentUser,\n        protected customPages: Pages,\n        protected toast: Toast,\n        protected router: Router,\n        protected route: ActivatedRoute\n    ) {}\n\n    ngOnInit() {\n        this.datatable.init({\n            uri: this.endpoint || Pages.BASE_URI,\n            staticParams: {with: ['user']},\n        });\n    }\n\n    maybeDeleteSelectedPages(pageIds?: number[]) {\n        this.datatable\n            .confirmResourceDeletion('tracking pixels')\n            .subscribe(() => {\n                this.customPages\n                    .delete(pageIds || this.datatable.selectedRows$.value)\n                    .subscribe(\n                        () => {\n                            this.datatable.reset();\n                            this.toast.open('Pages deleted');\n                        },\n                        (errResponse: BackendErrorResponse) => {\n                            this.toast.open(\n                                errResponse.message || HttpErrors.Default\n                            );\n                        }\n                    );\n            });\n    }\n\n    showUserColumn(): boolean {\n        return this.router.url.indexOf('admin') > -1;\n    }\n\n    getPageUrl(page: CustomPage): string {\n        return (\n            this.settings.getBaseUrl() + '/pages/' + page.id + '/' + page.slug\n        );\n    }\n\n    viewName(name: string) {\n        return name.replace(/_/g, ' ');\n    }\n}\n","<ng-container *ngIf=\"errors$ | async as errors\" [formGroup]=\"form\">\n    <div class=\"many-inputs input-header\">\n        <div class=\"input-container\">\n            <label for=\"page-title\" trans>Page Title</label>\n            <input type=\"text\" id=\"page-title\" formControlName=\"title\">\n            <div class=\"error\" *ngIf=\"errors.title\">{{errors.title}}</div>\n        </div>\n\n        <div class=\"input-container slug-input-container\" *ngIf=\"!hideSlug\">\n            <slug-control [prefix]=\"slugPrefix()\" formControlName=\"slug\"></slug-control>\n            <div class=\"error\" *ngIf=\"errors.slug\">{{errors.slug}}</div>\n        </div>\n\n        <div class=\"setting-toggle-container\">\n            <mat-slide-toggle id=\"crupdate_custom_page.hideNav\" formControlName=\"hide_nav\" trans>Hide Navbar</mat-slide-toggle>\n            <p trans>Whether default site navbar should be hidden for this page.</p>\n        </div>\n    </div>\n\n    <div class=\"actions\">\n        <button mat-raised-button color=\"accent\" (click)=\"crupdatePage()\">\n            <span *ngIf=\"page\" trans>Update</span>\n            <span *ngIf=\"!page\" trans>Create</span>\n        </button>\n        <a mat-button [routerLink]=\"backRoute()\" trans>Cancel</a>\n    </div>\n\n    <div class=\"errors\">\n        <div class=\"error\" *ngIf=\"errors.body\">{{errors.body}}</div>\n    </div>\n\n    <div class=\"editor-container\">\n        <text-editor inlineUploadPrefix=\"page_media\" class=\"text-editor\" minHeight=\"auto\" (onChange)=\"setBody($event)\" [showAdvancedControls]=\"true\"></text-editor>\n    </div>\n\n    <loading-indicator [isVisible]=\"loading$ | async\" class=\"overlay\"></loading-indicator>\n</ng-container>\n","import {ChangeDetectionStrategy, Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {delay, finalize} from 'rxjs/operators';\nimport {TextEditorComponent} from '../../../text-editor/text-editor.component';\nimport {CustomPage} from '../../../core/types/models/CustomPage';\nimport {Pages} from '../../shared/pages.service';\nimport {Toast} from '../../../core/ui/toast.service';\nimport {BehaviorSubject} from 'rxjs';\nimport {FormBuilder} from '@angular/forms';\nimport {bindSlugTo} from '../../../shared/form-controls/slug-control/bind-slug-to';\nimport {BackendErrorResponse} from '../../../core/types/backend-error-response';\n\n@Component({\n    selector: 'crupdate-page',\n    templateUrl: './crupdate-custom-page.component.html',\n    styleUrls: ['./crupdate-custom-page.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CrupdateCustomPageComponent implements OnInit {\n    @ViewChild(TextEditorComponent) textEditor: TextEditorComponent;\n    public hideSlug: boolean = this.route.snapshot.data.hideSlug;\n    public endpoint: string = this.route.snapshot.data.endpoint;\n    public loading$ = new BehaviorSubject<boolean>(false);\n    public updating$ = new BehaviorSubject<boolean>(false);\n    public page: CustomPage;\n    public form = this.fb.group({\n        title: [''],\n        slug: [''],\n        body: [''],\n        type: [''],\n        hide_nav: [false],\n    });\n    public errors$ = new BehaviorSubject<{\n        body?: string,\n        slug?: string,\n        title?: string,\n    }>({});\n\n    constructor(\n        private pages: Pages,\n        private route: ActivatedRoute,\n        private toast: Toast,\n        private router: Router,\n        private fb: FormBuilder,\n    ) {}\n\n    ngOnInit() {\n        this.route.params.subscribe(params => {\n            this.getPage(params.id);\n        });\n\n        if ( ! this.route.snapshot.data.hideSlug) {\n            bindSlugTo(this.form.get('title'));\n        }\n    }\n\n    public crupdatePage() {\n        this.loading$.next(true);\n        const request = this.updating$.value ?\n            this.pages.update(this.page.id, this.getPayload(), this.endpoint) :\n            this.pages.create(this.getPayload(), this.endpoint);\n\n        request.pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(() => {\n                this.router.navigate(this.backRoute(), {relativeTo: this.route});\n                this.toast.open(this.updating$.value ? 'Page updated' : 'Page created');\n            }, (errResponse: BackendErrorResponse) => this.errors$.next(errResponse.errors));\n    }\n\n    public getPage(id: number) {\n        if ( ! id) return;\n        this.loading$.next(true);\n        this.pages.get(id).pipe(delay(0)).subscribe(response => {\n            this.updating$.next(true);\n            this.page = response.page;\n            this.form.patchValue(response.page);\n            this.textEditor.setContents(response.page.body || '');\n            this.loading$.next(false);\n        });\n    }\n\n    private getPayload(): CustomPage {\n        return {...this.form.value};\n    }\n\n    public setBody(content: string) {\n        this.form.patchValue({body: content});\n    }\n\n    public backRoute() {\n        return this.page ? ['../../'] : ['../'];\n    }\n\n    public slugPrefix() {\n        return 'pages/' + (this.page ? this.page.id : '*');\n    }\n}\n","import {AbstractControl} from '@angular/forms';\nimport {distinctUntilChanged, filter} from 'rxjs/operators';\nimport {slugifyString} from '@common/core/utils/slugify-string';\n\nexport function bindSlugTo(control: AbstractControl) {\n    control.valueChanges\n        .pipe(filter(value => !!value), distinctUntilChanged())\n        .subscribe(value => {\n            if ( ! control.parent.get('slug').dirty) {\n                control.parent.get('slug').setValue(slugifyString(value));\n            }\n        });\n}\n","import {\n    DatatableFilter,\n    FilterControlType,\n} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/datatable-filter';\nimport {\n    CreatedAtFilter,\n    UpdatedAtFilter,\n} from '@common/datatable/datatable-filters/search-input-with-filters/filter-config/timestamp-filter';\nimport {FindUserModalComponent} from '@common/auth/find-user-modal/find-user-modal.component';\n\nexport const COMMENT_INDEX_FILTERS: DatatableFilter[] = [\n    new DatatableFilter({\n        type: FilterControlType.Select,\n        key: 'deleted',\n        label: 'Type',\n        defaultValue: false,\n        description: 'Whether comment is active or deleted.',\n        options: [\n            {\n                key: 'Active',\n                value: false,\n            },\n            {\n                key: 'Deleted',\n                value: true,\n            },\n        ],\n    }),\n    new DatatableFilter({\n        type: FilterControlType.SelectModel,\n        key: 'user_id',\n        label: 'User',\n        description: 'User comment was created by',\n        component: FindUserModalComponent,\n    }),\n\n    new CreatedAtFilter({\n        description: 'Date comment was created',\n    }),\n    new UpdatedAtFilter({\n        description: 'Date comment was last updated',\n    }),\n];\n","<div class=\"datatable-page-header\">\n  <h1 trans>Comments</h1>\n  <div class=\"header\">\n    <datatable-filters pluralName=\"comments\" [filters]=\"filters\"></datatable-filters>\n  </div>\n</div>\n\n<div class=\"datatable responsive-table\">\n  <mat-progress-bar\n    class=\"loading-bar\"\n    mode=\"indeterminate\"\n    color=\"accent\"\n    *ngIf=\"datatable.paginator && datatable.paginator.loading$ | async\"\n  ></mat-progress-bar>\n  <table class=\"material-table\">\n    <thead>\n      <tr>\n        <th table-header-checkbox></th>\n        <th trans>Content</th>\n        <th trans>Commentable</th>\n        <th table-sort-header=\"user_id\" trans>User</th>\n        <th table-sort-header trans>Created At</th>\n        <th></th>\n      </tr>\n      <tr *ngIf=\"datatable.selectedRows$.value.length as selectedCount\">\n        <th colspan=\"6\">\n          <div\n            class=\"bulk-actions-title\"\n            [transValues]=\"{count: selectedCount, resource: 'comment(s)'}\"\n            trans\n          >\n            :count :resource selected:\n          </div>\n          <div class=\"bulk-actions\">\n            <button\n              mat-raised-button\n              color=\"warn\"\n              (click)=\"maybeDeleteComments()\"\n              *ngIf=\"currentUser.hasPermission('comments.delete')\"\n              trans\n            >\n              Delete\n            </button>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let comment of comments$ | async\">\n        <td [table-body-checkbox]=\"comment.id\"></td>\n        <td data-label=\"Content\">{{ comment.content }}</td>\n        <td>\n          <div class=\"column-with-image\">\n            <img [src]=\"comment.commentable.image\" alt=\"\">\n            <a class=\"link\" target=\"_blank\" [routerLink]=\"url.generate(comment.commentable)\">\n              <div>{{ comment.commentable.name }}</div>\n              <div class=\"secondary capitalize\">{{ comment.commentable.model_type }}</div>\n            </a>\n          </div>\n        </td>\n        <td>\n          <user-column [user]=\"comment.user\"></user-column>\n        </td>\n        <td data-label=\"Created At\">{{ comment.created_at | formattedDate }}</td>\n        <td class=\"edit-column\">\n          <button\n            mat-button\n            color=\"warn\"\n            *ngIf=\"!comment.deleted\"\n            (click)=\"maybeDeleteComments(comment)\"\n            trans\n          >\n            Delete\n          </button>\n          <button\n            mat-button\n            color=\"accent\"\n            *ngIf=\"comment.deleted\"\n            (click)=\"restoreComment(comment)\"\n            trans\n          >\n            Restore\n          </button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <no-results-message\n    svgImage=\"public-discussion.svg\"\n    *ngIf=\"datatable.paginator.noResults$ | async\"\n  >\n    <span primary-text trans>No comments have been created yet</span>\n  </no-results-message>\n  <datatable-footer></datatable-footer>\n</div>\n","import {RouterModule, Routes} from '@angular/router';\nimport {AdminComponent} from '@common/admin/admin.component';\nimport {AuthGuard} from '@common/guards/auth-guard.service';\nimport {CheckPermissionsGuard} from '@common/guards/check-permissions-guard.service';\nimport {SettingsComponent} from '@common/admin/settings/settings.component';\nimport {SettingsResolve} from '@common/admin/settings/settings-resolve.service';\nimport {NgModule} from '@angular/core';\nimport {APP_ADMIN_ROUTES, APP_SETTING_ROUTES} from '../../app/admin/app-admin-routes';\nimport {GeneralSettingsComponent} from '@common/admin/settings/general/general-settings.component';\nimport {AuthenticationSettingsComponent} from '@common/admin/settings/authentication/authentication-settings.component';\nimport {CacheSettingsComponent} from '@common/admin/settings/cache/cache-settings.component';\nimport {AnalyticsSettingsComponent} from '@common/admin/settings/analytics/analytics-settings.component';\nimport {LocalizationSettingsComponent} from '@common/admin/settings/localization/localization-settings.component';\nimport {MailSettingsComponent} from '@common/admin/settings/mail/mail-settings.component';\nimport {LoggingSettingsComponent} from '@common/admin/settings/logging/logging-settings.component';\nimport {QueueSettingsComponent} from '@common/admin/settings/queue/queue-settings.component';\nimport {BillingSettingsComponent} from '@common/admin/settings/billing/billing-settings.component';\nimport {UploadingSettingsComponent} from '@common/admin/settings/uploading/uploading-settings.component';\nimport {RecaptchaSettingsComponent} from '@common/admin/settings/recaptcha/recaptcha-settings.component';\nimport {UserIndexComponent} from '@common/admin/users/user-index.component';\nimport {RoleIndexComponent} from '@common/admin/roles/role-index.component';\nimport {LocalizationIndexComponent} from '@common/admin/localizations/localization-index.component';\nimport {FileEntryIndexComponent} from '@common/admin/file-entry-index/file-entry-index.component';\nimport {AdsPageComponent} from '@common/admin/ads-page/ads-page.component';\nimport {PlanIndexComponent} from '@common/admin/billing/plans/plan-index/plan-index.component';\nimport {BillingEnabledGuard} from '@common/shared/billing/guards/billing-enabled-guard.service';\nimport {SubscriptionIndexComponent} from '@common/admin/billing/subscriptions/subscription-index/subscription-index.component';\nimport {GdprSettingsComponent} from '@common/admin/settings/gdpr-settings/gdpr-settings.component';\nimport {TagIndexComponent} from '@common/admin/tag-index/tag-index.component';\nimport {CustomPagesIndexComponent} from '../pages/custom-pages-index/custom-pages-index.component';\nimport {CrupdateCustomPageComponent} from '../pages/custom-pages-index/crupdate-custom-page/crupdate-custom-page.component';\nimport {SearchSettingsComponent} from '@common/admin/settings/search/search-settings.component';\nimport {CommentIndexComponent} from '@common/admin/comments/comment-index.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: AdminComponent,\n        canActivate: [AuthGuard, CheckPermissionsGuard],\n        canActivateChild: [AuthGuard, CheckPermissionsGuard],\n        data: {permissions: ['admin.access'], adminRoot: true},\n        children: [\n            // ANALYTICS\n            {\n                path: '',\n                redirectTo: 'analytics',\n                pathMatch: 'full',\n            },\n            {\n                path: 'analytics',\n                loadChildren: () => import('src/app/admin/analytics/analytics.module').then(m => m.AnalyticsModule),\n                canActivate: [AuthGuard],\n                canActivateChild: [AuthGuard],\n                data: {permissions: ['reports.view']}\n            },\n\n            // BASE ADMIN ROUTES\n            {\n                path: 'users',\n                component: UserIndexComponent,\n                data: {permissions: ['users.view']}\n            },\n            {\n                path: 'roles',\n                component: RoleIndexComponent,\n                data: {permissions: ['roles.view']}\n            },\n            {\n                path: 'translations',\n                component: LocalizationIndexComponent,\n                data: {permissions: ['localizations.view']}\n            },\n            {\n                path: 'tags',\n                component: TagIndexComponent,\n                data: {permissions: ['tags.view']}\n            },\n            {\n                path: 'files',\n                component: FileEntryIndexComponent,\n                data: {permissions: ['files.view']}\n            },\n            {\n                path: 'comments',\n                component: CommentIndexComponent,\n                data: {permissions: ['comments.view']}\n            },\n            {\n                path: 'ads',\n                component: AdsPageComponent,\n                data: {permissions: ['ads.update']}\n            },\n\n            // CUSTOM PAGES\n            {\n                path: 'custom-pages',\n                component: CustomPagesIndexComponent,\n                data: {permissions: ['custom_pages.view'], name: 'Custom Pages'}\n            },\n            {\n                path: 'custom-pages/new',\n                component: CrupdateCustomPageComponent,\n                data: {permissions: ['custom_pages.create'], name: 'Add New Page'}\n            },\n            {\n                path: 'custom-pages/:id/edit',\n                component: CrupdateCustomPageComponent,\n                data: {permissions: ['custom_pages.update'], name: 'Edit Page'}\n            },\n\n            // BILLING\n            {\n                path: 'plans',\n                component: PlanIndexComponent,\n                canActivate: [BillingEnabledGuard],\n                data: {permissions: ['plans.view']}\n            },\n\n            {\n                path: 'subscriptions',\n                component: SubscriptionIndexComponent,\n                canActivate: [BillingEnabledGuard],\n                data: {permissions: ['subscriptions.view']}\n            },\n\n            // BASE ADMIN ROUTES SPECIFIC TO APP\n            ...APP_ADMIN_ROUTES,\n\n            // SETTINGS\n            {\n                path: 'settings',\n                component: SettingsComponent,\n                resolve: {settings: SettingsResolve},\n                data: {permissions: ['settings.view']},\n                children: [\n                    // TODO: implement guard for unsaved changes after this is fixed:\n                    // TODO: https://github.com/angular/angular/issues/11836\n                    {path: '', redirectTo: 'general', pathMatch: 'full'},\n                    {path: 'general', component: GeneralSettingsComponent, pathMatch: 'full'},\n                    {path: 'authentication', component: AuthenticationSettingsComponent},\n                    {path: 'cache', component: CacheSettingsComponent},\n                    {path: 'analytics', component: AnalyticsSettingsComponent},\n                    {path: 'localization', component: LocalizationSettingsComponent},\n                    {path: 'mail', component: MailSettingsComponent},\n                    {path: 'logging', component: LoggingSettingsComponent},\n                    {path: 'queue', component: QueueSettingsComponent},\n                    {path: 'billing', component: BillingSettingsComponent},\n                    {path: 'uploading', component: UploadingSettingsComponent},\n                    {path: 'recaptcha', component: RecaptchaSettingsComponent},\n                    {path: 'gdpr', component: GdprSettingsComponent},\n                    {path: 'search', component: SearchSettingsComponent},\n\n                    // SETTING ROUTES SPECIFIC TO APP\n                    ...APP_SETTING_ROUTES,\n                ],\n            },\n\n        ]\n    },\n\n    // APPEARANCE\n    {\n        path: 'appearance',\n        loadChildren: () => import('src/app/admin/appearance/app-appearance.module').then(m => m.AppAppearanceModule),\n        canActivate: [AuthGuard],\n        canActivateChild: [AuthGuard],\n        data: {permissions: ['appearance.update']}\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class BaseAdminRoutingModule {\n}\n","import {ChangeDetectionStrategy, Component, OnDestroy, OnInit} from '@angular/core';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {Settings} from '@common/core/config/settings.service';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {HttpErrors} from '@common/core/http/errors/http-errors.enum';\nimport {Role} from '@common/core/types/models/Role';\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\nimport {Observable} from 'rxjs';\nimport {CommentsService} from '@common/shared/comments/comments.service';\nimport {DatatableService} from '@common/datatable/datatable.service';\nimport {Comment} from '@common/shared/comments/comment';\nimport {COMMENT_INDEX_FILTERS} from './comment-index-filters';\nimport {UrlGeneratorService} from '@common/core/services/url-generator.service';\n\n@Component({\n    selector: 'user-index',\n    templateUrl: './comment-index.component.html',\n    styleUrls: ['./comment-index.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [DatatableService],\n})\nexport class CommentIndexComponent implements OnInit, OnDestroy {\n    comments$ = this.datatable.data$ as Observable<Comment[]>;\n    filters = COMMENT_INDEX_FILTERS;\n\n    constructor(\n        private comments: CommentsService,\n        public currentUser: CurrentUser,\n        public settings: Settings,\n        private toast: Toast,\n        public datatable: DatatableService<Comment>,\n        public url: UrlGeneratorService,\n    ) {}\n\n    ngOnInit() {\n        this.datatable.init({\n            uri: CommentsService.BASE_URI,\n            staticParams: {\n                with: ['commentable'],\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.datatable.destroy();\n    }\n\n    public makeRolesList(roles: Role[]): string {\n        return roles.slice(0, 3).map(role => role.name).join(', ');\n    }\n\n    public maybeDeleteComments(comment?: Comment) {\n        this.datatable.confirmResourceDeletion('comments')\n            .subscribe(() => {\n                const ids = comment ? [comment.id] : this.datatable.selectedRows$.value;\n                this.comments.delete(ids).subscribe(() => {\n                    this.datatable.reset();\n                    this.toast.open('Comments deleted');\n                }, (errResponse: BackendErrorResponse) => {\n                    this.toast.open(errResponse.message || HttpErrors.Default);\n                });\n            });\n    }\n\n    public restoreComment(comment: Comment) {\n        this.comments.restore([comment.id]).subscribe(() => {\n            this.datatable.reset();\n            this.toast.open('Comment restored');\n        });\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FindUserModalComponent} from './find-user-modal.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\nimport {MatIconModule} from '@angular/material/icon';\nimport {LoadingIndicatorModule} from '@common/core/ui/loading-indicator/loading-indicator.module';\nimport {ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n    declarations: [\n        FindUserModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        TranslationsModule,\n        LoadingIndicatorModule,\n\n        // material\n        MatIconModule,\n        MatDialogModule,\n    ]\n})\nexport class FindUserModalModule {\n}\n","import {NgModule} from '@angular/core';\nimport {ConfirmModalComponent} from './confirm-modal.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatIconModule} from '@angular/material/icon';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n    imports: [\n        CommonModule,\n\n        // material\n        MatDialogModule,\n        MatButtonModule,\n        MatIconModule,\n    ],\n    declarations: [\n        ConfirmModalComponent\n    ],\n    exports: [\n        ConfirmModalComponent,\n        MatIconModule,\n    ],\n})\nexport class ConfirmModalModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SlugControlComponent} from './slug-control.component';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\n\n\n@NgModule({\n    declarations: [SlugControlComponent],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        MatButtonModule,\n        TranslationsModule,\n        MatIconModule,\n    ],\n    exports: [\n        SlugControlComponent,\n    ]\n})\nexport class SlugControlModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RoleManagerComponent} from './role-manager.component';\nimport {TranslationsModule} from '../../../core/translations/translations.module';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatChipsModule} from '@angular/material/chips';\n\n\n@NgModule({\n    declarations: [\n        RoleManagerComponent,\n    ],\n    imports: [\n        CommonModule,\n        TranslationsModule,\n\n        // material\n        MatButtonModule,\n        MatIconModule,\n        MatChipsModule,\n    ],\n    exports: [\n        RoleManagerComponent,\n    ]\n})\nexport class RoleManagerModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CustomPagesIndexComponent} from './custom-pages-index.component';\nimport {CrupdateCustomPageComponent} from './crupdate-custom-page/crupdate-custom-page.component';\nimport {DatatableModule} from '../../datatable/datatable.module';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {TranslationsModule} from '../../core/translations/translations.module';\nimport {RouterModule} from '@angular/router';\nimport {FormatPipesModule} from '../../core/ui/format-pipes/format-pipes.module';\nimport {NoResultsMessageModule} from '../../core/ui/no-results-message/no-results-message.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SlugControlModule} from '../../shared/form-controls/slug-control/slug-control.module';\nimport {TextEditorModule} from '../../text-editor/text-editor.module';\nimport {LoadingIndicatorModule} from '../../core/ui/loading-indicator/loading-indicator.module';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\n@NgModule({\n    declarations: [CustomPagesIndexComponent, CrupdateCustomPageComponent],\n    imports: [\n        CommonModule,\n        RouterModule,\n        DatatableModule,\n        TranslationsModule,\n        FormatPipesModule,\n        NoResultsMessageModule,\n        TextEditorModule,\n        LoadingIndicatorModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n        SlugControlModule,\n\n        // material\n        MatIconModule,\n        MatButtonModule,\n        MatTooltipModule,\n        MatSlideToggleModule,\n        MatProgressBarModule,\n    ],\n    exports: [CustomPagesIndexComponent, CrupdateCustomPageComponent],\n})\nexport class CustomPageIndexModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BetweenInputComponent} from './between-input/between-input.component';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\nimport {ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n    declarations: [BetweenInputComponent],\n    imports: [\n        CommonModule,\n        TranslationsModule,\n        ReactiveFormsModule,\n    ],\n    exports: [BetweenInputComponent]\n})\nexport class BetweenDateInputModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SelectUserInputComponent} from './select-user-input/select-user-input.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {LoadingIndicatorModule} from '@common/core/ui/loading-indicator/loading-indicator.module';\n\n@NgModule({\n    declarations: [SelectUserInputComponent],\n    imports: [\n        CommonModule,\n        MatButtonModule,\n        MatMenuModule,\n        TranslationsModule,\n        ReactiveFormsModule,\n        MatIconModule,\n        LoadingIndicatorModule,\n    ],\n    exports: [\n        SelectUserInputComponent\n    ],\n})\nexport class SelectUserInputModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {GlobalSearchComponent} from '@common/admin/global-search/global-search.component';\nimport { TranslationsModule } from '@common/core/translations/translations.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n    declarations: [GlobalSearchComponent],\n    imports: [CommonModule, TranslationsModule, FormsModule, ReactiveFormsModule],\n    exports: [CommonModule, GlobalSearchComponent],\n})\nexport class GlobalSearchModule {}\n","import {NgModule} from '@angular/core';\nimport {CrupdateRoleModalComponent} from './roles/crupdate-role-modal/crupdate-role-modal.component';\nimport {UserIndexComponent} from './users/user-index.component';\nimport {AdminComponent} from './admin.component';\nimport {CrupdateUserModalComponent} from './users/crupdate-user-modal/crupdate-user-modal.component';\nimport {RoleIndexComponent} from './roles/role-index.component';\nimport {SelectRolesModalComponent} from './users/select-roles-modal/select-roles-modal.component';\nimport {AdsPageComponent} from './ads-page/ads-page.component';\nimport {SettingsModule} from './settings/settings.module';\nimport {RouterModule} from '@angular/router';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {TextEditorModule} from '../text-editor/text-editor.module';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {\n    MatNativeDateModule,\n    MatPseudoCheckboxModule,\n    MatRippleModule,\n} from '@angular/material/core';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {SelectPermissionsModalComponent} from './permissions/select-permissions-modal/select-permissions-modal.component';\nimport {PermissionManagerComponent} from './permissions/permission-manager/permission-manager.component';\nimport {CrupdatePlanModalComponent} from './billing/plans/crupdate-plan-modal/crupdate-plan-modal.component';\nimport {CrupdateSubscriptionModalComponent} from './billing/subscriptions/crupdate-subscription-modal/crupdate-subscription-modal.component';\nimport {SubscriptionIndexComponent} from './billing/subscriptions/subscription-index/subscription-index.component';\nimport {PlanIndexComponent} from './billing/plans/plan-index/plan-index.component';\nimport {SpaceInputModule} from '../core/ui/space-input/space-input.module';\nimport {COMMON_ADMIN_CONFIG} from './common-admin-config';\nimport {Settings} from '../core/config/settings.service';\nimport {FullPlanNameModule} from '../shared/billing/full-plan-name/full-plan-name.module';\nimport {FileEntryIndexComponent} from './file-entry-index/file-entry-index.component';\nimport {ImageZoomModule} from '@common/core/ui/image-zoom/image-zoom.module';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {LocalizationIndexComponent} from '@common/admin/localizations/localization-index.component';\nimport {NewLineModalComponent} from '@common/admin/localizations/new-line-modal/new-line-modal.component';\nimport {CrupdateLocalizationModalComponent} from '@common/admin/localizations/crupdate-localization-modal/crupdate-localization-modal.component';\nimport {BaseAdminRoutingModule} from '@common/admin/base-admin-routing.module';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {FindUserModalModule} from '@common/auth/find-user-modal/find-user-modal.module';\nimport {MaterialNavbarModule} from '@common/core/ui/material-navbar/material-navbar.module';\nimport {CustomMenuModule} from '@common/core/ui/custom-menu/custom-menu.module';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\nimport {MatIconModule} from '@angular/material/icon';\nimport {FormatPipesModule} from '@common/core/ui/format-pipes/format-pipes.module';\nimport {NoResultsMessageModule} from '@common/core/ui/no-results-message/no-results-message.module';\nimport {LoadingIndicatorModule} from '@common/core/ui/loading-indicator/loading-indicator.module';\nimport {UploadImageControlModule} from '@common/shared/form-controls/upload-image-control/upload-image-control.module';\nimport {ConfirmModalModule} from '@common/core/ui/confirm-modal/confirm-modal.module';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {TagIndexComponent} from '@common/admin/tag-index/tag-index.component';\nimport {CrupdateTagModalComponent} from '@common/admin/tag-index/crupdate-tag-modal/crupdate-tag-modal.component';\nimport {SlugControlModule} from '../shared/form-controls/slug-control/slug-control.module';\nimport {RoleManagerModule} from './users/role-manager/role-manager.module';\nimport {CustomPageIndexModule} from '../pages/custom-pages-index/custom-page-index.module';\nimport {SubscriptionIndexFiltersComponent} from './billing/subscriptions/subscription-index/subscription-index-filters/subscription-index-filters.component';\nimport {BetweenDateInputModule} from '../core/ui/between-date-input/between-date-input.module';\nimport {SelectUserInputModule} from '../core/ui/select-user-input/select-user-input.module';\nimport {SkeletonModule} from '../core/ui/skeleton/skeleton.module';\nimport {DatatableModule} from '../datatable/datatable.module';\nimport {GlobalSearchModule} from '@common/admin/global-search/global-search.module';\nimport {SidenavModule} from '@common/shared/sidenav/sidenav.module';\nimport {CsvExportInfoDialogModule} from '@common/csv/csv-info-dialog/csv-export-info-dialog.module';\nimport {CommentIndexComponent} from '@common/admin/comments/comment-index.component';\n\n@NgModule({\n    imports: [\n        RouterModule,\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        TextEditorModule,\n        SettingsModule,\n        MaterialNavbarModule,\n        CustomMenuModule,\n        FullPlanNameModule,\n        SpaceInputModule,\n        DatatableModule,\n        FormatPipesModule,\n        TranslationsModule,\n        NoResultsMessageModule,\n        LoadingIndicatorModule,\n        UploadImageControlModule,\n        ConfirmModalModule,\n        SlugControlModule,\n        RoleManagerModule,\n        BaseAdminRoutingModule,\n        CustomPageIndexModule,\n        GlobalSearchModule,\n        SidenavModule,\n        CsvExportInfoDialogModule,\n\n        // material\n        MatButtonModule,\n        MatIconModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatMenuModule,\n        MatSlideToggleModule,\n        MatChipsModule,\n        MatAutocompleteModule,\n        DragDropModule,\n        MatProgressBarModule,\n\n        // for permission/role modal only\n        MatExpansionModule,\n        MatPseudoCheckboxModule,\n\n        // for subscription modal and list only\n        MatDatepickerModule,\n        MatNativeDateModule,\n        BetweenDateInputModule,\n        SelectUserInputModule,\n\n        // for ads page only\n        ImageZoomModule,\n        MatRippleModule,\n\n        // for role index component\n        FindUserModalModule,\n        SkeletonModule,\n    ],\n    declarations: [\n        AdminComponent,\n        RoleIndexComponent,\n        CrupdateRoleModalComponent,\n        UserIndexComponent,\n        CrupdateUserModalComponent,\n        LocalizationIndexComponent,\n        CrupdateLocalizationModalComponent,\n        NewLineModalComponent,\n        SelectRolesModalComponent,\n        SelectPermissionsModalComponent,\n        PermissionManagerComponent,\n        AdsPageComponent,\n        FileEntryIndexComponent,\n        TagIndexComponent,\n        CrupdateTagModalComponent,\n        CommentIndexComponent,\n\n        // billing\n        PlanIndexComponent,\n        SubscriptionIndexComponent,\n        SubscriptionIndexFiltersComponent,\n        CrupdatePlanModalComponent,\n        CrupdateSubscriptionModalComponent,\n    ],\n    exports: [\n        RouterModule,\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        TextEditorModule,\n        SettingsModule,\n        PermissionManagerComponent,\n        SelectPermissionsModalComponent,\n        TranslationsModule,\n        FormatPipesModule,\n        ConfirmModalModule,\n        DatatableModule,\n\n        // material\n        MatButtonModule,\n        MatIconModule,\n        MatSnackBarModule,\n        MatCheckboxModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatMenuModule,\n        MatSlideToggleModule,\n        MatChipsModule,\n    ],\n    providers: [Modal],\n})\nexport class BaseAdminModule {\n    constructor(private settings: Settings) {\n        this.settings.merge({vebto: COMMON_ADMIN_CONFIG});\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {ArtistIndexComponent} from './artists/artist-index.component';\nimport {CrupdateLyricModalComponent} from './lyrics-page/crupdate-lyric-modal/crupdate-lyric-modal.component';\nimport {AlbumIndexComponent} from './albums/album-index/album-index.component';\nimport {LyricsPageComponent} from './lyrics-page/lyrics-page.component';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {PlaylistsPageComponent} from './playlists-page/playlists-page.component';\nimport {ProvidersSettingsComponent} from './settings/providers/providers-settings.component';\nimport {PlayerSettingsComponent} from './settings/player/player-settings.component';\nimport {BlockedArtistsSettingsComponent} from './settings/blocked-artists/blocked-artists-settings.component';\nimport {GenresComponent} from './genres/genres.component';\nimport {CrupdateGenreModalComponent} from './genres/crupdate-genre-modal/crupdate-genre-modal.component';\nimport {BaseAdminModule} from '@common/admin/base-admin.module';\nimport {UploadsModule} from '@common/uploads/uploads.module';\nimport {MediaImageModule} from '../web-player/shared/media-image/media-image.module';\nimport {TrackIndexComponent} from './tracks/track-index/track-index.component';\nimport {ChannelIndexComponent} from './channels/channel-index/channel-index.component';\nimport {CrupdateChannelPageComponent} from './channels/crupdate-channel-page/crupdate-channel-page.component';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {SlugControlModule} from '@common/shared/form-controls/slug-control/slug-control.module';\nimport {InterfaceComponent} from './settings/interface/interface.component';\nimport {UploadImageControlModule} from '@common/shared/form-controls/upload-image-control/upload-image-control.module';\nimport {NoResultsMessageModule} from '@common/core/ui/no-results-message/no-results-message.module';\nimport {LoadingIndicatorModule} from '@common/core/ui/loading-indicator/loading-indicator.module';\nimport {InfoPopoverModule} from '@common/core/ui/info-popover/info-popover.module';\nimport {MatPseudoCheckboxModule, MatRippleModule} from '@angular/material/core';\nimport {BackstageRequestsIndexComponent} from './backstage-requests-index/backstage-requests-index.component';\nimport {BackstageRequestViewerComponent} from './backstage-requests-index/backstage-request-viewer/backstage-request-viewer.component';\nimport {SkeletonModule} from '@common/core/ui/skeleton/skeleton.module';\nimport {ConfirmRequestHandledModalComponent} from './backstage-requests-index/backstage-request-viewer/confirm-request-handled-modal/confirm-request-handled-modal.component';\nimport {BetweenDateInputModule} from '@common/core/ui/between-date-input/between-date-input.module';\nimport {SelectUserInputModule} from '@common/core/ui/select-user-input/select-user-input.module';\nimport {BackstageRequestsFiltersComponent} from './backstage-requests-index/backstage-requests-filters/backstage-requests-filters.component';\nimport {CommentIndexComponent} from './comments/comment-index.component';\nimport {ImportMediaModalComponent} from './import-media-modal/import-media-modal.component';\nimport { FormattedChannelConfigPipe } from './channels/channel-index/formatted-channel-config.pipe';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        BaseAdminModule,\n        UploadsModule,\n        NoResultsMessageModule,\n        LoadingIndicatorModule,\n        InfoPopoverModule,\n        SkeletonModule,\n        SlugControlModule,\n        UploadImageControlModule,\n        BetweenDateInputModule,\n        SelectUserInputModule,\n        MediaImageModule,\n\n        // material\n        MatChipsModule,\n        MatAutocompleteModule,\n        MatProgressBarModule,\n        DragDropModule,\n        MatTabsModule,\n        MatPseudoCheckboxModule,\n        MatRippleModule,\n    ],\n    declarations: [\n        ArtistIndexComponent,\n        CrupdateLyricModalComponent,\n        TrackIndexComponent,\n        AlbumIndexComponent,\n        LyricsPageComponent,\n        PlaylistsPageComponent,\n        ChannelIndexComponent,\n        CommentIndexComponent,\n        BackstageRequestsIndexComponent,\n        BackstageRequestsFiltersComponent,\n        BackstageRequestViewerComponent,\n        ConfirmRequestHandledModalComponent,\n        ImportMediaModalComponent,\n        GenresComponent,\n        CrupdateGenreModalComponent,\n        CrupdateChannelPageComponent,\n\n        // settings\n        ProvidersSettingsComponent,\n        PlayerSettingsComponent,\n        BlockedArtistsSettingsComponent,\n        InterfaceComponent,\n        FormattedChannelConfigPipe,\n    ]\n})\nexport class AppAdminModule {\n}\n","import {Injectable} from '@angular/core';\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\nimport {BackendResponse} from '@common/core/types/backend-response';\nimport {BackstageRequest} from '../../models/backstage-request';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BackstagRequestService {\n\n    constructor(private http: AppHttpClient) {\n    }\n\n    public getRequest(requestId: number): BackendResponse<{request: BackstageRequest}> {\n        return this.http.get(`backstage-request/${requestId}`);\n    }\n\n    public submitRequest(params: object): BackendResponse<{request: {id: number}}> {\n        return this.http.post('backstage-request', params);\n    }\n\n    public approveRequest(requestId: number, params: {markArtistAsVerified?: boolean, notes?: string} = {}) {\n        return this.http.post(`backstage-request/${requestId}/approve`, params);\n    }\n\n    public denyRequest(requestId: number, params: {notes?: string} = {}) {\n        return this.http.post(`backstage-request/${requestId}/deny`, params);\n    }\n\n    public deleteRequests(requestIds: number[]): BackendResponse<void> {\n        return this.http.delete(`backstage-request/${requestIds.join(',')}`);\n    }\n}\n","export enum BackstageRequestType {\n    becomeArtist = 'become-artist',\n    verifyArtist = 'verify-artist',\n    claimArtist = 'claim-artist',\n}\n","<mat-chip-list #chipList [selectable]=\"false\">\n    <mat-chip\n        *ngFor=\"let item of items$ | async; index as i\"\n        [selectable]=\"false\"\n        [removable]=\"!selectMode\"\n        (removed)=\"remove(i)\"\n    >\n        {{displayChipValue(item)}}\n        <mat-icon matChipRemove svgIcon=\"cancel\"></mat-icon>\n    </mat-chip>\n    <input [placeholder]=\"placeholder | trans\"\n           *ngIf=\"!selectMode\"\n           #inputEl\n           [type]=\"type\"\n           class=\"mat-chip-input mat-input-element\"\n           [matChipInputFor]=\"chipList\"\n           [matChipInputAddOnBlur]=\"true\"\n           [matAutocomplete]=\"auto\"\n           [matAutocompleteConnectedTo]=\"{elementRef: el}\"\n           [formControl]=\"formControl\"\n           (matChipInputTokenEnd)=\"addFromChipInput($event.value)\" />\n</mat-chip-list>\n\n<mat-autocomplete class=\"chip-input-autocomplete-panel\" #auto=\"matAutocomplete\" (optionSelected)=\"addFromAutocomplete($event.option.value)\" [autoActiveFirstOption]=\"true\">\n    <mat-option *ngFor=\"let value of suggestedValues$ | async\" [value]=\"value\">{{displayChipValue(value)}}</mat-option>\n</mat-autocomplete>\n\n<ng-template #selectModeTemplate let-suggestions=\"suggestions\">\n    <mat-option *ngFor=\"let value of suggestions\" [value]=\"value\">{{displayChipValue(value)}}</mat-option>\n</ng-template>\n","import {\n    AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, HostBinding, Input, OnInit, TemplateRef, ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {BehaviorSubject, Observable, of} from 'rxjs';\nimport {MatAutocomplete} from '@angular/material/autocomplete';\nimport {catchError, debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\nimport {Model} from '../../../types/models/model';\n\ntype ChipValue = 'string' | Model;\n\n@Component({\n    selector: 'chip-input',\n    templateUrl: './chip-input.component.html',\n    styleUrls: ['./chip-input.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: ChipInputComponent,\n        multi: true,\n    }]\n})\nexport class ChipInputComponent implements ControlValueAccessor, OnInit, AfterViewInit {\n    @Input() placeholder: string;\n    @Input() type = 'text';\n    @Input() emailsInput = false;\n    @Input() suggestFn: (query: string) => Observable<ChipValue[]>;\n    @Input() @HostBinding('class.select-mode') selectMode = false;\n    @ViewChild('auto') matAutocomplete: MatAutocomplete;\n    @ViewChild('inputEl') inputEl: ElementRef<HTMLInputElement>;\n    @ViewChild('selectModeTemplate') selectModeTemplate: TemplateRef<any>;\n\n    public formControl = new FormControl();\n\n    public propagateChange: (items: ChipValue[]) => void;\n    public items$ = new BehaviorSubject<ChipValue[]>([]);\n    public suggestedValues$ = new BehaviorSubject<ChipValue[]>([]);\n    @Input() set suggestedValues(values: ChipValue[]) {\n        this.suggestedValues$.next(values);\n    }\n\n    constructor(\n        public el: ElementRef<HTMLElement>,\n    ) {}\n\n    ngOnInit() {\n        if (this.suggestFn) {\n            this.bindToSearchControl();\n        }\n        if (this.selectMode) {\n           // TODO: implement\n        }\n    }\n\n    ngAfterViewInit() {\n        if (this.emailsInput) {\n            this.parseEmailsOnPaste();\n        }\n    }\n\n    public remove(index: number) {\n        const items = [...this.items$.value];\n        items.splice(index, 1);\n        this.items$.next(items);\n        this.propagateChange(this.items$.value);\n    }\n\n    public addFromChipInput(value: ChipValue, propagate = true) {\n        if (value && !this.matAutocomplete.isOpen && !this.selectMode) {\n            this.add(value, propagate);\n        }\n    }\n\n    public addFromAutocomplete(value: ChipValue, propagate = true) {\n        this.add(value, propagate);\n    }\n\n    private add(value: ChipValue, propagate = true) {\n        value = (typeof value === 'string' ? value.trim() : value) as ChipValue;\n        const duplicate = this.findValueIndex(value) > -1;\n        if (value && !duplicate) {\n            this.items$.next([...this.items$.value, value]);\n            if (propagate) {\n                this.propagateChange(this.items$.value);\n            }\n        }\n        if (this.inputEl) {\n            this.inputEl.nativeElement.value = '';\n        }\n        this.formControl.setValue(null);\n        this.suggestedValues$.next([]);\n    }\n\n    private findValueIndex(value: ChipValue) {\n        if (typeof value === 'string') {\n            return this.items$.value.indexOf(value);\n        } else {\n            return this.items$.value.findIndex(v => (v as Model).id === value.id);\n        }\n    }\n\n    public writeValue(value: ChipValue[] = []) {\n        this.items$.next(value || []);\n        // if (value && value.length) {\n        //     value.forEach(item => this.add(item, false));\n        // } else if (this.items$.value.length) {\n        //     while (this.items$.value.length !== 0) {\n        //         this.remove(0);\n        //     }\n        // }\n    }\n\n    public registerOnChange(fn: (items: ChipValue[]) => void) {\n        this.propagateChange = fn;\n    }\n\n    public registerOnTouched() {}\n\n    private bindToSearchControl() {\n        this.formControl.valueChanges.pipe(\n            debounceTime(150),\n            distinctUntilChanged(),\n            switchMap(query => query ? this.suggestFn(query) : of([])),\n            catchError(() => of([])),\n        ).subscribe(values => {\n            const filtered = values.filter(v => this.findValueIndex(v) === -1);\n            this.suggestedValues$.next(filtered);\n        });\n    }\n\n    public displayChipValue(value: ChipValue): string {\n        return typeof value === 'object' ? value.name : value;\n    }\n\n    private parseEmailsOnPaste() {\n        this.inputEl.nativeElement.addEventListener('paste', e => {\n            const paste = (e.clipboardData || window['clipboardData']).getData('text');\n            const emails = paste.match(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi);\n            if (emails) {\n                e.preventDefault();\n                const selection = window.getSelection();\n                if (selection.rangeCount) {\n                    selection.deleteFromDocument();\n                    emails.forEach(email => this.add(email));\n                }\n            }\n        });\n    }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {TitleCasePipe as AngularTitleCasePipe} from '@angular/common';\n\n@Pipe({\n    name: 'titleCase',\n    pure: true,\n})\nexport class TitleCasePipe extends AngularTitleCasePipe implements PipeTransform {\n    transform(value: string): string;\n    transform(value: null|undefined): null;\n    transform(value: string|null|undefined): string|null;\n    transform(value: string | null | undefined): string | null {\n        if ( ! value) {\n            return '';\n        }\n        return super.transform(value.replace('-', ' ').replace('_', ' '));\n    }\n}\n","import { ConnectedPosition } from '@angular/cdk/overlay';\n\nexport const RIGHT_POSITION: ConnectedPosition[] = [\n    {originX: 'end', originY: 'center', overlayX: 'start', overlayY: 'center', offsetX: 5},\n    {originX: 'start', originY: 'center', overlayX: 'end', overlayY: 'center', offsetX: 5},\n];\n","export function scrollInvalidInputIntoView(errors: {[key: string]: any}, prefix = '') {\n    let firstKey = Object.keys(errors)[0];\n    if (firstKey) {\n        if (prefix) {\n            firstKey = `${prefix}-${firstKey}`;\n        }\n        const node = document.getElementById(firstKey);\n        if (node) {\n            node.scrollIntoView({behavior: 'smooth', block: 'center', inline: 'center'});\n        }\n    }\n}\n","import { ConnectedPosition } from '@angular/cdk/overlay';\n\nexport const LEFT_POSITION: ConnectedPosition[] = [\n    {originX: 'start', originY: 'center', overlayX: 'end', overlayY: 'center', offsetX: 50},\n    {originX: 'end', originY: 'center', overlayX: 'start', overlayY: 'center', offsetX: 50},\n];\n","<header>\n    <mat-icon svgIcon=\"filter-list\"></mat-icon>\n    <span trans>Filters</span>\n</header>\n\n<form class=\"body\" (ngSubmit)=\"close()\">\n    <ng-container *ngTemplateOutlet=\"data.filters\"></ng-container>\n</form>\n\n<footer>\n    <button (click)=\"close()\" type=\"button\" mat-button color=\"accent\" trans>Close</button>\n</footer>\n","import {ChangeDetectionStrategy, Component, ElementRef, Inject, TemplateRef} from '@angular/core';\nimport {OVERLAY_PANEL_DATA} from '../../core/ui/overlay-panel/overlay-panel-data';\nimport {OverlayPanelRef} from '../../core/ui/overlay-panel/overlay-panel-ref';\nimport {matDialogAnimations} from '@angular/material/dialog';\n\n@Component({\n    selector: 'datatable-filters-panel',\n    templateUrl: './datatable-filters-panel.component.html',\n    styleUrls: ['./datatable-filters-panel.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[@dialogContainer]': `'enter'`\n    },\n    animations: [\n        matDialogAnimations.dialogContainer,\n    ]\n})\nexport class DatatableFiltersPanelComponent {\n\n    constructor(\n        @Inject(OVERLAY_PANEL_DATA) public data: {filters: TemplateRef<ElementRef>},\n        private overlayPanelRef: OverlayPanelRef,\n    ) {}\n\n    public close() {\n        this.overlayPanelRef.close();\n    }\n}\n","<mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"datatable.paginator && datatable.paginator.loading$ | async\"></mat-progress-bar>\n<div class=\"left-column\">\n    <div class=\"default-left-content\" *ngIf=\"!showSelectedActions || !numberOfRowsSelected\">\n        <ng-content select=\"[leftContent]\"></ng-content>\n    </div>\n    <div class=\"selected-left-content capitalize\" *ngIf=\"showSelectedActions && numberOfRowsSelected\">\n        {{ ':count :resource selected' | trans:{count: numberOfRowsSelected, resource: pluralResourceName} }}\n    </div>\n</div>\n<div class=\"right-column\">\n    <div class=\"default-right-content\" *ngIf=\"!showSelectedActions || !numberOfRowsSelected\">\n        <ng-container *ngIf=\"filterPanelTemplate\">\n            <mat-chip-list aria-label=\"Active Filters\" class=\"filter-chip-list\">\n                <mat-chip *ngFor=\"let filter of filters$ | async | keyvalue\" [removable]=\"true\" [selectable]=\"false\" (removed)=\"datatable.removeFilter(filter.key)\">\n                    {{filter.key | titleCase | trans}}: {{isModel(filter.value) ? (filter.value.name || filter.value.display_name) : filter.value}}\n                    <mat-icon matChipRemove svgIcon=\"cancel\"></mat-icon>\n                </mat-chip>\n            </mat-chip-list>\n            <button (click)=\"openFiltersPanel()\" class=\"filter-button\" [class.active]=\"filterPanelRef\" #filterButton mat-icon-button>\n                <mat-icon svgIcon=\"filter-list\"></mat-icon>\n            </button>\n        </ng-container>\n        <datatable-header-search-input placeholder=\"Search {{ pluralResourceName }}\"></datatable-header-search-input>\n    </div>\n    <div class=\"selected-right-actions\" *ngIf=\"showSelectedActions && numberOfRowsSelected\">\n        <ng-content select=\"[rightContent]\"></ng-content>\n    </div>\n</div>\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    TemplateRef,\n    ViewChild\n} from '@angular/core';\nimport {DatatableService} from '../datatable.service';\nimport {Model} from '../../core/types/models/model';\nimport {Subscription} from 'rxjs';\nimport {OverlayPanel} from '../../core/ui/overlay-panel/overlay-panel.service';\nimport {LEFT_POSITION} from '../../core/ui/overlay-panel/positions/left-position';\nimport {OverlayPanelRef} from '../../core/ui/overlay-panel/overlay-panel-ref';\nimport {DatatableFiltersPanelComponent} from '../datatable-filters-panel/datatable-filters-panel.component';\nimport {map} from 'rxjs/operators';\nimport {removeNullFromObject} from '../../core/utils/remove-null-from-object';\nimport {DatatableFilterValue} from '../types/datatable-filters';\n\n@Component({\n    selector: 'datatable-header',\n    templateUrl: './datatable-header.component.html',\n    styleUrls: ['./datatable-header.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DatatableHeaderComponent implements OnInit, OnDestroy {\n    @HostBinding('class.rows-selected') public numberOfRowsSelected: number;\n    @ContentChild('tableFilters') filterPanelTemplate: TemplateRef<ElementRef>;\n    @ViewChild('filterButton', { read: ElementRef }) filterButton: ElementRef<HTMLButtonElement>;\n    @Input() pluralResourceName: string;\n    @Input() showSelectedActions = true;\n    private subscriptions: Subscription[] = [];\n    public filterPanelRef: OverlayPanelRef<any>;\n\n    public filters$ = this.datatable.filters$\n        .pipe(map(v => {\n            const filters = removeNullFromObject(v);\n            delete filters.query;\n            return filters;\n        }));\n\n    constructor(\n        public datatable: DatatableService<Model>,\n        private cd: ChangeDetectorRef,\n        private overlayPanel: OverlayPanel,\n    ) {}\n\n    ngOnInit() {\n        // close filter panel when any filter is selected.\n        const filterSub = this.datatable.filters$.subscribe(() => {\n            this.filterPanelRef && this.filterPanelRef.close();\n        });\n        const changeSub = this.datatable.selectedRows$.subscribe(value => {\n            this.numberOfRowsSelected = value.length;\n            this.cd.markForCheck();\n        });\n        this.subscriptions = [filterSub, changeSub];\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n\n    public openFiltersPanel() {\n        if (this.filterPanelRef) {\n            this.filterPanelRef.close();\n        } else {\n            const position = LEFT_POSITION.slice();\n            position[0].offsetY = 40;\n            position[1].offsetY = 40;\n            this.filterPanelRef = this.overlayPanel.open(DatatableFiltersPanelComponent, {\n                origin: this.filterButton,\n                position,\n                mobilePosition: 'center',\n                data: {filters: this.filterPanelTemplate},\n                maxWidth: '90%',\n            });\n            this.filterButton.nativeElement.classList.add('active');\n            this.filterPanelRef.afterClosed().subscribe(() => {\n                this.filterPanelRef = null;\n                this.filterButton.nativeElement.classList.remove('active');\n            });\n        }\n    }\n\n    public isModel(value: DatatableFilterValue) {\n        return typeof value === 'object' && value.id;\n    }\n}\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {Plan} from '@common/core/types/models/Plan';\nimport {Translations} from '@common/core/translations/translations.service';\nimport {ucFirst} from '@common/core/utils/uc-first';\n\n@Component({\n    selector: 'full-plan-name',\n    template: '{{getFullPlanName()}}',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FullPlanNameComponent {\n    @Input() plan: Plan;\n\n    constructor(private i18n: Translations) {}\n\n    public getFullPlanName(): string {\n        if ( ! this.plan) return;\n        let name = this.plan.parent ? this.plan.parent.name : this.plan.name;\n        name = ucFirst(this.i18n.t(name));\n        name += ' ' + this.i18n.t('Plan');\n        if (this.plan.parent) name += ': ' + this.plan.name;\n        return name;\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {FullPlanNameComponent} from './full-plan-name.component';\n\n@NgModule({\n    declarations: [\n        FullPlanNameComponent,\n    ],\n    exports: [\n        FullPlanNameComponent,\n    ]\n})\nexport class FullPlanNameModule {}\n","import {Injectable} from '@angular/core';\nimport {CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild} from '@angular/router';\nimport {Settings} from '@common/core/config/settings.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BillingEnabledGuard implements CanActivate, CanActivateChild {\n    constructor(private settings: Settings, private router: Router) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        return this.handle();\n    }\n\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        return this.handle();\n    }\n\n    private handle() {\n        if (this.settings.get('billing.integrated') && this.settings.get('billing.enable')) {\n            return true;\n        }\n\n        this.router.navigate(['/']);\n        return false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AppHttpClient } from '../../core/http/app-http-client.service';\nimport { PaginatedBackendResponse } from '../../core/types/pagination/paginated-backend-response';\nimport { BackendResponse } from '@common/core/types/backend-response';\nimport { Plan } from '@common/core/types/models/Plan';\nimport { PaginationParams } from '@common/core/types/pagination/pagination-params';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class Plans {\n    static BASE_URI = 'billing-plan';\n    constructor(private http: AppHttpClient) {}\n\n    public all(params?: PaginationParams): PaginatedBackendResponse<Plan> {\n        return this.http.get(Plans.BASE_URI, params);\n    }\n\n    public get(id: number): BackendResponse<{plan: Plan}> {\n        return this.http.get(`${Plans.BASE_URI}/${id}`);\n    }\n\n    public create(params: object): BackendResponse<{plan: Plan}> {\n        return this.http.post(Plans.BASE_URI, params);\n    }\n\n    public update(id: number, params: object): BackendResponse<{plan: Plan}> {\n        return this.http.put(`${Plans.BASE_URI}/${id}`, params);\n    }\n\n    public delete(ids: number[]): BackendResponse<void> {\n        return this.http.delete(`${Plans.BASE_URI}/${ids}`);\n    }\n\n    public sync(): BackendResponse<void> {\n        return this.http.post(`${Plans.BASE_URI}/sync`);\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\nimport {BreakpointsService} from '@common/core/ui/breakpoints.service';\nimport {BehaviorSubject, Subject} from 'rxjs';\nimport {LocalStorage} from '@common/core/services/local-storage.service';\nimport {Settings} from '@common/core/config/settings.service';\nimport { filter, skip, take, takeUntil } from 'rxjs/operators';\nimport {NavigationEnd, Router} from '@angular/router';\n\n@Component({\n    selector: 'sidenav',\n    templateUrl: './sidenav.component.html',\n    styleUrls: ['./sidenav.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SidenavComponent implements OnInit, OnDestroy {\n    navIsOpen$ = new BehaviorSubject<boolean>(false);\n    isCompact$ = new BehaviorSubject<boolean>(false);\n    onDestroy$ = new Subject();\n\n    constructor(\n        public breakpoints: BreakpointsService,\n        private localStorage: LocalStorage,\n        private settings: Settings,\n        private el: ElementRef<HTMLElement>,\n        private router: Router\n    ) {}\n\n    ngOnInit() {\n        this.navIsOpen$.next(!this.breakpoints.isMobile$.value);\n\n        // set navbar width using css variables\n        this.isCompact$\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(isCompact => {\n                if (isCompact) {\n                    this.el.nativeElement.style.setProperty(\n                        '--nav-width',\n                        '80px'\n                    );\n                } else {\n                    this.el.nativeElement.style.removeProperty('--nav-width');\n                }\n            });\n\n        // only enable transitions for subsequent opens so there's no initial flash\n        this.navIsOpen$.pipe(skip(1), take(1)).subscribe(() => {\n            this.el.nativeElement.classList.add('enable-transitions');\n        });\n\n        // toggle \"nav-closed\" class on host\n        this.navIsOpen$.pipe(takeUntil(this.onDestroy$)).subscribe(isOpen => {\n            if (isOpen) {\n                this.el.nativeElement.classList.remove('nav-closed');\n            } else {\n                this.el.nativeElement.classList.add('nav-closed');\n            }\n        });\n\n        // close left column when navigating between routes pages on mobile\n        this.router.events\n            .pipe(\n                filter(e => e instanceof NavigationEnd),\n                takeUntil(this.onDestroy$)\n            )\n            .subscribe(() => {\n                this.navIsOpen$.next(!this.breakpoints.isMobile$.value);\n            });\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next();\n    }\n\n    toggleSidebarMode() {\n        if (this.breakpoints.isMobile$.value) {\n            this.navIsOpen$.next(!this.navIsOpen$.value);\n        } else {\n            this.isCompact$.next(!this.isCompact$.value);\n            this.localStorage.set(\n                this.storageSelector(),\n                this.isCompact$.value\n            );\n        }\n    }\n\n    private storageSelector() {\n        return `${this.settings.get('branding.site_name')}.sidebarCompact`;\n    }\n}\n","<ng-content></ng-content>\n<div class=\"backdrop\" [class.visible]=\"navIsOpen$ | async\" (click)=\"navIsOpen$.next(false)\"></div>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SidenavComponent} from './sidenav.component';\n\n@NgModule({\n    declarations: [SidenavComponent],\n    imports: [CommonModule],\n    exports: [SidenavComponent],\n})\nexport class SidenavModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { prettyBytes } from '../core/utils/pretty-bytes';\n\n@Pipe({\n    name: 'formattedFileSize',\n    pure: true,\n})\nexport class FormattedFileSizePipe implements PipeTransform {\n    transform(bytes: number = 0, precision?: number|string): string {\n        if (isNaN(parseFloat(String(bytes))) || ! isFinite(bytes)) return '-';\n        return prettyBytes(bytes, precision);\n    }\n}\n"]}