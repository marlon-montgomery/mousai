{"version":3,"mappings":"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","names":["p","nextId","CDK_ACCORDION","InjectionToken","CdkAccordion","constructor","this","_stateChanges","Subject","_openCloseAllActions","id","_multi","multi","coerceBooleanProperty","openAll","_openCloseAll","closeAll","ngOnChanges","changes","next","ngOnDestroy","complete","expanded","ɵfac","t","ɵdir","ɵngcc0","type","selectors","inputs","exportAs","features","provide","useExisting","nextId$1","CdkAccordionItem","accordion","_changeDetectorRef","_expansionDispatcher","_openCloseAllSubscription","Subscription","closed","EventEmitter","opened","destroyed","expandedChange","_expanded","_disabled","_removeUniqueSelectionListener","listen","accordionId","_subscribeToOpenCloseAllActions","emit","notify","markForCheck","disabled","unsubscribe","toggle","close","open","subscribe","ɵngcc1","outputs","useValue","CdkAccordionModule","ɵmod","ɵinj","_c0","rf","ctx","_c1","_c2","ctx_r0","_getExpandedState","_c3","_c4","MAT_ACCORDION","EXPANSION_PANEL_ANIMATION_TIMING","matExpansionAnimations","indicatorRotate","trigger","state","style","transform","transition","animate","bodyExpansion","height","visibility","MatExpansionPanelContent","_template","uniqueId","MAT_EXPANSION_PANEL_DEFAULT_OPTIONS","MatExpansionPanel","_uniqueSelectionDispatcher","_viewContainerRef","_document","_animationMode","defaultOptions","super","_hideToggle","afterExpand","afterCollapse","_inputChanges","_headerId","_bodyAnimationDone","pipe","distinctUntilChanged","x","y","fromState","toState","event","hideToggle","value","_togglePosition","togglePosition","_hasSpacing","displayMode","ngAfterContentInit","_lazyContent","startWith","filter","_portal","take","TemplatePortal","_containsFocus","_body","focusedElement","activeElement","bodyElement","nativeElement","contains","DOCUMENT","ANIMATION_MODULE_TYPE","ɵcmp","contentQueries","dirIndex","_t","first","viewQuery","hostAttrs","hostVars","hostBindings","ngContentSelectors","decls","vars","consts","template","$event","MatExpansionPanel_ng_template_5_Template","directives","ɵngcc2","styles","encapsulation","data","animation","changeDetection","MatExpansionPanelActionRow","MatExpansionPanelHeader","panel","_element","_focusMonitor","_parentChangeSubscription","accordionHideToggleChange","EMPTY","merge","focusVia","expandedHeight","collapsedHeight","_toggle","_isExpanded","_getPanelId","_getTogglePosition","_showToggle","_getHeaderHeight","isExpanded","_keydown","keyCode","SPACE","ENTER","hasModifierKey","preventDefault","_handleHeaderKeydown","focus","options","origin","ngAfterViewInit","monitor","_handleHeaderFocus","stopMonitoring","ɵngcc3","MatExpansionPanelHeader_span_4_Template","ɵngcc4","MatExpansionPanelTitle","MatAccordion","ɵMatAccordion_BaseFactory","arguments","_ownHeaders","QueryList","show","_headers","headers","reset","header","notifyOnChanges","_keyManager","FocusKeyManager","withWrap","withHomeAndEnd","onKeydown","updateActiveItem","MatExpansionModule","imports","CommonModule","PortalModule","n","m","e","h","l","ngOnInit","bindToSearchControl","writeValue","selectedArtist$","registerOnChange","propagateChange","registerOnTouched","setDisabledState","isDisabled$","searchFormControl","valueChanges","V","K","at","searchArtists","k","B","searchedOnce","artists$","loading$","search","suggestArtists","query","limit","listAll","b","C","o","artists","onMenuOpened","document","querySelector","width","fakeInput","getBoundingClientRect","clearSearchInput","selectArtist","setValue","onMenuClosed","u","A","lt","r","D","Y","et","ct","fb","group","artist","artist_name","currentUser","get","image","z","primaryArtist","image_small","first_name","last_name","role","company","requestType$","route","routeConfig","path","replace","M","form","disable","artistPlaceholder","requestAccess","artist_id","Object","passportScanEntryId","uploadedPassportEntry$","socialProfiles","socialProfiles$","backstage","submitRequest","router","navigate","request","replaceUrl","errors$","errors","retrieveSocialProfile","socialAuth","retrieveProfile","then","uploadPassportScan","uploadQueue","start","uri","httpParams","diskPrefix","disk","validator","imageValidator","fileEntry","removePassportUpload","removeSocialProfile","S","be","currentUserIsArtist","Oe","datatable","data$","encodedArtist","btoa","JSON","stringify","name","insideAdmin","url","includes","init","initialData","albums","maybeDeleteAlbum","modal","Pt","title","body","ok","beforeClosed","yt","albumsApi","Xt","Kt","verified","spotify_id","genres","description","country","city","profile_images","array","links","xt","media","types","Jt","Ct","results","map","j","bindToRouteData","createOrUpdate","update","create","markAsPristine","toast","urls","editArtist","cd","detectChanges","profileImagesArray","api","patchValue","profile","forEach","addProfileImage","push","removeProfileImage","removeAt","canDeactivate","dirty","N","Se","resolve","paramMap","with","albumsPerPage","forEditing","Ut","te","factory","Bt","a","initValidations","He","maxSize","getMaxFileSize","i18n","ze","validations","settings","Le","DEFAULT_MAX_SIZE_MB","Re","ie","bindSearchControl","Ve","searchInput","Ge","findMatches","value$","deselectArtist","findIndex","blur","searchControl","searchResults$","displayFn","oxw","upload","dn","subscription","progress$","en","nn","leading","trailing","progress","vn","selectedAlbum$","searchAlbums","results$","suggestAlbums","selectAlbum","ft","Yt","Be","number","tags","duration","youtube_id","spotify_popularity","album","waveData","lyrics","nt","pt","currentValue","albumForm","track","display_name","defaultImage$","canAttachMusicToAnyArtist","uploadQueueItem","uploadedResponse$","patchFormUsingFileUpload","getPayload","customData","isUploading","completed","submit","tracks","remove","saved","ne","toggleExpandedState","getExpandedState","maybeCancel","canceled","openUploadMusicModal","audioValidator","willProcessFiles","ee","gt","find","queueItemId","waveGenerator","generate","uploadedFile","finishProcessing","uploads$","metadata","comment","release_date","indexOf","shouldShowDurationField","$e","Ye","Ft","multiple","Date","toISOString","slice","allTracks$","_toConsumableArray","onlyValidUploads","uploadsAdded$","error$","reorderTracks","previousIndex","currentIndex","trackForms","some","confirmCancel","uploadFiles","autoMatchAlbum","waveform","markAsDirty","trackRemoved","re","queryParams","parse","atob","toAlbumsPage","vt","se","toTracksPage","trackForm","_context2","Promise","ce","createReader","isDirectory","le","de","call","readEntries","length","concat","file","jn","fullPath","Kn","el","addEventListener","handleDragEnter","handleDragOver","handleDragLeave","handleDrop","disableDropzoneClick","clickButton","handleClick","removeClassesFromDropzone","disableDropzone","uploadConfig","emitUploadEvent","dropzoneDisabled","classList","add","dataTransfer","dropEffect","elementFromPoint","clientX","clientY","stopPropagation","items","Array","from","kind","webkitGetAsEntry","filesDropped","toLowerCase","io","setTimeout","trackLinkInput","select","mediaLink","isTrack","mediaUrl","routerLinkToUrl","shareUsing","eo","model_type","to","createAlbum$","ho","redirectTo","pathMatch","component","uploadTracks","album_name","addSavedMedia","savedMedia$","Gn","_o","f","me","i","d","zt","Lt","F","Vt","U","Zo","ae","pe","ge","bt","It","Ot","ue","Ht","Ao","yo","bo","vo","Co","To","Et","xo","getRequest","http","post","approveRequest","Q","denyRequest","deleteRequests","join","becomeArtist","suggestedValues$","suggestFn","emailsInput","parseEmailsOnPaste","_","items$","splice","addFromChipInput","matAutocomplete","isOpen","selectMode","addFromAutocomplete","trim","T","findValueIndex","inputEl","formControl","displayChipValue","clipboardData","window","getData","match","R","getSelection","rangeCount","deleteFromDocument","rt","pure","keys","getElementById","scrollIntoView","behavior","block","inline","originX","originY","overlayX","overlayY","offsetX","v","overlayPanelRef","X","ut","J","filters$","G","st","I","filterPanelRef","selectedRows$","numberOfRowsSelected","subscriptions","openFiltersPanel","offsetY","overlayPanel","filterButton","position","mobilePosition","filters","filterPanelTemplate","maxWidth","afterClosed","isModel","isNaN","parseFloat","String","isFinite"],"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/accordion.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/expansion.js","webpack:///src/app/shared/select-artist-control/select-artist-control.component.html","webpack:///src/app/shared/select-artist-control/select-artist-control.component.ts","webpack:///src/app/backstage/requests/backstage-request-form/backstage-request-form.component.html","webpack:///src/app/backstage/requests/backstage-request-form/backstage-request-form.component.ts","webpack:///src/app/backstage/requests/backstage-request-submitted/backstage-request-submitted.component.ts","webpack:///src/app/backstage/requests/backstage-request-submitted/backstage-request-submitted.component.html","webpack:///src/app/backstage/requests/backstage-type-selector/backstage-type-selector.component.html","webpack:///src/app/backstage/requests/backstage-type-selector/backstage-type-selector.component.ts","webpack:///src/app/backstage/editing/crupdate-artist-page/artist-albums-table/artist-albums-table.component.html","webpack:///src/app/backstage/editing/crupdate-artist-page/artist-albums-table/artist-albums-table.component.ts","webpack:///src/app/backstage/editing/crupdate-artist-page/crupdate-artist-page.component.html","webpack:///src/app/backstage/editing/crupdate-artist-page/crupdate-artist-page.component.ts","webpack:///src/app/backstage/editing/crupdate-artist-page/crupdate-artist-page-resolver.service.ts","webpack:///src/app/web-player/audio-upload-validator.ts","webpack:///src/app/uploading/track-form/track-artist-control/track-artist-control.component.html","webpack:///src/app/uploading/track-form/track-artist-control/track-artist-control.component.ts","webpack:///src/app/uploading/track-upload-header/track-upload-header.component.html","webpack:///src/app/uploading/track-upload-header/track-upload-header.component.ts","webpack:///src/app/uploading/track-form/album-control/album-control.component.html","webpack:///src/app/uploading/track-form/album-control/album-control.component.ts","webpack:///src/app/uploading/track-form/track-form.component.html","webpack:///src/app/uploading/track-form/track-form.component.ts","webpack:///src/common/core/types/models/Tag.ts","webpack:///src/app/uploading/album-form/album-form.component.html","webpack:///src/app/uploading/album-form/album-form.component.ts","webpack:///src/app/backstage/editing/crupdate-album-page/crupdate-album-page.component.ts","webpack:///src/app/backstage/editing/crupdate-album-page/crupdate-album-page.component.html","webpack:///src/common/guards/pending-changes/pending-changes-guard.service.ts","webpack:///src/app/backstage/editing/crupdate-track-page/crupdate-track-page.component.ts","webpack:///src/app/backstage/editing/crupdate-track-page/crupdate-track-page.component.html","webpack:///src/common/uploads/utils/read-uploaded-folders.ts","webpack:///src/common/uploads/directives/upload-dropzone.directive.ts","webpack:///src/app/uploading/uploaded-media-preview/uploaded-media-preview.component.html","webpack:///src/app/uploading/uploaded-media-preview/uploaded-media-preview.component.ts","webpack:///src/app/uploading/upload-page/upload-page.component.html","webpack:///src/app/backstage/backstage-routing.module.ts","webpack:///src/app/uploading/upload-page/upload-page.component.ts","webpack:///src/app/backstage/editing/crupdate-album-page/crupdate-album-page-resolver.service.ts","webpack:///src/app/shared/select-artist-control/select-artist-control.module.ts","webpack:///src/app/uploading/uploading.module.ts","webpack:///src/app/backstage/backstage.module.ts","webpack:///src/app/backstage/requests/backstag-request.service.ts","webpack:///src/app/backstage/requests/backstage-request-type.ts","webpack:///src/common/core/ui/chips/chip-input/chip-input.component.html","webpack:///src/common/core/ui/chips/chip-input/chip-input.component.ts","webpack:///src/common/core/ui/format-pipes/title-case.pipe.ts","webpack:///src/common/core/utils/scroll-invalid-input-into-view.ts","webpack:///src/common/core/ui/overlay-panel/positions/left-position.ts","webpack:///src/common/datatable/datatable-filters-panel/datatable-filters-panel.component.html","webpack:///src/common/datatable/datatable-filters-panel/datatable-filters-panel.component.ts","webpack:///src/common/datatable/datatable-header/datatable-header.component.html","webpack:///src/common/datatable/datatable-header/datatable-header.component.ts","webpack:///src/common/uploads/formatted-file-size.pipe.ts"],"sourcesContent":["import { InjectionToken, Directive, Input, EventEmitter, Optional, Inject, SkipSelf, ChangeDetectorRef, Output, NgModule } from '@angular/core';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nlet nextId = 0;\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_ACCORDION = new InjectionToken('CdkAccordion');\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    constructor() {\n        /** Emits when the state of the accordion changes */\n        this._stateChanges = new Subject();\n        /** Stream that emits true/false when openAll/closeAll is triggered. */\n        this._openCloseAllActions = new Subject();\n        /** A readonly id value to use for unique selection coordination. */\n        this.id = `cdk-accordion-${nextId++}`;\n        this._multi = false;\n    }\n    /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n    get multi() { return this._multi; }\n    set multi(multi) { this._multi = coerceBooleanProperty(multi); }\n    /** Opens all enabled accordion items in an accordion where multi is enabled. */\n    openAll() {\n        this._openCloseAll(true);\n    }\n    /** Closes all enabled accordion items in an accordion where multi is enabled. */\n    closeAll() {\n        this._openCloseAll(false);\n    }\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    _openCloseAll(expanded) {\n        if (this.multi) {\n            this._openCloseAllActions.next(expanded);\n        }\n    }\n}\nCdkAccordion.ɵfac = function CdkAccordion_Factory(t) { return new (t || CdkAccordion)(); };\nCdkAccordion.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkAccordion, selectors: [[\"cdk-accordion\"], [\"\", \"cdkAccordion\", \"\"]], inputs: { multi: \"multi\" }, exportAs: [\"cdkAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_ACCORDION, useExisting: CdkAccordion }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkAccordion.propDecorators = {\n    multi: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion, [cdkAccordion]',\n                exportAs: 'cdkAccordion',\n                providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }]\n            }]\n    }], function () { return []; }, { multi: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion item. */\nlet nextId$1 = 0;\nconst ɵ0 = undefined;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /** Subscription to openAll/closeAll events. */\n        this._openCloseAllSubscription = Subscription.EMPTY;\n        /** Event emitted every time the AccordionItem is closed. */\n        this.closed = new EventEmitter();\n        /** Event emitted every time the AccordionItem is opened. */\n        this.opened = new EventEmitter();\n        /** Event emitted when the AccordionItem is destroyed. */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emits whenever the expanded state of the accordion changes.\n         * Primarily used to facilitate two-way binding.\n         * @docs-private\n         */\n        this.expandedChange = new EventEmitter();\n        /** The unique AccordionItem id. */\n        this.id = `cdk-accordion-child-${nextId$1++}`;\n        this._expanded = false;\n        this._disabled = false;\n        /** Unregister function for _expansionDispatcher. */\n        this._removeUniqueSelectionListener = () => { };\n        this._removeUniqueSelectionListener =\n            _expansionDispatcher.listen((id, accordionId) => {\n                if (this.accordion && !this.accordion.multi &&\n                    this.accordion.id === accordionId && this.id !== id) {\n                    this.expanded = false;\n                }\n            });\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /** Whether the AccordionItem is expanded. */\n    get expanded() { return this._expanded; }\n    set expanded(expanded) {\n        expanded = coerceBooleanProperty(expanded);\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the AccordionItem is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(disabled) { this._disabled = coerceBooleanProperty(disabled); }\n    /** Emits an event for the accordion item being destroyed. */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /** Toggles the expanded state of the accordion item. */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /** Sets the expanded state of the accordion item to false. */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /** Sets the expanded state of the accordion item to true. */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe(expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        });\n    }\n}\nCdkAccordionItem.ɵfac = function CdkAccordionItem_Factory(t) { return new (t || CdkAccordionItem)(ɵngcc0.ɵɵdirectiveInject(CDK_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher)); };\nCdkAccordionItem.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkAccordionItem, selectors: [[\"cdk-accordion-item\"], [\"\", \"cdkAccordionItem\", \"\"]], inputs: { expanded: \"expanded\", disabled: \"disabled\" }, outputs: { closed: \"closed\", opened: \"opened\", destroyed: \"destroyed\", expandedChange: \"expandedChange\" }, exportAs: [\"cdkAccordionItem\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n            // registering to the same accordion.\n            { provide: CDK_ACCORDION, useValue: ɵ0 },\n        ])] });\nCdkAccordionItem.ctorParameters = () => [\n    { type: CdkAccordion, decorators: [{ type: Optional }, { type: Inject, args: [CDK_ACCORDION,] }, { type: SkipSelf }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher }\n];\nCdkAccordionItem.propDecorators = {\n    closed: [{ type: Output }],\n    opened: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    expandedChange: [{ type: Output }],\n    expanded: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordionItem, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                exportAs: 'cdkAccordionItem',\n                providers: [\n                    // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n                    // registering to the same accordion.\n                    { provide: CDK_ACCORDION, useValue: ɵ0 },\n                ]\n            }]\n    }], function () { return [{ type: CdkAccordion, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_ACCORDION]\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }]; }, { closed: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], expandedChange: [{\n            type: Output\n        }], expanded: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkAccordionModule {\n}\nCdkAccordionModule.ɵfac = function CdkAccordionModule_Factory(t) { return new (t || CdkAccordionModule)(); };\nCdkAccordionModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CdkAccordionModule });\nCdkAccordionModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordionModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkAccordion, CdkAccordionItem],\n                declarations: [CdkAccordion, CdkAccordionItem]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkAccordionModule, { declarations: [CdkAccordion, CdkAccordionItem], exports: [CdkAccordion, CdkAccordionItem] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkAccordion, CdkAccordionItem, CdkAccordionModule, CDK_ACCORDION as ɵangular_material_src_cdk_accordion_accordion_a };\n\n","import { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, SkipSelf, Inject, ChangeDetectorRef, ViewContainerRef, Input, Output, ContentChild, ViewChild, Host, ElementRef, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { distinctUntilChanged, startWith, filter, take } from 'rxjs/operators';\nimport { ENTER, hasModifierKey, SPACE } from '@angular/cdk/keycodes';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\n\nconst _c0 = [\"body\"];\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) { }\nconst _c1 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nconst _c2 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\nfunction MatExpansionPanelHeader_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@indicatorRotate\", ctx_r0._getExpandedState());\n} }\nconst _c3 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nconst _c4 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time and timing curve for expansion panel animations. */\n// Note: Keep this in sync with the Sass variable for the panel header animation.\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * @docs-private\n */\nconst matExpansionAnimations = {\n    /** Animation that rotates the indicator arrow. */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /** Animation that expands and collapses the panel content. */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n        state('expanded', style({ height: '*', visibility: 'visible' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatExpansionPanelContent.ɵfac = function MatExpansionPanelContent_Factory(t) { return new (t || MatExpansionPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatExpansionPanelContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelContent, selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]] });\nMatExpansionPanelContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matExpansionPanelContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter for generating unique element ids. */\nlet uniqueId = 0;\n/**\n * Injection token that can be used to configure the defalt\n * options for the expansion panel component.\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\nconst ɵ0 = undefined;\n/**\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._animationMode = _animationMode;\n        this._hideToggle = false;\n        /** An event emitted after the body's expansion animation happens. */\n        this.afterExpand = new EventEmitter();\n        /** An event emitted after the body's collapse animation happens. */\n        this.afterCollapse = new EventEmitter();\n        /** Stream that emits for changes in `@Input` properties. */\n        this._inputChanges = new Subject();\n        /** ID for the associated header element. Used for a11y labelling. */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        /** Stream of body animation done events. */\n        this._bodyAnimationDone = new Subject();\n        this.accordion = accordion;\n        this._document = _document;\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._bodyAnimationDone.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            if (event.fromState !== 'void') {\n                if (event.toState === 'expanded') {\n                    this.afterExpand.emit();\n                }\n                else if (event.toState === 'collapsed') {\n                    this.afterCollapse.emit();\n                }\n            }\n        });\n        if (defaultOptions) {\n            this.hideToggle = defaultOptions.hideToggle;\n        }\n    }\n    /** Whether the toggle indicator should be hidden. */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    set hideToggle(value) {\n        this._hideToggle = coerceBooleanProperty(value);\n    }\n    /** The position of the expansion indicator. */\n    get togglePosition() {\n        return this._togglePosition || (this.accordion && this.accordion.togglePosition);\n    }\n    set togglePosition(value) {\n        this._togglePosition = value;\n    }\n    /** Determines whether the expansion panel should have spacing between it and its siblings. */\n    _hasSpacing() {\n        if (this.accordion) {\n            return this.expanded && this.accordion.displayMode === 'default';\n        }\n        return false;\n    }\n    /** Gets the expanded state string. */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /** Toggles the expanded state of the expansion panel. */\n    toggle() {\n        this.expanded = !this.expanded;\n    }\n    /** Sets the expanded state of the expansion panel to false. */\n    close() {\n        this.expanded = false;\n    }\n    /** Sets the expanded state of the expansion panel to true. */\n    open() {\n        this.expanded = true;\n    }\n    ngAfterContentInit() {\n        if (this._lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened.pipe(startWith(null), filter(() => this.expanded && !this._portal), take(1)).subscribe(() => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            });\n        }\n    }\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._bodyAnimationDone.complete();\n        this._inputChanges.complete();\n    }\n    /** Checks whether the expansion panel's content contains the currently-focused element. */\n    _containsFocus() {\n        if (this._body) {\n            const focusedElement = this._document.activeElement;\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n}\nMatExpansionPanel.ɵfac = function MatExpansionPanel_Factory(t) { return new (t || MatExpansionPanel)(ɵngcc0.ɵɵdirectiveInject(MAT_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8)); };\nMatExpansionPanel.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanel, selectors: [[\"mat-expansion-panel\"]], contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    } }, viewQuery: function MatExpansionPanel_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._body = _t.first);\n    } }, hostAttrs: [1, \"mat-expansion-panel\"], hostVars: 6, hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n    } }, inputs: { disabled: \"disabled\", expanded: \"expanded\", hideToggle: \"hideToggle\", togglePosition: \"togglePosition\" }, outputs: { opened: \"opened\", closed: \"closed\", expandedChange: \"expandedChange\", afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, exportAs: [\"matExpansionPanel\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n            // to the same accordion.\n            { provide: MAT_ACCORDION, useValue: ɵ0 },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c2, decls: 7, vars: 4, consts: [[\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [\"body\", \"\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]], template: function MatExpansionPanel_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) { return ctx._bodyAnimationDone.next($event); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, data: { animation: [matExpansionAnimations.bodyExpansion] }, changeDetection: 0 });\nMatExpansionPanel.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [MAT_ACCORDION,] }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanel.propDecorators = {\n    hideToggle: [{ type: Input }],\n    togglePosition: [{ type: Input }],\n    afterExpand: [{ type: Output }],\n    afterCollapse: [{ type: Output }],\n    _lazyContent: [{ type: ContentChild, args: [MatExpansionPanelContent,] }],\n    _body: [{ type: ViewChild, args: ['body',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanel, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel',\n                exportAs: 'matExpansionPanel',\n                template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled', 'expanded'],\n                outputs: ['opened', 'closed', 'expandedChange'],\n                animations: [matExpansionAnimations.bodyExpansion],\n                providers: [\n                    // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                    // to the same accordion.\n                    { provide: MAT_ACCORDION, useValue: ɵ0 },\n                ],\n                host: {\n                    'class': 'mat-expansion-panel',\n                    '[class.mat-expanded]': 'expanded',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n                },\n                styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [MAT_ACCORDION]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }]; }, { afterExpand: [{\n            type: Output\n        }], afterCollapse: [{\n            type: Output\n        }], hideToggle: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], _lazyContent: [{\n            type: ContentChild,\n            args: [MatExpansionPanelContent]\n        }], _body: [{\n            type: ViewChild,\n            args: ['body']\n        }] }); })();\n/**\n * Actions of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelActionRow {\n}\nMatExpansionPanelActionRow.ɵfac = function MatExpansionPanelActionRow_Factory(t) { return new (t || MatExpansionPanelActionRow)(); };\nMatExpansionPanelActionRow.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelActionRow, selectors: [[\"mat-action-row\"]], hostAttrs: [1, \"mat-action-row\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-action-row',\n                host: {\n                    class: 'mat-action-row'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Header element of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader {\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions, _animationMode) {\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        const accordionHideToggleChange = panel.accordion ?\n            panel.accordion._stateChanges.pipe(filter(changes => !!(changes['hideToggle'] || changes['togglePosition']))) :\n            EMPTY;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription =\n            merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => {\n                return !!(changes['hideToggle'] ||\n                    changes['disabled'] ||\n                    changes['togglePosition']);\n            })))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter(() => panel._containsFocus()))\n            .subscribe(() => _focusMonitor.focusVia(_element, 'program'));\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * @docs-private\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /** Toggles the expanded state of the panel. */\n    _toggle() {\n        if (!this.disabled) {\n            this.panel.toggle();\n        }\n    }\n    /** Gets whether the panel is expanded. */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /** Gets the expanded state string of the panel. */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /** Gets the panel id. */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /** Gets the toggle position for the header. */\n    _getTogglePosition() {\n        return this.panel.togglePosition;\n    }\n    /** Gets whether the expand indicator should be shown. */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Gets the current height of the header. Null if no custom height has been\n     * specified, and if the default height from the stylesheet should be used.\n     */\n    _getHeaderHeight() {\n        const isExpanded = this._isExpanded();\n        if (isExpanded && this.expandedHeight) {\n            return this.expandedHeight;\n        }\n        else if (!isExpanded && this.collapsedHeight) {\n            return this.collapsedHeight;\n        }\n        return null;\n    }\n    /** Handle keydown event calling to toggle() if appropriate. */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * @param origin Origin of the action that triggered the focus.\n     * @docs-private\n     */\n    focus(origin = 'program', options) {\n        this._focusMonitor.focusVia(this._element, origin, options);\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._element).subscribe(origin => {\n            if (origin && this.panel.accordion) {\n                this.panel.accordion._handleHeaderFocus(this);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n}\nMatExpansionPanelHeader.ɵfac = function MatExpansionPanelHeader_Factory(t) { return new (t || MatExpansionPanelHeader)(ɵngcc0.ɵɵdirectiveInject(MatExpansionPanel, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatExpansionPanelHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanelHeader, selectors: [[\"mat-expansion-panel-header\"]], hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\", \"mat-focus-indicator\"], hostVars: 15, hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() { return ctx._toggle(); })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.disabled ? -1 : 0)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n        ɵngcc0.ɵɵstyleProp(\"height\", ctx._getHeaderHeight());\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded())(\"mat-expansion-toggle-indicator-after\", ctx._getTogglePosition() === \"after\")(\"mat-expansion-toggle-indicator-before\", ctx._getTogglePosition() === \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\" }, ngContentSelectors: _c4, decls: 5, vars: 1, consts: [[1, \"mat-content\"], [\"class\", \"mat-expansion-indicator\", 4, \"ngIf\"], [1, \"mat-expansion-indicator\"]], template: function MatExpansionPanelHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, MatExpansionPanelHeader_span_4_Template, 1, 1, \"span\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._showToggle());\n    } }, directives: [ɵngcc4.NgIf], styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\\n\"], encapsulation: 2, data: { animation: [\n            matExpansionAnimations.indicatorRotate,\n        ] }, changeDetection: 0 });\nMatExpansionPanelHeader.ctorParameters = () => [\n    { type: MatExpansionPanel, decorators: [{ type: Host }] },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatExpansionPanelHeader.propDecorators = {\n    expandedHeight: [{ type: Input }],\n    collapsedHeight: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel-header',\n                template: \"<span class=\\\"mat-content\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"mat-expansion-indicator\\\"></span>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [\n                    matExpansionAnimations.indicatorRotate,\n                ],\n                host: {\n                    'class': 'mat-expansion-panel-header mat-focus-indicator',\n                    'role': 'button',\n                    '[attr.id]': 'panel._headerId',\n                    '[attr.tabindex]': 'disabled ? -1 : 0',\n                    '[attr.aria-controls]': '_getPanelId()',\n                    '[attr.aria-expanded]': '_isExpanded()',\n                    '[attr.aria-disabled]': 'panel.disabled',\n                    '[class.mat-expanded]': '_isExpanded()',\n                    '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n                    '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[style.height]': '_getHeaderHeight()',\n                    '(click)': '_toggle()',\n                    '(keydown)': '_keydown($event)'\n                },\n                styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\\n\"]\n            }]\n    }], function () { return [{ type: MatExpansionPanel, decorators: [{\n                type: Host\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { expandedHeight: [{\n            type: Input\n        }], collapsedHeight: [{\n            type: Input\n        }] }); })();\n/**\n * Description element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelDescription {\n}\nMatExpansionPanelDescription.ɵfac = function MatExpansionPanelDescription_Factory(t) { return new (t || MatExpansionPanelDescription)(); };\nMatExpansionPanelDescription.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelDescription, selectors: [[\"mat-panel-description\"]], hostAttrs: [1, \"mat-expansion-panel-header-description\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-description',\n                host: {\n                    class: 'mat-expansion-panel-header-description'\n                }\n            }]\n    }], null, null); })();\n/**\n * Title element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelTitle {\n}\nMatExpansionPanelTitle.ɵfac = function MatExpansionPanelTitle_Factory(t) { return new (t || MatExpansionPanelTitle)(); };\nMatExpansionPanelTitle.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelTitle, selectors: [[\"mat-panel-title\"]], hostAttrs: [1, \"mat-expansion-panel-header-title\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-title',\n                host: {\n                    class: 'mat-expansion-panel-header-title'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        /** Headers belonging to this accordion. */\n        this._ownHeaders = new QueryList();\n        this._hideToggle = false;\n        /**\n         * Display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n        /** The position of the expansion indicator. */\n        this.togglePosition = 'after';\n    }\n    /** Whether the expansion indicator should be hidden. */\n    get hideToggle() { return this._hideToggle; }\n    set hideToggle(show) { this._hideToggle = coerceBooleanProperty(show); }\n    ngAfterContentInit() {\n        this._headers.changes\n            .pipe(startWith(this._headers))\n            .subscribe((headers) => {\n            this._ownHeaders.reset(headers.filter(header => header.panel.accordion === this));\n            this._ownHeaders.notifyOnChanges();\n        });\n        this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap().withHomeAndEnd();\n    }\n    /** Handles keyboard events coming in from the panel headers. */\n    _handleHeaderKeydown(event) {\n        this._keyManager.onKeydown(event);\n    }\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n}\nMatAccordion.ɵfac = /*@__PURE__*/ function () { let ɵMatAccordion_BaseFactory; return function MatAccordion_Factory(t) { return (ɵMatAccordion_BaseFactory || (ɵMatAccordion_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatAccordion)))(t || MatAccordion); }; }();\nMatAccordion.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatAccordion, selectors: [[\"mat-accordion\"]], contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headers = _t);\n    } }, hostAttrs: [1, \"mat-accordion\"], hostVars: 2, hostBindings: function MatAccordion_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-accordion-multi\", ctx.multi);\n    } }, inputs: { multi: \"multi\", displayMode: \"displayMode\", togglePosition: \"togglePosition\", hideToggle: \"hideToggle\" }, exportAs: [\"matAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_ACCORDION,\n                useExisting: MatAccordion\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatAccordion.propDecorators = {\n    _headers: [{ type: ContentChildren, args: [MatExpansionPanelHeader, { descendants: true },] }],\n    hideToggle: [{ type: Input }],\n    displayMode: [{ type: Input }],\n    togglePosition: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-accordion',\n                exportAs: 'matAccordion',\n                inputs: ['multi'],\n                providers: [{\n                        provide: MAT_ACCORDION,\n                        useExisting: MatAccordion\n                    }],\n                host: {\n                    class: 'mat-accordion',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if multiple panel support is enabled.\n                    '[class.mat-accordion-multi]': 'this.multi'\n                }\n            }]\n    }], null, { displayMode: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], hideToggle: [{\n            type: Input\n        }], _headers: [{\n            type: ContentChildren,\n            args: [MatExpansionPanelHeader, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatExpansionModule {\n}\nMatExpansionModule.ɵfac = function MatExpansionModule_Factory(t) { return new (t || MatExpansionModule)(); };\nMatExpansionModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatExpansionModule });\nMatExpansionModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, CdkAccordionModule, PortalModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, CdkAccordionModule, PortalModule],\n                exports: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ],\n                declarations: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatExpansionModule, { declarations: function () { return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]; }, imports: function () { return [CommonModule, CdkAccordionModule, PortalModule]; }, exports: function () { return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations, ɵ0 };\n\n","<div class=\"fake-input\" #fakeInput [matMenuTriggerFor]=\"menu\" (menuOpened)=\"onMenuOpened()\" (menuClosed)=\"onMenuClosed()\" [class.disabled]=\"isDisabled$ | async\">\n        <span *ngIf=\"selectedArtist$ | async as selectedArtist; else anyArtist\">\n            <media-image class=\"result-image\" [media]=\"selectedArtist\"></media-image>\n            {{selectedArtist.name}}\n        </span>\n    <ng-template #anyArtist>\n        <span trans>Select an artist</span>\n    </ng-template>\n    <div class=\"arrow-container\">\n        <div class=\"arrow\"></div>\n    </div>\n</div>\n\n<mat-menu #menu=\"matMenu\" class=\"select-artist-control-menu\">\n    <div class=\"input-container search-input-container\" (click)=\"$event.stopPropagation()\">\n        <div class=\"search-input-wrapper\">\n            <input type=\"text\" [formControl]=\"searchFormControl\" placeholder=\"Search...\" #searchInput mat-menu-item trans-placeholder>\n            <button class=\"clear-search-input-button\" mat-icon-button (click)=\"clearSearchInput()\" *ngIf=\"searchFormControl.value\">\n                <mat-icon svgIcon=\"close\"></mat-icon>\n            </button>\n            <loading-indicator [isVisible]=\"loading$ | async\" class=\"small\"></loading-indicator>\n        </div>\n    </div>\n    <button type=\"button\" mat-menu-item *ngFor=\"let artist of artists$ | async\" (click)=\"selectArtist(artist)\">\n        <media-image class=\"result-image\" [media]=\"artist\"></media-image>\n        <div class=\"user-info\">\n            <div class=\"name\">{{artist.name}}</div>\n            <div class=\"email\" trans>Artist</div>\n        </div>\n    </button>\n    <div mat-menu-item disabled *ngIf=\"searchedOnce && !(artists$ | async).length\" trans>No artists found.</div>\n</mat-menu>\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef, Input,\n    OnInit,\n    ViewChild\n} from '@angular/core';\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {BehaviorSubject, Observable, of} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    finalize,\n    map,\n    switchMap\n} from 'rxjs/operators';\nimport {Search} from '../../web-player/search/search.service';\nimport {Artist} from '../../models/Artist';\n\n@Component({\n    selector: 'select-artist-control',\n    templateUrl: './select-artist-control.component.html',\n    styleUrls: ['./select-artist-control.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'tabindex': '0'},\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: SelectArtistControlComponent,\n        multi: true,\n    }]\n})\nexport class SelectArtistControlComponent implements OnInit, ControlValueAccessor {\n    @ViewChild('searchInput') searchInput: ElementRef<HTMLInputElement>;\n    @ViewChild('fakeInput') fakeInput: ElementRef<HTMLDivElement>;\n    @Input() listAll = false;\n    public isDisabled$ = new BehaviorSubject<boolean>(false);\n    public searchFormControl = new FormControl();\n    public loading$ = new BehaviorSubject(false);\n    public artists$ = new BehaviorSubject<Artist[]>([]);\n    public selectedArtist$ = new BehaviorSubject<Artist>(null);\n    private propagateChange: (artist: Artist) => void;\n    public searchedOnce = false;\n\n    constructor(private search: Search) {}\n\n    ngOnInit() {\n        this.bindToSearchControl();\n    }\n\n    public writeValue(value: Artist) {\n        this.selectedArtist$.next(value);\n    }\n\n    public registerOnChange(fn: (artist: Artist) => void) {\n        this.propagateChange = fn;\n    }\n\n    public registerOnTouched() {\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.isDisabled$.next(isDisabled);\n    }\n\n    private bindToSearchControl() {\n        this.searchFormControl.valueChanges.pipe(\n            debounceTime(150),\n            distinctUntilChanged(),\n            switchMap(query => this.searchArtists(query)),\n            catchError(() => of([])),\n        ).subscribe(users => {\n            this.searchedOnce = true;\n            this.artists$.next(users);\n        });\n    }\n\n    private searchArtists(query: string): Observable<Artist[]> {\n        this.loading$.next(true);\n        return this.search.suggestArtists({\n            query,\n            limit: 7,\n            listAll: this.listAll,\n        }).pipe(\n            finalize(() => this.loading$.next(false)),\n            map(response => response.artists),\n        );\n    }\n\n    public onMenuOpened() {\n        const menu = (document.querySelector('.select-artist-control-menu') as HTMLElement);\n        menu.style.width = this.fakeInput.nativeElement.getBoundingClientRect().width + 'px';\n\n        if (!this.searchedOnce) {\n            this.clearSearchInput();\n        }\n    }\n\n    public selectArtist(artist: Artist) {\n        this.selectedArtist$.next(artist);\n        this.propagateChange(artist);\n    }\n\n    public clearSearchInput() {\n        this.searchFormControl.setValue('');\n    }\n\n    public onMenuClosed() {\n        this.loading$.next(false);\n        this.clearSearchInput();\n    }\n}\n","<h1 trans>Tell us about yourself</h1>\n\n<form (ngSubmit)=\"requestAccess()\" ngNativeValidate [formGroup]=\"form\" class=\"many-inputs\" *ngIf=\"errors$ | async as errors\">\n    <ng-container *ngIf=\"requestType$ | async as requestType\">\n        <upload-image-control formControlName=\"image\" [compact]=\"true\"></upload-image-control>\n\n        <div class=\"input-container\" *ngIf=\"requestType !== 'become-artist'\">\n            <label for=\"backstage-artist\" trans>Select Artist</label>\n            <select-artist-control [listAll]=\"true\" id=\"backstage-artist\" formControlName=\"artist\"></select-artist-control>\n            <div class=\"error\" *ngIf=\"errors.artist_id\">{{errors.artist_id}}</div>\n        </div>\n\n        <div class=\"input-container\" *ngIf=\"requestType === 'become-artist'\">\n            <label for=\"backstage-name\" trans>Your artist name</label>\n            <input type=\"text\" id=\"backstage-name\" formControlName=\"artist_name\" required>\n            <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\n        </div>\n        <div class=\"inline-inputs-container many-inputs\">\n            <div class=\"input-container\">\n                <label for=\"backstage-first-name\" trans>First name</label>\n                <input type=\"text\" id=\"backstage-first-name\" formControlName=\"first_name\" required>\n                <div class=\"error\" *ngIf=\"errors.first_name\">{{errors.first_name}}</div>\n            </div>\n            <div class=\"input-container\">\n                <label for=\"backstage-last-name\" trans>Last name</label>\n                <input type=\"text\" id=\"backstage-last-name\" formControlName=\"last_name\" required>\n                <div class=\"error\" *ngIf=\"errors.last_name\">{{errors.last_name}}</div>\n            </div>\n        </div>\n        <div class=\"input-container\" *ngIf=\"requestType === 'claim-artist'\">\n            <label for=\"backstage-role\" trans>Role</label>\n            <select type=\"text\" id=\"backstage-role\" formControlName=\"role\" required>\n                <option [value]=\"null\" disabled trans>Select role</option>\n                <option value=\"artist\" trans>Artist</option>\n                <option value=\"agent\" trans>Agent</option>\n                <option value=\"composer\" trans>Composer</option>\n                <option value=\"label\" trans>Label</option>\n                <option value=\"manager\" trans>Manager</option>\n                <option value=\"musician\" trans>Musician</option>\n                <option value=\"producer\" trans>Producer</option>\n                <option value=\"publisher\" trans>Publisher</option>\n                <option value=\"songwriter\" trans>Songwriter</option>\n            </select>\n            <div class=\"error\" *ngIf=\"errors.role\">{{errors.role}}</div>\n        </div>\n        <div class=\"input-container\">\n            <label for=\"backstage-company\" trans>Company (optional)</label>\n            <input type=\"text\" id=\"backstage-company\" formControlName=\"company\">\n            <div class=\"error\" *ngIf=\"errors.company\">{{errors.company}}</div>\n        </div>\n\n        <div class=\"speed-up-container\">\n            <div class=\"speed-up-title\" trans>Speed up the process by connecting artist social media accounts or uploading your passport scan.</div>\n            <div class=\"speed-up-buttons\">\n                <button type=\"button\" class=\"twitter-btn speed-up-button\" mat-flat-button color=\"accent\" (click)=\"retrieveSocialProfile('twitter')\">\n                    <mat-icon class=\"social-icon\" svgIcon=\"twitter\"></mat-icon>\n                    <span trans>Connect to Twitter</span>\n                </button>\n                <button type=\"button\" mat-flat-button class=\"facebook-btn speed-up-button\" color=\"accent\" (click)=\"retrieveSocialProfile('facebook')\">\n                    <mat-icon class=\"social-icon\" svgIcon=\"facebook\"></mat-icon>\n                    <span trans>Connect to Facebook</span>\n                </button>\n                <button type=\"button\" mat-flat-button color=\"accent\" class=\"passport-btn speed-up-button\" [uploadButton]=\"{types: ['image/*']}\" (filesSelected)=\"uploadPassportScan($event)\">\n                    <mat-icon class=\"social-icon\" svgIcon=\"document-scanner\"></mat-icon>\n                    <span trans>Upload Passport Scan</span>\n                </button>\n            </div>\n            <div class=\"attached-verifications\">\n                <div class=\"facebook-profile verification\" *ngFor=\"let profile of socialProfiles$ | async | keyvalue\">\n                    <img class=\"verification-img\" [src]=\"profile.value.avatar\" alt=\"\">\n                    <div class=\"verification-details\">\n                        <div class=\"verification-name\" trans>{{profile.key}} Profile</div>\n                        <a [href]=\"profile.value.profileUrl\" target=\"_blank\" class=\"verification-url\">{{profile.value.profileUrl}}</a>\n                    </div>\n                    <button class=\"remove-verification\" type=\"button\" mat-icon-button (click)=\"removeSocialProfile(profile.key)\">\n                        <mat-icon svgIcon=\"close\"></mat-icon>\n                    </button>\n                </div>\n                <div class=\"passport-attachment verification\" *ngIf=\"uploadedPassportEntry$ | async as entry\">\n                    <mat-icon class=\"verification-img\" svgIcon=\"document-scanner\"></mat-icon>\n                    <div class=\"verification-details\">\n                        <div class=\"verification-name\" trans>Passport Scan</div>\n                        <div>{{entry.name}} ({{entry.file_size | formattedFileSize}})</div>\n                    </div>\n                    <button class=\"remove-verification\" type=\"button\" mat-icon-button (click)=\"removePassportUpload()\">\n                        <mat-icon svgIcon=\"close\"></mat-icon>\n                    </button>\n                </div>\n                <upload-progress-bar></upload-progress-bar>\n            </div>\n        </div>\n\n        <div class=\"backstage-action-buttons\">\n            <a class=\"backstage-action-button\" type=\"button\" routerLink=\"/backstage/requests\" mat-raised-button trans>Go Back</a>\n            <button class=\"backstage-action-button\" type=\"submit\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\" trans>Submit Request</button>\n        </div>\n    </ng-container>\n</form>\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {BackstagRequestService} from '../backstag-request.service';\nimport {FormBuilder} from '@angular/forms';\nimport {Settings} from '@common/core/config/settings.service';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {SocialAuthService} from '@common/auth/social-auth.service';\nimport {UploadedFile} from '@common/uploads/uploaded-file';\nimport {BehaviorSubject} from 'rxjs';\nimport {UploadQueueService} from '@common/uploads/upload-queue/upload-queue.service';\nimport {UploadApiConfig} from '@common/uploads/types/upload-api-config';\nimport {ImageUploadValidator} from '../../../web-player/image-upload-validator';\nimport {FileEntry} from '@common/uploads/types/file-entry';\nimport {ExternalSocialProfile} from '@common/auth/external-social-profile';\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\nimport {finalize} from 'rxjs/operators';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {BackstageRequestType} from '../backstage-request-type';\nimport {AppCurrentUser} from '../../../app-current-user';\n\n@Component({\n    selector: 'backstage-request-form',\n    templateUrl: './backstage-request-form.component.html',\n    styleUrls: ['./backstage-request-form.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BackstageRequestFormComponent {\n    public uploadedPassportEntry$ = new BehaviorSubject<FileEntry>(null);\n    public socialProfiles$ = new BehaviorSubject<{[key: string]: ExternalSocialProfile}>(null);\n    public errors$ = new BehaviorSubject<object>({});\n    public loading$ = new BehaviorSubject(false);\n    public requestType$ = new BehaviorSubject<BackstageRequestType>(null);\n    public form = this.fb.group({\n        artist: [],\n        artist_name: [this.currentUser.get('display_name')],\n        image: [this.currentUser.primaryArtist()?.image_small || this.currentUser.get('avatar')],\n        first_name: [this.currentUser.get('first_name')],\n        last_name: [this.currentUser.get('last_name')],\n        role: [],\n        company: [''],\n    });\n\n    constructor(\n        private backstage: BackstagRequestService,\n        private fb: FormBuilder,\n        public settings: Settings,\n        private currentUser: AppCurrentUser,\n        private socialAuth: SocialAuthService,\n        private uploadQueue: UploadQueueService,\n        private imageValidator: ImageUploadValidator,\n        private router: Router,\n        private route: ActivatedRoute,\n    ) {\n        this.requestType$.next(this.route.routeConfig.path.replace('requests/', '') as BackstageRequestType);\n        if (this.requestType$.value === BackstageRequestType.verifyArtist) {\n            this.form.get('artist').setValue(this.currentUser.primaryArtist());\n            this.form.get('artist').disable();\n        }\n        if (this.requestType$.value === BackstageRequestType.becomeArtist) {\n            this.form.get('artist').setValue(this.currentUser.artistPlaceholder());\n            this.form.get('artist').disable();\n        }\n        if (this.requestType$.value !== BackstageRequestType.claimArtist) {\n            this.form.get('role').setValue('artist');\n        }\n        if (this.requestType$.value !== BackstageRequestType.becomeArtist) {\n            this.form.get('image').disable();\n        }\n    }\n\n    public requestAccess() {\n        this.loading$.next(true);\n        const payload = {\n            artist_name: this.form.value.artist_name,\n            artist_id: this.form.value.artist?.id,\n            type: this.requestType$.value,\n            data: {\n                ...this.form.value,\n                passportScanEntryId: this.uploadedPassportEntry$.value?.id,\n                socialProfiles: this.socialProfiles$.value,\n            }\n        };\n        this.backstage.submitRequest(payload)\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.router.navigate(['/backstage/requests', response.request.id, 'request-submitted'], {replaceUrl: true});\n            }, (err: BackendErrorResponse) => this.errors$.next(err.errors));\n    }\n\n    public retrieveSocialProfile(serviceName: string) {\n        this.socialAuth.retrieveProfile(serviceName).then(profile => {\n            this.socialProfiles$.next({\n                ...this.socialProfiles$.value,\n                [serviceName]: profile,\n            });\n        });\n    }\n\n    public uploadPassportScan(files: UploadedFile[]) {\n        const params = {\n            uri: 'uploads/images',\n            httpParams: {diskPrefix: 'test', disk: 'private'},\n            validator: this.imageValidator\n        } as UploadApiConfig;\n        this.uploadQueue.start(files, params).subscribe(response => {\n            this.uploadedPassportEntry$.next(response.fileEntry);\n        });\n    }\n\n    public removePassportUpload() {\n        this.uploadedPassportEntry$.next(null);\n    }\n\n    public removeSocialProfile(serviceName: string) {\n        const profiles = {...this.socialProfiles$.value};\n        delete profiles[serviceName];\n        this.socialProfiles$.next(profiles);\n    }\n}\n","import {Component, OnInit, ChangeDetectionStrategy} from '@angular/core';\n\n@Component({\n    selector: 'backstage-request-submitted',\n    templateUrl: './backstage-request-submitted.component.html',\n    styleUrls: ['./backstage-request-submitted.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BackstageRequestSubmittedComponent {\n}\n","<div class=\"text-align-center\">\n    <mat-icon class=\"check-icon\" svgIcon=\"check\"></mat-icon>\n</div>\n\n<h1 trans>We've got your request</h1>\n\n<ul>\n    <li>Our support team will review it and send you an email within 3 days!</li>\n    <li>Don't submit another request until you hear from us.</li>\n    <li>If this artist profile is already claimed, ask an admin on your team to invite you.</li>\n</ul>\n\n<div class=\"backstage-action-buttons\">\n    <a routerLink=\"/\" class=\"backstage-action-button\" mat-flat-button color=\"accent\" trans>Got It</a>\n</div>\n","<h1 trans [transValues]=\"{sitename: settings.get('branding.site_name')}\">Get Access to :sitename for Artists</h1>\n<h2 trans>First, select the type of your request.</h2>\n\n<div class=\"claim-row\">\n    <a class=\"claim-col\" [routerLink]=\"[currentUserIsArtist ? 'verify-artist' : 'become-artist']\">\n        <div class=\"title\" trans>\n            <ng-container *ngIf=\"currentUserIsArtist\">Get verified</ng-container>\n            <ng-container *ngIf=\"!currentUserIsArtist\">Become an artist</ng-container>\n        </div>\n        <img src=\"client/assets/images/backstage/claim-artist.jpg\" alt=\"\">\n    </a>\n    <a class=\"claim-col\" routerLink=\"claim-artist\">\n        <div class=\"title\" trans>Claim existing artist</div>\n        <img src=\"client/assets/images/backstage/claim-label.jpg\" alt=\"\">\n    </a>\n</div>\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {Settings} from '@common/core/config/settings.service';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {AppCurrentUser} from '../../../app-current-user';\n\n@Component({\n    selector: 'backstage-type-selector',\n    templateUrl: './backstage-type-selector.component.html',\n    styleUrls: ['./backstage-type-selector.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BackstageTypeSelectorComponent {\n    public currentUserIsArtist = false;\n\n    constructor(\n        public settings: Settings,\n        private currentUser: AppCurrentUser,\n    ) {\n        this.currentUserIsArtist = !!this.currentUser.primaryArtist();\n    }\n}\n","<div class=\"datatable\">\n    <datatable-header pluralResourceName=\"albums\">\n        <ng-container leftContent>\n            <div class=\"new-album-container\">\n                <a mat-raised-button color=\"accent\" [routerLink]=\"urls.createAlbum(insideAdmin)\" [queryParams]=\"{artist: encodedArtist}\" *ngIf=\"currentUser.hasPermission('music.create')\" [disabled]=\"!artist\" trans>New Album</a>\n                <p class=\"save-message\" *ngIf=\"!artist\">\n                    <mat-icon svgIcon=\"warning\"></mat-icon>\n                    <span trans>Save artist first to enable album creation.</span>\n                </p>\n            </div>\n        </ng-container>\n    </datatable-header>\n    <table class=\"material-table\">\n        <thead>\n        <tr>\n            <th table-sort-header=\"name\" trans>Album</th>\n            <th table-sort-header trans>Release Date</th>\n            <th table-sort-header=\"views\" trans>Views</th>\n            <th table-sort-header=\"tracks_count\" trans>Number Of Tracks</th>\n            <th></th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let album of albums$ | async\">\n            <td>\n                <div class=\"column-with-image\">\n                    <media-image [media]=\"album\" default=\"album\"></media-image>\n                    <span>{{album.name}}</span>\n                </div>\n            </td>\n            <td data-label=\"Release Date\">{{album.release_date ? album.release_date: '&ndash;'}}</td>\n            <td data-label=\"Views\">{{album.views}}</td>\n            <td data-label=\"Number of Tracks\">{{album.tracks_count ? album.tracks_count : '&ndash;'}}</td>\n            <td class=\"edit-column\">\n                <a [routerLink]=\"urls.editAlbum(album, insideAdmin)\" [queryParams]=\"{artist: encodedArtist}\" mat-icon-button [matTooltip]=\"'Edit album' | trans\">\n                    <mat-icon svgIcon=\"edit\"></mat-icon>\n                </a>\n                <button mat-icon-button (click)=\"maybeDeleteAlbum(album)\" [matTooltip]=\"'Delete album' | trans\" *ngIf=\"currentUser.hasPermission('albums.delete')\" trans>\n                    <mat-icon svgIcon=\"delete\"></mat-icon>\n                </button>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n    <no-results-message svgImage=\"music.svg\" *ngIf=\"!datatable.data.length\">\n        <span primary-text trans>This artist has no albums yet</span>\n    </no-results-message>\n</div>\n","import {\n    Component,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewEncapsulation\n} from '@angular/core';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {WebPlayerImagesService} from '../../../../web-player/web-player-images.service';\nimport {Artist} from '../../../../models/Artist';\nimport {Album} from '../../../../models/Album';\nimport {Albums} from '../../../../web-player/albums/albums.service';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {ConfirmModalComponent} from '@common/core/ui/confirm-modal/confirm-modal.component';\nimport {DatatableService} from '@common/datatable/datatable.service';\nimport {Observable} from 'rxjs';\nimport {WebPlayerUrls} from '../../../../web-player/web-player-urls.service';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'artist-albums-table',\n    templateUrl: './artist-albums-table.component.html',\n    styleUrls: ['./artist-albums-table.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [DatatableService],\n})\nexport class ArtistAlbumsTableComponent implements OnInit, OnChanges {\n    @Input() artist: Artist;\n    @Input() albums: Album[] = [];\n    albums$ = this.datatable.data$ as Observable<Album[]>;\n    encodedArtist: string;\n    insideAdmin: boolean;\n    constructor(\n        private modal: Modal,\n        private albumsApi: Albums,\n        public currentUser: CurrentUser,\n        public images: WebPlayerImagesService,\n        public datatable: DatatableService<Album>,\n        public urls: WebPlayerUrls,\n        private router: Router,\n    ) {}\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.artist) {\n            this.encodedArtist = btoa(JSON.stringify({\n                id: this.artist.id,\n                name: this.artist.name,\n                image_small: this.artist.image_small\n            }));\n        }\n    }\n\n    ngOnInit() {\n        this.insideAdmin = this.router.url.includes('admin');\n        this.datatable.init({\n            initialData: this.albums ? this.albums : []\n        });\n    }\n\n    public maybeDeleteAlbum(album: Album) {\n        this.modal.show(ConfirmModalComponent, {\n            title: 'Delete Album',\n            body: 'Are you sure you want to delete this album?',\n            ok: 'Delete'\n        }).beforeClosed().subscribe(async (confirmed) => {\n            if ( ! confirmed) return;\n            this.albumsApi.delete([album.id]).subscribe(() => {\n                this.datatable.data = this.datatable.data.filter(a => a.id !== album.id);\n            });\n        });\n    }\n}\n","<div class=\"material-panel\">\n    <form class=\"edit-main-info\" (ngSubmit)=\"createOrUpdate()\" [formGroup]=\"form\" ngNativeValidate>\n        <div class=\"left-col\">\n            <upload-image-control formControlName=\"image_small\" diskPrefix=\"artist\"></upload-image-control>\n            <button type=\"submit\" mat-raised-button color=\"accent\" class=\"main-button\" *ngIf=\"artist\" trans>Update</button>\n            <button type=\"submit\" mat-raised-button color=\"accent\" class=\"main-button\" *ngIf=\"!artist\" trans>Create</button>\n        </div>\n        <div class=\"right-col many-inputs admin-artist-edit-inputs\">\n\n            <mat-tab-group color=\"accent\" animationDuration=\"0ms\">\n                <mat-tab [label]=\"'Details' | trans\">\n                    <div class=\"many-inputs tab\">\n                        <div class=\"input-container\">\n                            <label for=\"artist-name\" trans>Name</label>\n                            <input type=\"text\" formControlName=\"name\" id=\"artist-name\" [readOnly]=\"!insideAdmin\" required>\n                            <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\n                        </div>\n                        <div class=\"input-container\">\n                            <label for=\"artist-genres\" trans>Genres</label>\n                            <chip-input placeholder=\"+Add genre\" id=\"artist-genres\" [suggestFn]=\"suggestGenreFn\" formControlName=\"genres\"></chip-input>\n                            <div class=\"error\" *ngIf=\"errors.genres\">{{errors.genres}}</div>\n                        </div>\n                        <ng-container *ngIf=\"insideAdmin\">\n                            <div class=\"input-container\" *ngIf=\"settings.get('spotify_is_setup')\">\n                                <label for=\"artist-spotify-id\" trans>Spotify ID</label>\n                                <input type=\"text\" id=\"artist-spotify-id\" formControlName=\"spotify_id\" minlength=\"22\" maxlength=\"22\">\n                            </div>\n                            <div class=\"setting-toggle-container\">\n                                <mat-slide-toggle formControlName=\"verified\" trans>Verified</mat-slide-toggle>\n                                <div class=\"error\" *ngIf=\"errors.verified\">{{errors.verified}}</div>\n                            </div>\n                        </ng-container>\n                    </div>\n                </mat-tab>\n                <mat-tab [label]=\"'Links' | trans\">\n                    <profile-links-form-control formControlName=\"links\"></profile-links-form-control>\n                </mat-tab>\n                <mat-tab [label]=\"'Biography' | trans\">\n                    <div class=\"many-inputs tab\">\n                        <div class=\"input-container\">\n                            <label for=\"artist-country\" trans>Country</label>\n                            <input formControlName=\"country\" id=\"artist-country\">\n                        </div>\n                        <div class=\"input-container\">\n                            <label for=\"artist-city\" trans>City</label>\n                            <input formControlName=\"city\" id=\"artist-city\">\n                        </div>\n                        <div class=\"input-container\">\n                            <label for=\"artist-bio\" trans>Biography</label>\n                            <textarea formControlName=\"description\" id=\"artist-bio\" rows=\"8\"></textarea>\n                        </div>\n                        <div class=\"profile-images\">\n                            <div class=\"profile-images-title\" trans>Biography Images</div>\n                            <div class=\"profile-images-wrapper\" formArrayName=\"profile_images\">\n                                <upload-image-control\n                                    *ngFor=\"let image of profileImagesArray().controls; index as i\"\n                                    [formControlName]=\"i\"\n                                    (fileDeleted)=\"removeProfileImage(i)\"\n                                    [uploadConfig]=\"{httpParams: {diskPrefix: 'bio'}}\"\n                                    [buttonText]=\"image.value ? 'Replace Image' : 'Upload Image'\"\n                                ></upload-image-control>\n                            </div>\n                        </div>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n    </form>\n\n    <artist-albums-table [albums]=\"albums\" [artist]=\"artist\"></artist-albums-table>\n</div>\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    OnInit\n} from '@angular/core';\nimport {Settings} from '@common/core/config/settings.service';\nimport {Artists} from '../../../web-player/artists/artists.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Artist} from '../../../models/Artist';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {UploadQueueService} from '@common/uploads/upload-queue/upload-queue.service';\nimport {FormArray, FormBuilder, FormControl} from '@angular/forms';\nimport {GENRE_MODEL} from '../../../models/Genre';\nimport {map} from 'rxjs/operators';\nimport {Search} from '../../../web-player/search/search.service';\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\nimport {Album} from '../../../models/Album';\nimport {ComponentCanDeactivate} from '@common/guards/pending-changes/component-can-deactivate';\nimport {WebPlayerUrls} from '../../../web-player/web-player-urls.service';\n\n@Component({\n    selector: 'crupdate-artist-page',\n    templateUrl: './crupdate-artist-page.component.html',\n    styleUrls: ['./crupdate-artist-page.component.scss'],\n    providers: [UploadQueueService],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CrupdateArtistPageComponent implements OnInit, ComponentCanDeactivate {\n    public insideAdmin = false;\n    public errors: {[K in keyof Partial<Artist>]: string} = {};\n    public artist: Artist;\n    public albums: Album[] = [];\n\n    public form = this.fb.group({\n        name: [''],\n        verified: [''],\n        image_small: [''],\n        spotify_id: [''],\n        genres: [[]],\n        description: [''],\n        country: [''],\n        city: [''],\n        profile_images: this.fb.array([]),\n        links: [[]],\n    });\n\n    constructor(\n        public settings: Settings,\n        private uploadQueue: UploadQueueService,\n        private artists: Artists,\n        private route: ActivatedRoute,\n        private toast: Toast,\n        private router: Router,\n        private fb: FormBuilder,\n        private cd: ChangeDetectorRef,\n        private search: Search,\n        private urls: WebPlayerUrls,\n    ) {}\n\n    ngOnInit() {\n        this.bindToRouteData();\n        this.insideAdmin = this.router.url.includes('admin');\n    }\n\n    public createOrUpdate() {\n        this.artist ? this.update() : this.create();\n    }\n\n    public create() {\n        return this.artists.create(this.form.value).subscribe(response => {\n            this.form.markAsPristine();\n            this.artist = response.artist;\n            this.toast.open('Artist created.');\n            this.router.navigate(this.urls.editArtist(this.artist.id, true), {replaceUrl: true});\n            this.errors = {};\n        }, (errResponse: BackendErrorResponse) => {\n            this.errors = errResponse.errors;\n            this.cd.detectChanges();\n        });\n    }\n\n    public update() {\n        return this.artists.update(this.artist.id, this.form.value).subscribe(() => {\n            this.form.markAsPristine();\n            this.toast.open('Artist updated.');\n            this.router.navigate(['/admin/artists']);\n        }, (errResponse: BackendErrorResponse) => {\n            this.errors = errResponse.errors;\n            this.cd.detectChanges();\n        });\n    }\n\n    public profileImagesArray() {\n        return this.form.get('profile_images') as FormArray;\n    }\n\n    private bindToRouteData() {\n        this.route.data.subscribe((data: {api: {artist?: Artist, albums?: Album[]}}) => {\n            if (data.api) {\n                this.artist = data.api.artist;\n                this.albums = data.api.albums;\n                this.form.patchValue({\n                    name: data.api.artist.name,\n                    verified: data.api.artist.verified,\n                    image_small: data.api.artist.image_small,\n                    spotify_id: data.api.artist.spotify_id,\n                    genres: (data.api.artist.genres || []).map(g => g.name),\n                    description: data.api.artist.profile?.description,\n                    country: data.api.artist.profile?.country,\n                    city: data.api.artist.profile?.city,\n                    profile_images: [],\n                    links: data.api.artist.links,\n                });\n                (data.api.artist.profile_images || []).forEach(img => {\n                    this.addProfileImage(img.url);\n                });\n            }\n        });\n        this.addProfileImage();\n    }\n\n    public addProfileImage(url = '') {\n        this.profileImagesArray().push(new FormControl(url));\n    }\n\n    public removeProfileImage(index: number) {\n        this.profileImagesArray().removeAt(index);\n    }\n\n    public suggestGenreFn = (query: string) => {\n        return this.search.media(query, {types: [GENRE_MODEL], limit: 5})\n            .pipe(map(response => response.results.genres.map(genre => genre.name)));\n    }\n\n    public canDeactivate(): boolean {\n        return !this.form.dirty;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    Resolve,\n    Router,\n    RouterStateSnapshot\n} from '@angular/router';\nimport {Artists, GetArtistResponse} from '../../../web-player/artists/artists.service';\nimport {catchError, mergeMap} from 'rxjs/operators';\nimport {EMPTY, of} from 'rxjs';\nimport {BackendResponse} from '@common/core/types/backend-response';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EditArtistPageResolver implements Resolve<GetArtistResponse> {\n\n    constructor(\n        private artists: Artists,\n        private router: Router\n    ) {}\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): BackendResponse<GetArtistResponse> {\n        const params = {\n            with: ['simplifiedAlbums', 'genres', 'profile'],\n            albumsPerPage: 50,\n            forEditing: true,\n        };\n        const id = +route.paramMap.get('id');\n        return this.artists.get(id, params).pipe(\n            catchError(() => {\n                this.router.navigate(['/']);\n                return EMPTY;\n            }),\n            mergeMap(response => {\n                if (response.artist) {\n                    return of(response);\n                } else {\n                    this.router.navigate(['/']);\n                    return EMPTY;\n                }\n            })\n        );\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {UploadValidator} from '@common/uploads/validation/upload-validator';\nimport {FileSizeValidation} from '@common/uploads/validation/validations/file-size-validation';\nimport {convertToBytes} from '@common/core/utils/convertToBytes';\nimport {FileTypeValidation} from '@common/uploads/validation/validations/file-type-validation';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AudioUploadValidator extends UploadValidator {\n    protected readonly DEFAULT_MAX_SIZE_MB = 50;\n    public showToast = true;\n\n    protected initValidations() {\n        const validations = [\n            new FileSizeValidation(\n                {maxSize: this.getMaxFileSize()},\n                this.i18n\n            ),\n            new FileTypeValidation({types: ['audio', 'video']}, this.i18n),\n        ];\n\n        this.validations.push(...validations);\n    }\n\n    protected getMaxFileSize(): number {\n        return this.settings.get(\n            'uploads.max_size',\n            convertToBytes(this.DEFAULT_MAX_SIZE_MB, 'MB')\n        );\n    }\n}\n","<div class=\"input-container\">\n    <label [for]=\"id\" trans>Artists</label>\n    <input\n        type=\"text\"\n        [id]=\"id\"\n        [formControl]=\"searchControl\"\n        [matAutocomplete]=\"artistAuto\"\n        placeholder=\"Search artists...\"\n        trans-placeholder\n        #searchInput\n    >\n\n    <mat-chip-list [selectable]=\"false\">\n        <mat-chip class=\"chip-with-image\" *ngFor=\"let artist of value$ | async\" [removable]=\"true\" (removed)=\"deselectArtist(artist)\">\n            <img [src]=\"artist.image_small\" [alt]=\"artist.name\">\n            {{artist.name}}\n            <mat-icon svgIcon=\"cancel\" matChipRemove></mat-icon>\n        </mat-chip>\n    </mat-chip-list>\n\n    <mat-autocomplete #artistAuto=\"matAutocomplete\" class=\"media-autocomplete-panel\" (optionSelected)=\"selectArtist($event.option.value)\" [displayWith]=\"displayFn\">\n        <mat-option *ngFor=\"let artist of searchResults$ | async\" [value]=\"artist\">\n            <img [src]=\"artist.image_small\" [alt]=\"artist.name + ' image'\">\n            <span>{{artist.name}}</span>\n        </mat-option>\n    </mat-autocomplete>\n\n    <div class=\"error\" *ngIf=\"error\">{{error}}</div>\n</div>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    Input,\n    OnInit,\n    ViewChild\n} from '@angular/core';\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {BehaviorSubject, fromEvent, of as observableOf} from 'rxjs';\nimport {UploadQueueService} from '@common/uploads/upload-queue/upload-queue.service';\nimport {debounceTime, distinctUntilChanged, take} from 'rxjs/operators';\nimport {Search} from '../../../web-player/search/search.service';\nimport {Artist} from '../../../models/Artist';\nimport {CurrentUser} from '@common/auth/current-user';\n\n@Component({\n    selector: 'track-artist-control',\n    templateUrl: './track-artist-control.component.html',\n    styleUrls: ['./track-artist-control.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'class': 'custom-control'},\n    providers: [UploadQueueService, {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: TrackArtistControlComponent,\n        multi: true,\n    }]\n})\nexport class TrackArtistControlComponent implements OnInit, AfterViewInit, ControlValueAccessor {\n    @ViewChild('searchInput') searchInput: ElementRef<HTMLInputElement>;\n    @Input() error: string;\n    @Input() id: string;\n\n    public searchControl = new FormControl();\n    public value$ = new BehaviorSubject<Artist[]>([]);\n    public searchResults$ = new BehaviorSubject<Artist[]>([]);\n    private propagateChange: (artists: Artist[]) => void;\n\n    constructor(\n        private search: Search,\n        public currentUser: CurrentUser,\n    ) {}\n\n    ngOnInit() {\n        this.bindSearchControl();\n    }\n\n    ngAfterViewInit() {\n        fromEvent(this.searchInput.nativeElement, 'focus')\n            .pipe(take(1))\n            .subscribe(() => {\n                this.findMatches();\n            });\n    }\n\n    public writeValue(value: Artist[]) {\n        this.value$.next(value);\n    }\n\n    public registerOnChange(fn: (artists: Artist[]) => void) {\n        this.propagateChange = fn;\n    }\n\n    public registerOnTouched() {}\n\n    public deselectArtist(artist: Artist) {\n        const newArtists = this.value$.value.filter(a => a.id !== artist.id);\n        this.value$.next(newArtists);\n        this.propagateChange(this.value$.value);\n    }\n\n    public selectArtist(artist: Artist) {\n        if (this.value$.value.findIndex(a => a.id === artist.id) === -1) {\n            this.value$.next([...this.value$.value, artist]);\n            this.propagateChange(this.value$.value);\n        }\n        this.searchInput.nativeElement.blur();\n    }\n\n    private bindSearchControl() {\n        this.searchControl.valueChanges\n            .pipe(\n                distinctUntilChanged(),\n                debounceTime(250),\n            ).subscribe(query => {\n                if (typeof query !== 'string') {\n                    return observableOf([]);\n                }\n                this.findMatches(query);\n            });\n    }\n\n    public findMatches(query?: string) {\n        this.search.suggestArtists({query, limit: 7})\n            .subscribe(r => this.searchResults$.next(r.artists));\n    }\n\n    public displayFn(_) {\n        return null;\n    }\n}\n","<div class=\"meta\">\n    <div class=\"name\">{{upload.uploadedFile.name}}</div>\n    <div class=\"time-left\" *ngIf=\"(progress.percentage && progress.percentage < 100) && !upload.error$.value\">\n        {{progress.eta}}\n        <span trans>left</span>\n    </div>\n    <div class=\"actions\">\n        <mat-icon\n                class=\"error-icon action-icon\"\n                svgIcon=\"error-outline\"\n                *ngIf=\"upload.error$ | async as error; else noError\"\n                [matTooltip]=\"error | trans\"\n                matTooltipPosition=\"left\"\n        ></mat-icon>\n        <ng-template #noError>\n            <span *ngIf=\"upload.completed\" trans>Upload complete.</span>\n            <span *ngIf=\"upload.processing$ | async\" trans>We are processing your track for playback…</span>\n            <span class=\"cancel-button\" *ngIf=\"!(upload.processing$ | async) && !upload.completed\" (click)=\"upload.cancel()\" trans>Cancel</span>\n        </ng-template>\n    </div>\n</div>\n<mat-progress-bar [mode]=\"(upload.processing$ | async) ? 'indeterminate' : 'determinate'\" color=\"accent\" [value]=\"progress.percentage\"></mat-progress-bar>\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit\n} from '@angular/core';\nimport {UploadQueueItem, UploadQueueItemProgress} from '@common/uploads/upload-queue/upload-queue-item';\nimport {throttleTime} from 'rxjs/operators';\nimport {animationFrameScheduler, Subscription} from 'rxjs';\n\n@Component({\n    selector: 'track-upload-header',\n    templateUrl: './track-upload-header.component.html',\n    styleUrls: ['./track-upload-header.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TrackUploadHeaderComponent implements OnChanges, OnDestroy {\n    @Input() upload: UploadQueueItem;\n    private subscription: Subscription;\n    public progress: UploadQueueItemProgress;\n\n    constructor(private cd: ChangeDetectorRef) {}\n\n\n    ngOnChanges() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n        this.subscription = this.upload.progress$.pipe(\n            // material progress bar animation lasts 250ms\n            throttleTime(260, animationFrameScheduler, {leading: true, trailing: true}),\n        ).subscribe(progress => {\n            this.progress = progress;\n            this.cd.detectChanges();\n        });\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n}\n","<div class=\"many-inputs\">\n    <div class=\"input-container\">\n        <div class=\"fake-label\" trans>Album</div>\n        <div class=\"fake-input\" #fakeInput tabindex=\"0\" [matMenuTriggerFor]=\"menu\" (menuOpened)=\"onMenuOpened()\" (menuClosed)=\"onMenuClosed()\">\n            <ng-container *ngIf=\"selectedAlbum$ | async as selectedAlbum; else anyAlbum\">\n                <media-image [media]=\"selectedAlbum\"></media-image>\n                <div class=\"title-name\">{{selectedAlbum.name}}</div>\n            </ng-container>\n            <ng-template #anyAlbum>\n                <div class=\"title-name\" trans>None</div>\n            </ng-template>\n            <div class=\"arrow-container\">\n                <div class=\"arrow\"></div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<mat-menu #menu=\"matMenu\" class=\"add-album-control-menu\">\n    <div class=\"input-container search-input-container\" (click)=\"$event.stopPropagation()\">\n        <div class=\"search-input-wrapper\">\n            <input type=\"text\" [formControl]=\"searchFormControl\" placeholder=\"Search...\" (blur)=\"searchInput.focus()\" #searchInput mat-menu-item trans-placeholder>\n            <button class=\"clear-search-input-button\" mat-icon-button (click)=\"clearSearchInput()\" *ngIf=\"searchFormControl.value\">\n                <mat-icon svgIcon=\"close\"></mat-icon>\n            </button>\n            <loading-indicator [isVisible]=\"loading$ | async\" class=\"small\"></loading-indicator>\n        </div>\n    </div>\n    <button mat-menu-item (click)=\"selectAlbum(null)\">\n        <media-image default=\"album\"></media-image>\n        <div class=\"info any-user-info\">\n            <div class=\"name\" trans>No Album</div>\n        </div>\n    </button>\n    <button mat-menu-item *ngFor=\"let album of results$ | async\" (click)=\"selectAlbum(album)\">\n        <media-image [media]=\"album\"></media-image>\n        <div class=\"user-info\">\n            <div class=\"name\">{{album.name}}</div>\n            <artists-links-list class=\"email\" [artists]=\"album.artists\"></artists-links-list>\n        </div>\n    </button>\n    <button mat-menu-item disabled *ngIf=\"searchedOnce && !(results$ | async).length\" trans>No albums found.</button>\n</mat-menu>\n","import {ChangeDetectionStrategy, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {catchError, debounceTime, distinctUntilChanged, finalize, map, switchMap} from 'rxjs/operators';\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {BehaviorSubject, Observable, of} from 'rxjs';\nimport {Album, ALBUM_MODEL} from '../../../models/Album';\nimport {Search} from '../../../web-player/search/search.service';\nimport {CurrentUser} from '@common/auth/current-user';\n\n@Component({\n    selector: 'album-control',\n    templateUrl: './album-control.component.html',\n    styleUrls: ['./album-control.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: AlbumControlComponent,\n        multi: true,\n    }]\n})\nexport class AlbumControlComponent implements ControlValueAccessor, OnInit {\n    @ViewChild('searchInput', {static: true}) searchInput: ElementRef<HTMLInputElement>;\n    @ViewChild('fakeInput') fakeInput: ElementRef<HTMLDivElement>;\n    public searchFormControl = new FormControl();\n    public loading$ = new BehaviorSubject(false);\n    public results$ = new BehaviorSubject<Album[]>([]);\n    public selectedAlbum$ = new BehaviorSubject<Album>(null);\n    private propagateChange: (album: Album) => void;\n    public searchedOnce = false;\n\n    constructor(\n        private search: Search,\n        public currentUser: CurrentUser,\n    ) {}\n\n    ngOnInit() {\n        this.bindToSearchControl();\n    }\n\n    public writeValue(value: Album) {\n        this.selectedAlbum$.next(value);\n    }\n\n    public registerOnChange(fn: (album: Album) => void) {\n        this.propagateChange = fn;\n    }\n\n    public registerOnTouched() {}\n\n    private bindToSearchControl() {\n        this.searchFormControl.valueChanges.pipe(\n            debounceTime(150),\n            distinctUntilChanged(),\n            switchMap(query => this.searchAlbums(query)),\n            catchError(() => of([])),\n        ).subscribe(albums => {\n            this.searchedOnce = true;\n            this.results$.next(albums);\n        });\n    }\n\n    private searchAlbums(query: string): Observable<Album[]> {\n        this.loading$.next(true);\n        return this.search.suggestAlbums({query, limit: 7})\n            .pipe(\n                finalize(() =>  this.loading$.next(false)),\n                map(response => response.albums),\n            );\n    }\n\n    public onMenuOpened() {\n        const menu = (document.querySelector('.add-album-control-menu') as HTMLElement);\n        menu.style.width = this.fakeInput.nativeElement.getBoundingClientRect().width + 'px';\n\n        if (!this.searchedOnce) {\n            this.clearSearchInput();\n        }\n    }\n\n    public selectAlbum(album: Album) {\n        this.selectedAlbum$.next(album);\n        this.propagateChange(album);\n    }\n\n    public clearSearchInput() {\n        this.searchFormControl.setValue('');\n    }\n\n    public onMenuClosed() {\n        this.loading$.next(false);\n        this.clearSearchInput();\n    }\n}\n","<form (ngSubmit)=\"submit()\" class=\"many-inputs\" [formGroup]=\"form\" *ngIf=\"errors$ | async as errors\">\n    <track-upload-header [upload]=\"uploadQueueItem\" *ngIf=\"uploadQueueItem\"></track-upload-header>\n    <div class=\"inline-form\" *ngIf=\"albumForm\" [formGroup]=\"form\">\n        <ng-content></ng-content>\n        <div class=\"input-container\">\n            <label [for]=\"'track-form-' + uniqueId + '-name'\" class=\"hidden\" trans>Title</label>\n            <input type=\"text\" [id]=\"'track-form-' + uniqueId + '-name'\" formControlName=\"name\" required>\n        </div>\n        <div class=\"actions\">\n            <button type=\"button\" [class.active]=\"expanded\" mat-icon-button (click)=\"toggleExpandedState()\">\n                <mat-icon svgIcon=\"edit\"></mat-icon>\n            </button>\n            <button type=\"button\" (click)=\"maybeCancel()\" mat-icon-button>\n                <mat-icon svgIcon=\"delete\"></mat-icon>\n            </button>\n        </div>\n    </div>\n    <div [@bodyExpansion]=\"getExpandedState()\" class=\"full-form\">\n        <div class=\"full-form-container\" [class.inside-album]=\"albumForm\">\n            <div class=\"left-column\">\n                <upload-image-control formControlName=\"image\" [defaultBackground]=\"defaultImage$ | async\" diskPrefix=\"track_image\"></upload-image-control>\n                <button mat-flat-button color=\"accent\" type=\"button\" class=\"left-column-action-button\" (click)=\"openUploadMusicModal()\">\n                    <span *ngIf=\"this.track\" trans>Replace File</span>\n                    <span *ngIf=\"!this.track\" trans>Upload Track</span>\n                </button>\n            </div>\n            <div class=\"many-inputs fields-container\">\n                <div class=\"input-container\" *ngIf=\"!albumForm\">\n                    <label [for]=\"'track-form-' + uniqueId + '-name'\" trans>Title</label>\n                    <input type=\"text\" [id]=\"'track-form-' + uniqueId + '-name'\" formControlName=\"name\" required>\n                    <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\n                </div>\n\n                <album-control formControlName=\"album\" [id]=\"'track-form-' + uniqueId + '-album_id'\" *ngIf=\"!albumForm\"></album-control>\n                <track-artist-control [error]=\"errors.artists\" [id]=\"'track-form-' + uniqueId + '-artists'\" formControlName=\"artists\"></track-artist-control>\n\n                <div class=\"input-container\">\n                    <label [for]=\"'track-form-' + uniqueId + '-duration'\" trans>Duration (ms)</label>\n                    <input type=\"number\" [id]=\"'track-form-' + uniqueId + '-duration'\" formControlName=\"duration\" min=\"1\" required>\n                    <div class=\"error\" *ngIf=\"errors.duration\">{{errors.duration}}</div>\n                </div>\n\n                <div class=\"input-container\" *ngIf=\"insideAdmin()\">\n                    <label [for]=\"'track-form-' + uniqueId + '-track-youtube-id'\" trans>Youtube Video ID</label>\n                    <input type=\"text\" [id]=\"'track-form-' + uniqueId + '-track-youtube-id'\" formControlName=\"youtube_id\" minlength=\"1\" maxlength=\"30\">\n                    <div class=\"error\" *ngIf=\"errors.youtube_id\">{{errors.youtube_id}}</div>\n                    <p>ID only. https://www.youtube.com/embed?v=<strong>EPyh41zPg4Z</strong></p>\n                </div>\n\n                <div class=\"input-container\" *ngIf=\"insideAdmin()\">\n                    <label [for]=\"'track-form-' + uniqueId + '-track-url'\" trans>Track Url</label>\n                    <input type=\"url\" [id]=\"'track-form-' + uniqueId + '-track-url'\" formControlName=\"url\" minlength=\"1\" maxlength=\"191\">\n                    <div class=\"error\" *ngIf=\"errors.url\">{{errors.url}}</div>\n                    <p>Remote or local url to music or video file for this track. If available, this will always play instead of youtube video.</p>\n                </div>\n\n                <div class=\"input-container\" *ngIf=\"insideAdmin && settings.get('spotify_is_setup')\">\n                    <label for=\"track-spotify-id\" trans>Spotify ID</label>\n                    <input type=\"text\" id=\"track-spotify-id\" formControlName=\"spotify_id\" minlength=\"22\" maxlength=\"22\">\n                </div>\n\n                <div class=\"input-container\">\n                    <label [for]=\"'track-form-' + uniqueId + '-track-genres'\" trans>Genres</label>\n                    <chip-input placeholder=\"+Add genre\" [id]=\"'track-form-' + uniqueId + '-track-genres'\" [suggestFn]=\"suggestGenreFn\" formControlName=\"genres\"></chip-input>\n                    <div class=\"error\" *ngIf=\"errors.genres\">{{errors.genres}}</div>\n                </div>\n\n                <div class=\"input-container\">\n                    <label [for]=\"'track-form-' + uniqueId + '-track-tags'\" trans>Tags</label>\n                    <chip-input placeholder=\"+Add tag\" [id]=\"'track-form-' + uniqueId + '-track-tags'\" [suggestFn]=\"suggestTagFn\" formControlName=\"tags\"></chip-input>\n                    <div class=\"error\" *ngIf=\"errors.tags\">{{errors.tags}}</div>\n                </div>\n\n                <div class=\"input-container\">\n                    <label [for]=\"'track-form-' + uniqueId + '-track-description'\" trans>Description</label>\n                    <textarea type=\"text\" [id]=\"'track-form-' + uniqueId + '-track-description'\" formControlName=\"description\" minlength=\"10\" maxlength=\"999\" rows=\"5\"></textarea>\n                </div>\n\n                <button type=\"submit\" mat-raised-button *ngIf=\"!albumForm\" color=\"accent\" [disabled]=\"(loading$ | async) || (uploadQueueItem && !uploadQueueItem.completed)\" trans>Save</button>\n                <button type=\"button\" mat-button (click)=\"maybeCancel()\" *ngIf=\"!albumForm && !track\" trans>Cancel</button>\n            </div>\n        </div>\n    </div>\n</form>\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges\n} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {BehaviorSubject} from 'rxjs';\nimport {Tracks} from '../../web-player/tracks/tracks.service';\nimport {Track} from '../../models/Track';\nimport {UploadQueueItem} from '@common/uploads/upload-queue/upload-queue-item';\nimport {DefaultImagePaths} from '../../web-player/default-image-paths.enum';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {\n    matExpansionAnimations,\n    MatExpansionPanelState\n} from '@angular/material/expansion';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {ConfirmModalComponent} from '@common/core/ui/confirm-modal/confirm-modal.component';\nimport {finalize, map} from 'rxjs/operators';\nimport {openUploadWindow} from '@common/uploads/utils/open-upload-window';\nimport {UploadInputTypes} from '@common/uploads/upload-input-config';\nimport {AudioUploadValidator} from '../../web-player/audio-upload-validator';\nimport {UploadQueueService} from '@common/uploads/upload-queue/upload-queue.service';\nimport {WaveformGenerator} from '../../web-player/tracks/waveform/waveform-generator';\nimport {Router} from '@angular/router';\nimport {UploadFileResponse} from '@common/uploads/uploads-api.service';\nimport {Album} from '../../models/Album';\nimport {Settings} from '@common/core/config/settings.service';\nimport {isAbsoluteUrl} from '@common/core/utils/is-absolute-url';\nimport {FileEntry} from '@common/uploads/types/file-entry';\nimport {randomString} from '@common/core/utils/random-string';\nimport {scrollInvalidInputIntoView} from '@common/core/utils/scroll-invalid-input-into-view';\nimport {UploadApiConfig} from '@common/uploads/types/upload-api-config';\nimport {GENRE_MODEL} from '../../models/Genre';\nimport {Search} from '../../web-player/search/search.service';\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\nimport {AppCurrentUser} from '../../app-current-user';\nimport {Artist} from '../../models/Artist';\nimport {TAG_MODEL} from '@common/core/types/models/Tag';\n\nexport interface ExtractedMetadata {\n    title?: string;\n    album?: Album;\n    album_name?: string;\n    artist?: Artist;\n    artist_name?: string;\n    genres?: string[];\n    duration?: number;\n    release_date?: string;\n    comment?: string;\n    image?: FileEntry;\n    lyrics?: string;\n}\n\nexport interface TrackUploadResponse extends UploadFileResponse {\n    metadata?: ExtractedMetadata;\n}\n\n@Component({\n    selector: 'track-form',\n    templateUrl: './track-form.component.html',\n    styleUrls: ['./track-form.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [matExpansionAnimations.bodyExpansion]\n})\nexport class TrackFormComponent implements OnInit, OnChanges {\n    // track that is being edited\n    @Input() track: Track;\n\n    // creating a new track for this upload\n    @Input() uploadQueueItem: UploadQueueItem;\n\n    // track will be saved along with this album\n    @Input() albumForm: FormGroup;\n\n    // number of this track inside parent album\n    @Input() number: number;\n\n    @Output() canceled = new EventEmitter<UploadQueueItem|Track>();\n    @Output() saved = new EventEmitter<Track>();\n\n    public errors$ = new BehaviorSubject<{[K in keyof Partial<Track>]: string}>({});\n    public defaultImage$ = new BehaviorSubject<string>(DefaultImagePaths.album);\n    public loading$ = new BehaviorSubject<boolean>(false);\n    public readonly uniqueId = randomString(5);\n\n    public form = this.fb.group({\n        id: [null],\n        name: [''],\n        image: [''],\n        description: [''],\n        number: [1],\n        tags: [[]],\n        genres: [[]],\n        duration: [null],\n        url: [''],\n        youtube_id: [''],\n        spotify_id: [''],\n        spotify_popularity: [''],\n        album: [null],\n        artists: [[]],\n        waveData: [null],\n        lyrics: [''],\n    });\n    public expanded = false;\n\n    constructor(\n        private fb: FormBuilder,\n        public currentUser: AppCurrentUser,\n        private tracks: Tracks,\n        private toast: Toast,\n        private modal: Modal,\n        private audioValidator: AudioUploadValidator,\n        private uploadQueue: UploadQueueService,\n        private waveGenerator: WaveformGenerator,\n        private router: Router,\n        public settings: Settings,\n        private cd: ChangeDetectorRef,\n        private search: Search,\n    ) {}\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.number && changes.number.currentValue != null) {\n            this.form.patchValue({number: changes.number.currentValue});\n        }\n    }\n\n    ngOnInit() {\n        this.expanded = !this.albumForm;\n\n        if (this.track) {\n            const formValue = {...this.track};\n            formValue.tags = (this.track.tags || []).map(t => t.name) as any;\n            formValue.genres = (this.track.genres || []).map(t => t.display_name || t.name) as any;\n            this.form.patchValue(formValue);\n\n            if (this.track.album) {\n                this.defaultImage$.next(this.track.album.image || DefaultImagePaths.album);\n            }\n        } else if ( ! this.currentUser.canAttachMusicToAnyArtist()) {\n            this.form.get('artists').setValue([\n                this.currentUser.get('artists')[0] || this.currentUser.artistPlaceholder(),\n            ]);\n        }\n\n        if (this.uploadQueueItem) {\n            this.uploadQueueItem.uploadedResponse$.subscribe((response: TrackUploadResponse) => {\n                this.patchFormUsingFileUpload(response);\n            });\n        }\n\n        if (this.albumForm) {\n            this.albumForm.get('image').valueChanges.subscribe(url => {\n                this.defaultImage$.next(url || DefaultImagePaths.album);\n            });\n        }\n    }\n\n    public getPayload(): Partial<Track> {\n        const customData = this.uploadQueueItem ? this.uploadQueueItem.customData : {};\n        const payload =  {...this.form.value, ...customData};\n        payload.artists = payload.artists.map(a => typeof a !== 'number' ? a.id : a);\n        return payload;\n    }\n\n    public isUploading() {\n        return this.uploadQueueItem && !this.uploadQueueItem.completed;\n    }\n\n    public submit() {\n        if (this.albumForm) return;\n        this.loading$.next(true);\n\n        const payload = this.getPayload();\n\n        const request = this.track ?\n            this.tracks.update(this.track.id, payload) :\n            this.tracks.create(payload);\n\n        request\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                if (this.uploadQueueItem) {\n                    this.uploadQueue.remove(this.uploadQueueItem.id);\n                }\n                this.toast.open('Track saved.');\n                this.form.markAsPristine();\n                this.saved.emit(response.track);\n            }, (errResponse: BackendErrorResponse) => {\n                this.errors$.next(errResponse.errors);\n                scrollInvalidInputIntoView(this.errors$.value, `track-form-${this.uniqueId}`);\n            });\n    }\n\n    public toggleExpandedState() {\n        this.expanded = !this.expanded;\n    }\n\n    public getExpandedState(): MatExpansionPanelState {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n\n    public maybeCancel() {\n        this.modal.show(ConfirmModalComponent, {\n            title: 'Remove Track',\n            body:  'Are you sure you want to cancel the upload and remove this track?',\n            ok:    'Remove'\n        }).beforeClosed().subscribe(confirmed => {\n            if ( ! confirmed) return;\n            if (this.uploadQueueItem) {\n                this.uploadQueue.remove(this.uploadQueueItem.id);\n                this.canceled.emit(this.uploadQueueItem);\n                this.toast.open('Upload canceled.');\n            } else if (this.track) {\n                this.tracks.delete([this.track.id]).subscribe(() => {\n                    this.canceled.emit(this.track);\n                    this.toast.open('Track deleted.');\n                });\n            }\n        });\n    }\n\n    public openUploadMusicModal() {\n        const params = {\n            uri: 'uploads',\n            validator: this.audioValidator,\n            httpParams: {diskPrefix: 'track_media', disk: 'public'},\n            willProcessFiles: true,\n        } as UploadApiConfig;\n        openUploadWindow({types: [UploadInputTypes.audio, UploadInputTypes.video]}).then(uploadedFiles => {\n            if ( ! uploadedFiles) return;\n            // if this track form is already attached to existing upload queue item\n            // replace that item in queue service instead of creating a new item\n            const replacements = this.uploadQueueItem ? {[this.uploadQueueItem.id]: uploadedFiles[0]} : uploadedFiles;\n            this.uploadQueue.start(replacements, params).subscribe(response => {\n                const queueItem = this.uploadQueue.find(response.queueItemId);\n                this.waveGenerator.generate(queueItem.uploadedFile.native).then(waveData => {\n                    this.form.patchValue({waveData});\n                    queueItem.finishProcessing();\n                });\n                this.patchFormUsingFileUpload(response);\n                this.toast.open('Track uploaded.');\n            }, () => this.toast.open('Could not upload track'));\n            // make sure progress bar is shown if we're editing track from admin\n            if ( ! this.uploadQueueItem) {\n                this.uploadQueueItem = this.uploadQueue.uploads$.value[0];\n                this.cd.markForCheck();\n            }\n        });\n    }\n\n    private patchFormUsingFileUpload(response: TrackUploadResponse) {\n        const values: {[K in keyof Partial<Track>]: any} & {lyrics?: string} = {\n            name: response.metadata.title,\n            duration: response.metadata.duration,\n            url: response.fileEntry.url,\n            genres: response.metadata.genres || [],\n            description: response.metadata.comment,\n            lyrics: response.metadata.lyrics,\n        };\n        if (response.metadata.album) {\n            values.album = response.metadata.album;\n        }\n        if (response.metadata.artist) {\n            values.artists = [response.metadata.artist];\n\n            // set artist on album, if does not already have one\n            if (this.albumForm && ! this.albumForm.value.artist) {\n                this.albumForm.patchValue({artist: response.metadata.artist});\n            }\n        }\n        if (response.metadata.image) {\n            values.image = response.metadata.image.url;\n\n            // set image on album, if does not already have one\n            if (this.albumForm && ! this.albumForm.value.image) {\n                this.albumForm.patchValue({image: response.metadata.image.url});\n            }\n        }\n        if (response.metadata.release_date && this.albumForm && !this.albumForm.value.release_date) {\n            this.albumForm.patchValue({release_date: response.metadata.release_date});\n        }\n        this.form.patchValue(values);\n    }\n\n    public insideAdmin(): boolean {\n        return this.router.url.indexOf('admin') > -1;\n    }\n\n    public shouldShowDurationField() {\n        const trackUrl = this.form.get('url').value;\n        return !trackUrl || isAbsoluteUrl(trackUrl);\n    }\n\n    public suggestTagFn = (query: string) => {\n        return this.search.media(query, {types: [TAG_MODEL], limit: 5})\n            .pipe(map(response => response.results.tags.map(tag => tag.name)));\n    }\n\n    public suggestGenreFn = (query: string) => {\n        return this.search.media(query, {types: [GENRE_MODEL], limit: 5})\n            .pipe(map(response => response.results.genres.map(genre => genre.name)));\n    }\n}\n","export const TAG_MODEL = 'tag';\n\nexport interface Tag {\n    id: number;\n    name: string;\n    display_name: string;\n    type: string;\n    updated_at: string;\n    created_at: string;\n}\n","<form (ngSubmit)=\"submit()\" [formGroup]=\"form\">\n    <div class=\"main-info-fields\">\n        <div class=\"left-column\">\n            <upload-image-control formControlName=\"image\" diskPrefix=\"album\"></upload-image-control>\n            <button mat-flat-button color=\"accent\" type=\"button\" class=\"upload-tracks-button\" [uploadButton]=\"uploadButtonConfig\" (filesSelected)=\"uploadFiles($event)\" trans>Upload Tracks</button>\n        </div>\n        <div class=\"text-fields-container many-inputs\">\n            <div class=\"input-container\">\n                <label for=\"album-form-name\" trans>Name</label>\n                <input type=\"text\" id=\"album-form-name\" formControlName=\"name\" [readOnly]=\"album && !currentUser.hasPermissions(['music.update'])\" required>\n                <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\n            </div>\n\n            <div class=\"input-container\">\n                <label for=\"album-form-release_date\" trans>Release Date</label>\n                <input type=\"date\" placeholder=\"YYYY-MM-DD\" id=\"album-form-release_date\" formControlName=\"release_date\" required>\n                <div class=\"error\" *ngIf=\"errors.release_date\">{{errors.release_date}}</div>\n            </div>\n\n            <track-artist-control [error]=\"errors.artists\" id=\"album-form-artists\" formControlName=\"artists\"></track-artist-control>\n\n            <div class=\"input-container\">\n                <label for=\"album-form-description\" trans>Description</label>\n                <textarea type=\"text\" id=\"album-form-description\" formControlName=\"description\" minlength=\"10\" maxlength=\"250\" rows=\"5\"></textarea>\n                <div class=\"error\" *ngIf=\"errors.description\">{{errors.description}}</div>\n            </div>\n\n            <div class=\"input-container\">\n                <label for=\"album-form-genres\" trans>Genres</label>\n                <chip-input placeholder=\"+Add genre\" id=\"album-form-genres\" [suggestFn]=\"suggestGenreFn\" formControlName=\"genres\"></chip-input>\n                <div class=\"error\" *ngIf=\"errors.genres\">{{errors.genres}}</div>\n            </div>\n\n            <div class=\"input-container\">\n                <label for=\"album-form-tags\" trans>Tags</label>\n                <chip-input placeholder=\"+Add tag\" id=\"album-form-tags\" formControlName=\"tags\" [suggestFn]=\"suggestTagFn\"></chip-input>\n                <div class=\"error\" *ngIf=\"errors.tags\">{{errors.tags}}</div>\n            </div>\n\n            <div class=\"input-container\" *ngIf=\"insideAdmin && settings.get('spotify_is_setup')\">\n                <label for=\"album-spotify-id\" trans>Spotify ID</label>\n                <input type=\"text\" id=\"album-spotify-id\" formControlName=\"spotify_id\" minlength=\"22\" maxlength=\"22\">\n            </div>\n\n            <button type=\"submit\" [disabled]=\"loading$ | async\" mat-raised-button color=\"accent\" trans>Save</button>\n            <button type=\"button\" mat-button (click)=\"maybeCancel()\" trans>Cancel</button>\n        </div>\n    </div>\n</form>\n\n<ul class=\"track-list unstyled-list\" cdkDropList (cdkDropListDropped)=\"reorderTracks($event)\">\n    <li class=\"track-list-item\" *ngFor=\"let track of allTracks$ | async; trackBy: trackByFn; index as index\" cdkDrag>\n        <track-form [albumForm]=\"form\" [track]=\"track\" *ngIf=\"track.model_type\" [number]=\"index + 1\" (canceled)=\"trackRemoved(track)\">\n            <button mat-icon-button cdkDragHandle type=\"button\">\n                <mat-icon svgIcon=\"drag-handle\"></mat-icon>\n            </button>\n        </track-form>\n        <track-form [albumForm]=\"form\" [uploadQueueItem]=\"track\" *ngIf=\"!track.model_type\" [number]=\"index + 1\" (canceled)=\"trackRemoved(track)\">\n            <button mat-icon-button cdkDragHandle type=\"button\">\n                <mat-icon svgIcon=\"drag-handle\"></mat-icon>\n            </button>\n        </track-form>\n    </li>\n</ul>\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    QueryList,\n    ViewChildren,\n} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {UploadQueueService} from '@common/uploads/upload-queue/upload-queue.service';\nimport {UploadQueueItem} from '@common/uploads/upload-queue/upload-queue-item';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\nimport {Albums} from '../../web-player/albums/albums.service';\nimport {\n    TrackFormComponent,\n    TrackUploadResponse,\n} from '../track-form/track-form.component';\nimport {Album} from '../../models/Album';\nimport {BehaviorSubject} from 'rxjs';\nimport {finalize, map} from 'rxjs/operators';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {ConfirmModalComponent} from '@common/core/ui/confirm-modal/confirm-modal.component';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {AudioUploadValidator} from '../../web-player/audio-upload-validator';\nimport {Track} from '../../models/Track';\nimport {UploadedFile} from '@common/uploads/uploaded-file';\nimport {\n    UploadInputConfig,\n    UploadInputTypes,\n} from '@common/uploads/upload-input-config';\nimport {Settings} from '@common/core/config/settings.service';\nimport {scrollInvalidInputIntoView} from '@common/core/utils/scroll-invalid-input-into-view';\nimport {UploadApiConfig} from '@common/uploads/types/upload-api-config';\nimport {Search} from '../../web-player/search/search.service';\nimport {GENRE_MODEL} from '../../models/Genre';\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\nimport {AppCurrentUser} from '../../app-current-user';\nimport {TAG_MODEL} from '@common/core/types/models/Tag';\nimport {Artist} from '../../models/Artist';\nimport {Router} from '@angular/router';\nimport {WaveformGenerator} from '../../web-player/tracks/waveform/waveform-generator';\n\n@Component({\n    selector: 'album-form',\n    templateUrl: './album-form.component.html',\n    styleUrls: ['./album-form.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AlbumFormComponent implements OnInit {\n    public uploadButtonConfig: UploadInputConfig = {\n        multiple: true,\n        types: [UploadInputTypes.audio, UploadInputTypes.video],\n    };\n    public insideAdmin: boolean;\n    // album that is being edited\n    @Input() album: Album;\n    @Input() artist: Artist;\n    @Input() confirmCancel = true;\n    @Output() canceled = new EventEmitter();\n    @Output() saved = new EventEmitter<Album>();\n    @ViewChildren(TrackFormComponent) trackForms: QueryList<TrackFormComponent>;\n\n    public errors: {[K in keyof Partial<Album>]: string} = {};\n    public loading$ = new BehaviorSubject(false);\n    public allTracks$ = new BehaviorSubject<(UploadQueueItem | Track)[]>([]);\n\n    public form = this.fb.group({\n        name: [''],\n        image: [''],\n        artists: [[]],\n        release_date: [new Date().toISOString().slice(0, 10)],\n        description: [''],\n        spotify_id: [''],\n        tags: [[]],\n        genres: [[]],\n    });\n\n    constructor(\n        private fb: FormBuilder,\n        public uploadQueue: UploadQueueService,\n        private albums: Albums,\n        private cd: ChangeDetectorRef,\n        public currentUser: AppCurrentUser,\n        private modal: Modal,\n        private toast: Toast,\n        private audioValidator: AudioUploadValidator,\n        public settings: Settings,\n        private search: Search,\n        private router: Router,\n        private waveform: WaveformGenerator\n    ) {}\n\n    ngOnInit() {\n        this.insideAdmin = this.router.url.includes('admin');\n        this.allTracks$ = new BehaviorSubject([\n            ...(this.album ? this.album.tracks : []),\n            ...this.onlyValidUploads(this.uploadQueue.uploads$.value),\n        ]);\n        this.uploadQueue.uploadsAdded$.subscribe(uploads => {\n            this.allTracks$.next([\n                ...this.allTracks$.value,\n                ...this.onlyValidUploads(uploads),\n            ]);\n        });\n\n        // if we are editing an album, hydrate the form\n        if (this.album) {\n            const value = {\n                ...this.album,\n                tags: this.album.tags.map(t => t.name),\n                genres: this.album.genres.map(g => g.display_name || g.name),\n            };\n            this.form.patchValue(value);\n        } else if (this.artist) {\n            this.form.get('artists').setValue([this.artist]);\n            // set album artist as primary artist of current user\n        } else if (!this.currentUser.canAttachMusicToAnyArtist()) {\n            this.form\n                .get('artists')\n                .setValue([\n                    this.currentUser.get('artists')[0] ||\n                        this.currentUser.artistPlaceholder(),\n                ]);\n        }\n    }\n\n    private onlyValidUploads(uploads: UploadQueueItem[]) {\n        return uploads.filter(upload => !upload.error$.value);\n    }\n\n    public reorderTracks(e: CdkDragDrop<never>) {\n        const sortedTracks = this.allTracks$.value;\n        moveItemInArray(sortedTracks, e.previousIndex, e.currentIndex);\n        this.allTracks$.next(sortedTracks);\n    }\n\n    public submit() {\n        if (this.trackForms.some(f => f.isUploading())) {\n            this.toast.open(\n                'Some tracks are still uploading or failed to upload.'\n            );\n            return;\n        }\n\n        this.loading$.next(true);\n\n        const payload = {\n            ...this.form.value,\n            tracks: this.trackForms.map(f => f.getPayload()),\n        };\n        payload.artists = payload.artists.map(a =>\n            typeof a !== 'number' ? a.id : a\n        );\n\n        const request = this.album\n            ? this.albums.update(this.album.id, payload)\n            : this.albums.create(payload);\n\n        request.pipe(finalize(() => this.loading$.next(false))).subscribe(\n            response => {\n                this.form.markAsPristine();\n                this.trackForms.forEach(tf => tf.form.markAsPristine());\n                this.toast.open('Album saved.');\n                this.uploadQueue.reset();\n                this.saved.emit(response.album);\n            },\n            (errResponse: BackendErrorResponse) => {\n                this.errors = errResponse.errors;\n                scrollInvalidInputIntoView(this.errors, 'track-form');\n                this.cd.markForCheck();\n            }\n        );\n    }\n\n    public maybeCancel() {\n        if (!this.confirmCancel) {\n            this.canceled.emit();\n            return;\n        }\n        this.modal\n            .show(ConfirmModalComponent, {\n                title: 'Delete Album',\n                body: 'Are you sure you want to cancel all uploads and delete this album?',\n                ok: 'Delete',\n            })\n            .beforeClosed()\n            .subscribe(confirmed => {\n                if (confirmed) {\n                    this.form.reset();\n                    this.uploadQueue.reset();\n                    this.canceled.emit();\n                }\n            });\n    }\n\n    public uploadFiles(uploadedFiles: UploadedFile[]) {\n        const params = {\n            uri: 'uploads',\n            httpParams: {\n                autoMatchAlbum: false,\n                diskPrefix: 'track_media',\n                disk: 'public',\n            },\n            validator: this.audioValidator,\n        } as UploadApiConfig;\n        this.uploadQueue.start(uploadedFiles, params).subscribe(\n            (response: TrackUploadResponse) => {\n                const queueItem = this.uploadQueue.find(response.queueItemId);\n                const trackForm = this.trackForms.find(\n                    tf => tf.uploadQueueItem?.id === response.queueItemId\n                ).form;\n                this.waveform\n                    .generate(queueItem.uploadedFile.native)\n                    .then(waveData => {\n                        trackForm.patchValue({waveData});\n                        queueItem.finishProcessing();\n                    });\n                trackForm.markAsDirty();\n            },\n            () => this.toast.open('Could not upload tracks.')\n        );\n    }\n\n    public trackRemoved(track: UploadQueueItem | Track) {\n        const newTracks = this.allTracks$.value.filter(t => t.id !== track.id);\n        this.allTracks$.next(newTracks);\n    }\n\n    public trackByFn = (i: number, upload: UploadQueueItem | Track) =>\n        upload.id;\n\n    public suggestTagFn = (query: string) => {\n        return this.search\n            .media(query, {types: [TAG_MODEL], limit: 5})\n            .pipe(map(response => response.results.tags.map(tag => tag.name)));\n    };\n\n    public suggestGenreFn = (query: string) => {\n        return this.search\n            .media(query, {types: [GENRE_MODEL], limit: 5})\n            .pipe(\n                map(response =>\n                    response.results.genres.map(genre => genre.name)\n                )\n            );\n    };\n}\n","import {ChangeDetectionStrategy, Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Album} from '../../../models/Album';\nimport {UploadQueueService} from '@common/uploads/upload-queue/upload-queue.service';\nimport {ComponentCanDeactivate} from '@common/guards/pending-changes/component-can-deactivate';\nimport {AlbumFormComponent} from '../../../uploading/album-form/album-form.component';\nimport {Settings} from '@common/core/config/settings.service';\nimport {WebPlayerUrls} from '../../../web-player/web-player-urls.service';\nimport {Artist} from '../../../models/Artist';\n\n@Component({\n    selector: 'crupdate-album-page',\n    templateUrl: './crupdate-album-page.component.html',\n    styleUrls: ['./crupdate-album-page.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [UploadQueueService],\n})\nexport class CrupdateAlbumPageComponent implements OnInit, ComponentCanDeactivate {\n    @ViewChild(AlbumFormComponent, {static: true}) albumForm: AlbumFormComponent;\n    public album: Album;\n    public artist: Artist;\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        public settings: Settings,\n        public urls: WebPlayerUrls,\n    ) {}\n\n    ngOnInit() {\n        this.route.data.subscribe(data => {\n            if (data.api) {\n                this.album = data.api.album;\n            }\n        });\n        this.route.queryParams.subscribe(params => {\n            if (params.artist) {\n                this.artist = JSON.parse(atob(params.artist));\n            }\n        });\n    }\n\n    public toAlbumsPage() {\n        if (this.router.url.includes('admin')) {\n            if (this.artist) {\n                this.router.navigate(this.urls.editArtist(this.artist.id, true));\n            } else {\n                this.router.navigate(['/admin/albums']);\n            }\n        } else {\n            this.router.navigate(['/']);\n        }\n    }\n\n    public canDeactivate() {\n        if (this.albumForm.form.dirty) {\n            return false;\n        } else if (this.albumForm.trackForms.some(tf => tf.form.dirty)) {\n            return false;\n        }\n        return true;\n    }\n}\n","<album-form [album]=\"album\" [artist]=\"artist\" class=\"material-panel\" (canceled)=\"toAlbumsPage()\" [confirmCancel]=\"false\" (saved)=\"toAlbumsPage()\"></album-form>\n","import { CanDeactivate } from '@angular/router';\nimport {ComponentCanDeactivate} from '@common/guards/pending-changes/component-can-deactivate';\nimport {Observable} from 'rxjs';\nimport {Injectable} from '@angular/core';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {ConfirmModalComponent} from '@common/core/ui/confirm-modal/confirm-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PendingChangesGuard implements CanDeactivate<ComponentCanDeactivate> {\n    constructor(private modal: Modal) {}\n\n    canDeactivate(component: ComponentCanDeactivate): boolean | Observable<boolean> {\n        if (component.canDeactivate()) {\n            return true;\n        } else {\n            return this.modal.show(ConfirmModalComponent, {\n                title: 'Unsaved Changes',\n                body:  'You have unsaved changes. Do you want to discard them?',\n                ok:    'Discard'\n            }).beforeClosed();\n        }\n    }\n}\n","import {ChangeDetectionStrategy, Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Track} from '../../../models/Track';\nimport {ComponentCanDeactivate} from '@common/guards/pending-changes/component-can-deactivate';\nimport {AlbumFormComponent} from '../../../uploading/album-form/album-form.component';\nimport {TrackFormComponent} from '../../../uploading/track-form/track-form.component';\nimport {Settings} from '@common/core/config/settings.service';\n\n@Component({\n    selector: 'crupdate-track-page',\n    templateUrl: './crupdate-track-page.component.html',\n    styleUrls: ['./crupdate-track-page.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CrupdateTrackPageComponent implements OnInit, ComponentCanDeactivate {\n    @ViewChild(TrackFormComponent, {static: true}) trackForm: AlbumFormComponent;\n    public track: Track;\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        public settings: Settings,\n    ) {}\n\n    ngOnInit() {\n        this.route.data.subscribe(data => {\n            if (data.api) {\n                this.track = data.api.track;\n            }\n        });\n    }\n\n    public toTracksPage() {\n        if (this.insideAdmin()) {\n            this.router.navigate(['/admin/tracks']);\n        } else {\n            this.router.navigate(['/']);\n        }\n    }\n\n    public canDeactivate() {\n        return !this.trackForm.form.dirty;\n    }\n\n    public insideAdmin(): boolean {\n        return this.router.url.includes('admin');\n    }\n}\n","<track-form [track]=\"track\" class=\"material-panel\" (canceled)=\"toTracksPage()\" (saved)=\"toTracksPage()\"></track-form>\n","import { UploadedFile } from '../uploaded-file';\n\nexport async function readUploadedFolders(entries: WebKitEntry[]): Promise<UploadedFile[]> {\n    let files = [];\n\n    for (const key in entries) {\n        const entry = entries[key];\n\n        if ( ! entry.isDirectory) {\n            files.push(await transformFileEntry(entry as WebKitFileEntry));\n        } else {\n            files = files.concat(await readDirRecursive(entry as WebKitDirectoryEntry));\n        }\n    }\n\n    return files;\n}\n\nasync function readDirRecursive(entry: WebKitDirectoryEntry, files = []) {\n    const entries = await readEntries(entry);\n\n    for (const key in entries) {\n        const childEntry = entries[key];\n\n        if (childEntry.isDirectory) {\n            await readDirRecursive(childEntry as WebKitDirectoryEntry, files);\n        } else {\n            files.push(await transformFileEntry(childEntry as WebKitFileEntry));\n        }\n    }\n\n    return files;\n}\n\nfunction readEntries(dir: WebKitDirectoryEntry): Promise<WebKitEntry[]> {\n    return new Promise(resolve => {\n       readEntriesRecursive(dir.createReader(), resolve);\n    });\n}\n\nfunction readEntriesRecursive(reader: WebKitDirectoryReader, resolve, allEntries: WebKitEntry[] = []) {\n    reader.readEntries(entries => {\n        if (entries.length) {\n            allEntries = allEntries.concat(entries);\n            readEntriesRecursive(reader, resolve, allEntries);\n        } else {\n            resolve(allEntries);\n        }\n    });\n}\n\nfunction transformFileEntry(entry: WebKitFileEntry) {\n    return new Promise(resolve => {\n        entry.file((file: any) => {\n            resolve(new UploadedFile(file as File, entry.fullPath));\n        });\n    });\n}\n","import { Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { openUploadWindow } from '../utils/open-upload-window';\nimport { UploadedFile } from '../uploaded-file';\nimport { readUploadedFolders } from '../utils/read-uploaded-folders';\nimport { UploadInputConfig } from '@common/uploads/upload-input-config';\n\n@Directive({\n    selector: '[fileDropzone]',\n})\nexport class UploadDropzoneDirective implements OnInit, OnDestroy {\n    @Input() disableDropzoneClick = false;\n    @Input() disableDropzone = false;\n    @Input() clickButton: ElementRef;\n    @Input('fileDropzone') uploadConfig: UploadInputConfig = {};\n    @Output() filesDropped: EventEmitter<UploadedFile[]> = new EventEmitter();\n\n    constructor(protected el: ElementRef) {}\n\n    ngOnInit() {\n        const el = this.el.nativeElement;\n        el.addEventListener('dragenter', (e) => this.handleDragEnter(e));\n        el.addEventListener('dragover', (e) => this.handleDragOver(e));\n        el.addEventListener('dragleave', (e) => this.handleDragLeave(e));\n        el.addEventListener('drop', (e) => this.handleDrop(e));\n\n        if ( ! this.disableDropzoneClick) {\n            const trigger = this.clickButton ? this.clickButton.nativeElement : el;\n            trigger.addEventListener('click', () => this.handleClick());\n        }\n    }\n\n    ngOnDestroy() {\n        this.removeClassesFromDropzone();\n    }\n\n    protected handleClick() {\n        if (this.disableDropzone) return;\n        openUploadWindow(this.uploadConfig).then(files => {\n            this.emitUploadEvent(files);\n        });\n    }\n\n    public handleDragEnter(e) {\n        if (this.dropzoneDisabled(e)) return;\n        this.el.nativeElement.classList.add('file-over-dropzone');\n    }\n\n    public handleDragOver(e) {\n        if (e.preventDefault) e.preventDefault();\n        e.dataTransfer.dropEffect = this.dropzoneDisabled(e) ? 'none' : 'move';\n        return false;\n    }\n\n    public handleDragLeave(e: MouseEvent) {\n        const newEl = document.elementFromPoint(e.clientX, e.clientY);\n        if (this.el.nativeElement.contains(newEl)) return;\n        this.removeClassesFromDropzone();\n    }\n\n    public async handleDrop(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        this.removeClassesFromDropzone();\n        if (this.dropzoneDisabled(e) || !e.dataTransfer.items) return;\n\n        const items = Array.from(e.dataTransfer.items)\n            .filter((item: DataTransferItem) => item.kind === 'file')\n            .map((item: DataTransferItem) => {\n                return item.webkitGetAsEntry();\n            });\n\n        if (items.length) {\n            this.emitUploadEvent(await readUploadedFolders(items));\n        }\n    }\n\n    protected emitUploadEvent(files: UploadedFile[]) {\n        this.filesDropped.emit(files);\n    }\n\n    protected removeClassesFromDropzone() {\n        this.el.nativeElement.classList.remove('file-over-dropzone');\n    }\n\n    protected dropzoneDisabled(e: DragEvent) {\n        const hasFiles = e.dataTransfer.types.find(type => type.toLowerCase() === 'files');\n        return this.disableDropzone || ! hasFiles;\n    }\n}\n","<div class=\"media-image-container\" [class.show-album-border]=\"!isTrack(media)\">\n    <media-image [media]=\"media\"></media-image>\n    <img class=\"album-border-image\" [src]=\"settings.getAssetUrl('images/album-border.png')\" alt=\"album border image\">\n</div>\n<div class=\"middle-column\">\n    <div class=\"artist-name\">{{media.artists[0].name}}</div>\n    <div class=\"track-name\">{{media.name}}</div>\n    <div class=\"genre-row\">\n        <mat-chip class=\"track-genre\" *ngIf=\"media.genres.length\">{{media.genres[0].name}}</mat-chip>\n    </div>\n    <div class=\"message\">\n        <span trans>Upload complete.</span> <a [routerLink]=\"mediaLink()\" trans> View now.</a>\n    </div>\n</div>\n<div class=\"right-column\">\n    <div class=\"title\" trans>Share your new {{isTrack(media) ? 'track' : 'album' }}</div>\n    <div class=\"share-icons\">\n        <button mat-icon-button (click)=\"shareUsing('facebook')\">\n            <img src=\"{{settings.getAssetUrl('images/social-icons/facebook.png')}}\" alt=\"facebook-icon\">\n        </button>\n        <button mat-icon-button (click)=\"shareUsing('twitter')\">\n            <img src=\"{{settings.getAssetUrl('images/social-icons/twitter.png')}}\" alt=\"twitter-icon\">\n        </button>\n        <button mat-icon-button (click)=\"shareUsing('tumblr')\">\n            <img src=\"{{settings.getAssetUrl('images/social-icons/tumblr.png')}}\" alt=\"tumblr-icon\">\n        </button>\n        <button mat-icon-button (click)=\"shareUsing('blogger')\">\n            <img src=\"{{settings.getAssetUrl('images/social-icons/bloggr.png')}}\" alt=\"blogger-icon\">\n        </button>\n    </div>\n    <div class=\"track-link-input input-container\">\n        <label for=\"media-item-link\" class=\"hidden\" trans>Media link</label>\n        <input #trackLinkInput id=\"media-item-link\" type=\"text\" readonly [value]=\"mediaUrl()\" (click)=\"$event.target.select()\">\n    </div>\n</div>\n","import {Component, OnInit, ChangeDetectionStrategy, Input, ViewChild, ElementRef} from '@angular/core';\nimport {Track, TRACK_MODEL} from '../../models/Track';\nimport {ShareableNetworks, shareLinkSocially} from '@common/core/utils/share-link-socially';\nimport {Settings} from '@common/core/config/settings.service';\nimport {WebPlayerUrls} from '../../web-player/web-player-urls.service';\nimport {Album} from '../../models/Album';\n\n@Component({\n    selector: 'uploaded-media-preview',\n    templateUrl: './uploaded-media-preview.component.html',\n    styleUrls: ['./uploaded-media-preview.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'class': 'material-panel'},\n})\nexport class UploadedMediaPreviewComponent implements OnInit {\n    @ViewChild('trackLinkInput', {static: true}) trackLinkInput: ElementRef<HTMLInputElement>;\n    @Input() media: Track|Album;\n\n    constructor(\n        public settings: Settings,\n        public urls: WebPlayerUrls\n    ) {}\n\n    ngOnInit() {\n        setTimeout(() => {\n            this.trackLinkInput.nativeElement.focus();\n            this.trackLinkInput.nativeElement.select();\n        });\n    }\n\n    public mediaLink() {\n        if (this.isTrack(this.media)) {\n            return this.urls.track(this.media);\n        } else {\n            return this.urls.album(this.media);\n        }\n    }\n\n    public mediaUrl() {\n        return this.urls.routerLinkToUrl(this.mediaLink());\n    }\n\n    public shareUsing(network: ShareableNetworks) {\n        shareLinkSocially(network, this.mediaUrl());\n    }\n\n    public isTrack(media: Track|Album): media is Track {\n        return media.model_type === TRACK_MODEL;\n    }\n}\n","<div\n    class=\"dropzone\"\n    [fileDropzone]=\"uploadConfig\"\n    [clickButton]=\"clickButton\"\n    (filesDropped)=\"uploadTracks($event)\"\n>\n    <div class=\"title\" trans>Drag and drop your tracks, videos & albums here.</div>\n    <div class=\"action-button\">\n        <button\n            mat-flat-button\n            color=\"accent\"\n            type=\"button\"\n            class=\"upload-button\"\n            #clickMatButton\n            trans\n        >\n            or choose files to upload\n        </button>\n    </div>\n    <div class=\"setting-toggle-container\" *ngIf=\"uploadQueue.isEmpty()\">\n        <mat-slide-toggle (change)=\"createAlbum$.next($event.checked)\" trans\n            >Make an album when multiple files are selected</mat-slide-toggle\n        >\n    </div>\n</div>\n\n<div\n    class=\"minutes-container\"\n    *ngIf=\"currentUser.getRestrictionValue('tracks.create', 'minutes') as minuteLimit\"\n>\n    <span\n        >You have {{ minuteLimit }} minutes left. Try\n        <a class=\"hover-underline\" routerLink=\"/billing/upgrade\" target=\"_blank\">Pro accounts</a> to\n        get more time and access to advanced features.</span\n    >\n</div>\n\n<div class=\"track-upload-queue\" *ngIf=\"uploadQueue.uploads$ | async as uploads\">\n    <ng-container *ngIf=\"uploads.length\">\n        <album-form\n            class=\"material-panel\"\n            *ngIf=\"createAlbum$ | async; else createTracks\"\n            (saved)=\"addSavedMedia($event)\"\n        ></album-form>\n        <ng-template #createTracks>\n            <ng-container *ngIf=\"errors$ | async as errors\">\n                <div\n                    class=\"track-panel material-panel\"\n                    *ngFor=\"let upload of uploads; trackBy: trackByFn\"\n                >\n                    <track-form\n                        [uploadQueueItem]=\"upload\"\n                        (saved)=\"addSavedMedia($event)\"\n                    ></track-form>\n                </div>\n            </ng-container>\n        </ng-template>\n    </ng-container>\n</div>\n\n<div class=\"saved-tracks\">\n    <uploaded-media-preview\n        [media]=\"media\"\n        *ngFor=\"let media of savedMedia$ | async\"\n    ></uploaded-media-preview>\n</div>\n","import {RouterModule, Routes} from '@angular/router';\nimport {NgModule} from '@angular/core';\nimport {BackstageRequestFormComponent} from './requests/backstage-request-form/backstage-request-form.component';\nimport {BackstageRequestSubmittedComponent} from './requests/backstage-request-submitted/backstage-request-submitted.component';\nimport {BackstageTypeSelectorComponent} from './requests/backstage-type-selector/backstage-type-selector.component';\nimport {CrupdateArtistPageComponent} from './editing/crupdate-artist-page/crupdate-artist-page.component';\nimport {EditArtistPageResolver} from './editing/crupdate-artist-page/crupdate-artist-page-resolver.service';\nimport {CrupdateAlbumPageComponent} from './editing/crupdate-album-page/crupdate-album-page.component';\nimport {PendingChangesGuard} from '@common/guards/pending-changes/pending-changes-guard.service';\nimport {CrupdateTrackPageComponent} from './editing/crupdate-track-page/crupdate-track-page.component';\nimport {TrackPageResolver} from '../web-player/tracks/track-page/track-page-resolver.service';\nimport {UploadPageComponent} from '../uploading/upload-page/upload-page.component';\nimport {CrupdateAlbumPageResolverService} from './editing/crupdate-album-page/crupdate-album-page-resolver.service';\n\nconst routes: Routes = [\n    {\n        path: '',\n        redirectTo: '/',\n        pathMatch: 'full',\n    },\n    {\n        path: 'requests',\n        component: BackstageTypeSelectorComponent,\n    },\n    {\n        path: 'requests/verify-artist',\n        component: BackstageRequestFormComponent,\n    },\n    {\n        path: 'requests/become-artist',\n        component: BackstageRequestFormComponent,\n    },\n    {\n        path: 'requests/claim-artist',\n        component: BackstageRequestFormComponent,\n    },\n    {\n        path: 'requests/:requestId/request-submitted',\n        component: BackstageRequestSubmittedComponent,\n    },\n\n    //\n    {\n        path: 'upload',\n        component: UploadPageComponent,\n    },\n    {\n        path: 'artists/new',\n        component: CrupdateArtistPageComponent,\n    },\n    {\n        path: 'artists/:id/edit',\n        component: CrupdateArtistPageComponent,\n        resolve: {api: EditArtistPageResolver},\n        canDeactivate: [PendingChangesGuard],\n    },\n    {\n        path: 'albums/:id/edit',\n        component: CrupdateAlbumPageComponent,\n        resolve: {api: CrupdateAlbumPageResolverService},\n        canDeactivate: [PendingChangesGuard],\n    },\n    {\n        path: 'albums/new',\n        component: CrupdateAlbumPageComponent,\n        canDeactivate: [PendingChangesGuard],\n    },\n    {\n        path: 'tracks/:id/edit',\n        component: CrupdateTrackPageComponent,\n        resolve: {api: TrackPageResolver},\n        canDeactivate: [PendingChangesGuard],\n    },\n    {\n        path: 'tracks/new',\n        component: CrupdateTrackPageComponent,\n        canDeactivate: [PendingChangesGuard],\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class BackstageRoutingModule {\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    QueryList,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport {Tracks} from '../../web-player/tracks/tracks.service';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {UploadedFile} from '@common/uploads/uploaded-file';\nimport {UploadQueueService} from '@common/uploads/upload-queue/upload-queue.service';\nimport {Settings} from '@common/core/config/settings.service';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {AudioUploadValidator} from '../../web-player/audio-upload-validator';\nimport {BehaviorSubject} from 'rxjs';\nimport {UploadQueueItem} from '@common/uploads/upload-queue/upload-queue-item';\nimport {\n    UploadInputConfig,\n    UploadInputTypes,\n} from '@common/uploads/upload-input-config';\nimport {Track} from '../../models/Track';\nimport {\n    TrackFormComponent,\n    TrackUploadResponse,\n} from '../track-form/track-form.component';\nimport {Album} from '../../models/Album';\nimport {WaveformGenerator} from '../../web-player/tracks/waveform/waveform-generator';\nimport {UploadApiConfig} from '@common/uploads/types/upload-api-config';\nimport {AlbumFormComponent} from '../album-form/album-form.component';\n\n@Component({\n    selector: 'upload-page',\n    templateUrl: './upload-page.component.html',\n    styleUrls: ['./upload-page.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [UploadQueueService],\n})\nexport class UploadPageComponent {\n    @ViewChild('clickMatButton', {read: ElementRef, static: true})\n    clickButton: ElementRef<HTMLButtonElement>;\n    @ViewChildren(TrackFormComponent) trackForms: QueryList<TrackFormComponent>;\n    @ViewChild(AlbumFormComponent) albumForm: AlbumFormComponent;\n    errors$ = new BehaviorSubject<{\n        [key: string]: {[K in keyof Partial<Track>]: string};\n    }>({});\n    uploadConfig: UploadInputConfig = {\n        types: [UploadInputTypes.video, UploadInputTypes.audio],\n        multiple: true,\n    };\n    savedMedia$ = new BehaviorSubject<(Track | Album)[]>([]);\n    createAlbum$ = new BehaviorSubject<boolean>(false);\n\n    constructor(\n        private track: Tracks,\n        public currentUser: CurrentUser,\n        public uploadQueue: UploadQueueService,\n        public settings: Settings,\n        protected tracks: Tracks,\n        private toast: Toast,\n        private audioValidator: AudioUploadValidator,\n        private waveGenerator: WaveformGenerator\n    ) {}\n\n    uploadTracks(files: UploadedFile[]) {\n        const params = {\n            uri: 'uploads',\n            httpParams: {\n                diskPrefix: 'track_media',\n                disk: 'public',\n            },\n            validator: this.audioValidator,\n            willProcessFiles: true,\n            autoMatchAlbum: !this.createAlbum$.value,\n        } as UploadApiConfig;\n        this.uploadQueue\n            .start(files, params)\n            .subscribe((response: TrackUploadResponse) => {\n                const queueItem = this.uploadQueue.find(response.queueItemId);\n                this.waveGenerator\n                    .generate(queueItem.uploadedFile.native)\n                    .then(waveData => {\n                        queueItem.customData = {waveData};\n                        queueItem.finishProcessing();\n                    });\n\n                if (\n                    this.albumForm &&\n                    !this.albumForm.form.get('name').value &&\n                    response.metadata.album_name\n                ) {\n                    this.albumForm.form.patchValue({\n                        name: response.metadata.album_name,\n                    });\n                }\n            });\n    }\n\n    addSavedMedia(newMedia: Track | Album) {\n        this.savedMedia$.next([...this.savedMedia$.value, newMedia]);\n    }\n\n    trackByFn = (i: number, upload: UploadQueueItem) => upload.id;\n}\n","import {Injectable} from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    Resolve,\n    Router,\n    RouterStateSnapshot\n} from '@angular/router';\nimport {catchError, mergeMap} from 'rxjs/operators';\nimport {EMPTY, of} from 'rxjs';\nimport {BackendResponse} from '@common/core/types/backend-response';\nimport {Albums} from '../../../web-player/albums/albums.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CrupdateAlbumPageResolverService implements Resolve<any> {\n\n    constructor(\n        private albums: Albums,\n        private router: Router\n    ) {}\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): BackendResponse<any> {\n        const params = {\n            with: ['tags', 'genres', 'artists', 'fullTracks'],\n            albumsPerPage: 50,\n            forEditing: true,\n        };\n        const id = +route.paramMap.get('id');\n        return this.albums.get(id, params).pipe(\n            catchError(() => {\n                this.router.navigate(['/']);\n                return EMPTY;\n            }),\n            mergeMap(response => {\n                if (response.album) {\n                    return of(response);\n                } else {\n                    this.router.navigate(['/']);\n                    return EMPTY;\n                }\n            })\n        );\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SelectArtistControlComponent} from './select-artist-control.component';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MediaImageModule} from '../../web-player/shared/media-image/media-image.module';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatIconModule} from '@angular/material/icon';\nimport {LoadingIndicatorModule} from '@common/core/ui/loading-indicator/loading-indicator.module';\nimport {MatButtonModule} from '@angular/material/button';\n\n\n@NgModule({\n    declarations: [\n        SelectArtistControlComponent,\n    ],\n    exports: [\n        SelectArtistControlComponent,\n    ],\n    imports: [\n        CommonModule,\n\n        MatMenuModule,\n        MediaImageModule,\n        TranslationsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatIconModule,\n        LoadingIndicatorModule,\n        MatButtonModule,\n    ]\n})\nexport class SelectArtistControlModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {UploadPageComponent} from './upload-page/upload-page.component';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {UploadsModule} from '@common/uploads/uploads.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {TrackFormComponent} from './track-form/track-form.component';\nimport {UploadImageControlModule} from '@common/shared/form-controls/upload-image-control/upload-image-control.module';\nimport {AlbumFormComponent} from './album-form/album-form.component';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {TrackUploadHeaderComponent} from './track-upload-header/track-upload-header.component';\nimport {TrackArtistControlComponent} from './track-form/track-artist-control/track-artist-control.component';\nimport {AlbumControlComponent} from './track-form/album-control/album-control.component';\nimport {LoadingIndicatorModule} from '@common/core/ui/loading-indicator/loading-indicator.module';\nimport {MediaImageModule} from '../web-player/shared/media-image/media-image.module';\nimport {RouterModule} from '@angular/router';\nimport {UploadedMediaPreviewComponent} from './uploaded-media-preview/uploaded-media-preview.component';\nimport {UploadingHostComponent} from './uploading-host/uploading-host.component';\nimport {ChipsModule} from '@common/core/ui/chips/chips.module';\nimport {SelectArtistControlModule} from '../shared/select-artist-control/select-artist-control.module';\nimport {ArtistsLinksListModule} from '../web-player/artists/artists-links-list/artists-links-list.module';\n\n@NgModule({\n    declarations: [\n        UploadPageComponent,\n        TrackFormComponent,\n        AlbumFormComponent,\n        TrackUploadHeaderComponent,\n        TrackArtistControlComponent,\n        AlbumControlComponent,\n        UploadedMediaPreviewComponent,\n        UploadingHostComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule,\n        MediaImageModule,\n        SelectArtistControlModule,\n\n        MatIconModule,\n        MatProgressBarModule,\n        TranslationsModule,\n        UploadsModule,\n        ReactiveFormsModule,\n        FormsModule,\n        MatButtonModule,\n        ChipsModule,\n        MatChipsModule,\n        MatSlideToggleModule,\n        MatTooltipModule,\n        UploadImageControlModule,\n        DragDropModule,\n        MatAutocompleteModule,\n        MatMenuModule,\n        LoadingIndicatorModule,\n        ArtistsLinksListModule,\n    ],\n    exports: [\n        TrackFormComponent,\n        AlbumFormComponent,\n    ]\n})\nexport class UploadingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BackstageRoutingModule} from './backstage-routing.module';\nimport {MaterialNavbarModule} from '@common/core/ui/material-navbar/material-navbar.module';\nimport {MatButtonModule} from '@angular/material/button';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {UploadImageControlModule} from '@common/shared/form-controls/upload-image-control/upload-image-control.module';\nimport {BackstageRequestFormComponent} from './requests/backstage-request-form/backstage-request-form.component';\nimport {BackstageRequestSubmittedComponent} from './requests/backstage-request-submitted/backstage-request-submitted.component';\nimport {BackstageTypeSelectorComponent} from './requests/backstage-type-selector/backstage-type-selector.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {UploadsModule} from '@common/uploads/uploads.module';\nimport {FormatPipesModule} from '@common/core/ui/format-pipes/format-pipes.module';\nimport {SelectArtistControlModule} from '../shared/select-artist-control/select-artist-control.module';\nimport {CrupdateArtistPageComponent} from './editing/crupdate-artist-page/crupdate-artist-page.component';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {ChipsModule} from '@common/core/ui/chips/chips.module';\nimport {ArtistAlbumsTableComponent} from './editing/crupdate-artist-page/artist-albums-table/artist-albums-table.component';\nimport {DatatableModule} from '@common/datatable/datatable.module';\nimport {MediaImageModule} from '../web-player/shared/media-image/media-image.module';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {ProfileLinksFormControlModule} from '../web-player/shared/profile-links-form-control/profile-links-form-control.module';\nimport {CrupdateTrackPageComponent} from './editing/crupdate-track-page/crupdate-track-page.component';\nimport {CrupdateAlbumPageComponent} from './editing/crupdate-album-page/crupdate-album-page.component';\nimport {UploadingModule} from '../uploading/uploading.module';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {LoadingIndicatorModule} from '@common/core/ui/loading-indicator/loading-indicator.module';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\n\n@NgModule({\n    declarations: [\n        BackstageRequestFormComponent,\n        BackstageRequestSubmittedComponent,\n        BackstageTypeSelectorComponent,\n\n        //\n        CrupdateArtistPageComponent,\n        ArtistAlbumsTableComponent,\n        CrupdateAlbumPageComponent,\n        CrupdateTrackPageComponent,\n    ],\n    imports: [\n        CommonModule,\n        BackstageRoutingModule,\n        UploadingModule,\n        ReactiveFormsModule,\n        FormsModule,\n        SelectArtistControlModule,\n        TranslationsModule,\n        MaterialNavbarModule,\n        MatButtonModule,\n        MatIconModule,\n        MatSlideToggleModule,\n        UploadsModule,\n        UploadImageControlModule,\n        FormatPipesModule,\n        ProfileLinksFormControlModule,\n        LoadingIndicatorModule,\n\n        //\n        MatDialogModule,\n        MatTabsModule,\n        ChipsModule,\n        DatatableModule,\n        MediaImageModule,\n        MatTooltipModule,\n    ]\n})\nexport class BackstageModule {\n}\n","import {Injectable} from '@angular/core';\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\nimport {BackendResponse} from '@common/core/types/backend-response';\nimport {BackstageRequest} from '../../models/backstage-request';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BackstagRequestService {\n\n    constructor(private http: AppHttpClient) {\n    }\n\n    public getRequest(requestId: number): BackendResponse<{request: BackstageRequest}> {\n        return this.http.get(`backstage-request/${requestId}`);\n    }\n\n    public submitRequest(params: object): BackendResponse<{request: {id: number}}> {\n        return this.http.post('backstage-request', params);\n    }\n\n    public approveRequest(requestId: number, params: {markArtistAsVerified?: boolean, notes?: string} = {}) {\n        return this.http.post(`backstage-request/${requestId}/approve`, params);\n    }\n\n    public denyRequest(requestId: number, params: {notes?: string} = {}) {\n        return this.http.post(`backstage-request/${requestId}/deny`, params);\n    }\n\n    public deleteRequests(requestIds: number[]): BackendResponse<void> {\n        return this.http.delete(`backstage-request/${requestIds.join(',')}`);\n    }\n}\n","export enum BackstageRequestType {\n    becomeArtist = 'become-artist',\n    verifyArtist = 'verify-artist',\n    claimArtist = 'claim-artist',\n}\n","<mat-chip-list #chipList [selectable]=\"false\">\n    <mat-chip\n        *ngFor=\"let item of items$ | async; index as i\"\n        [selectable]=\"false\"\n        [removable]=\"!selectMode\"\n        (removed)=\"remove(i)\"\n    >\n        {{displayChipValue(item)}}\n        <mat-icon matChipRemove svgIcon=\"cancel\"></mat-icon>\n    </mat-chip>\n    <input [placeholder]=\"placeholder | trans\"\n           *ngIf=\"!selectMode\"\n           #inputEl\n           [type]=\"type\"\n           class=\"mat-chip-input mat-input-element\"\n           [matChipInputFor]=\"chipList\"\n           [matChipInputAddOnBlur]=\"true\"\n           [matAutocomplete]=\"auto\"\n           [matAutocompleteConnectedTo]=\"{elementRef: el}\"\n           [formControl]=\"formControl\"\n           (matChipInputTokenEnd)=\"addFromChipInput($event.value)\" />\n</mat-chip-list>\n\n<mat-autocomplete class=\"chip-input-autocomplete-panel\" #auto=\"matAutocomplete\" (optionSelected)=\"addFromAutocomplete($event.option.value)\" [autoActiveFirstOption]=\"true\">\n    <mat-option *ngFor=\"let value of suggestedValues$ | async\" [value]=\"value\">{{displayChipValue(value)}}</mat-option>\n</mat-autocomplete>\n\n<ng-template #selectModeTemplate let-suggestions=\"suggestions\">\n    <mat-option *ngFor=\"let value of suggestions\" [value]=\"value\">{{displayChipValue(value)}}</mat-option>\n</ng-template>\n","import {\n    AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, HostBinding, Input, OnInit, TemplateRef, ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {BehaviorSubject, Observable, of} from 'rxjs';\nimport {MatAutocomplete} from '@angular/material/autocomplete';\nimport {catchError, debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\nimport {Model} from '../../../types/models/model';\n\ntype ChipValue = 'string' | Model;\n\n@Component({\n    selector: 'chip-input',\n    templateUrl: './chip-input.component.html',\n    styleUrls: ['./chip-input.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: ChipInputComponent,\n        multi: true,\n    }]\n})\nexport class ChipInputComponent implements ControlValueAccessor, OnInit, AfterViewInit {\n    @Input() placeholder: string;\n    @Input() type = 'text';\n    @Input() emailsInput = false;\n    @Input() suggestFn: (query: string) => Observable<ChipValue[]>;\n    @Input() @HostBinding('class.select-mode') selectMode = false;\n    @ViewChild('auto') matAutocomplete: MatAutocomplete;\n    @ViewChild('inputEl') inputEl: ElementRef<HTMLInputElement>;\n    @ViewChild('selectModeTemplate') selectModeTemplate: TemplateRef<any>;\n\n    public formControl = new FormControl();\n\n    public propagateChange: (items: ChipValue[]) => void;\n    public items$ = new BehaviorSubject<ChipValue[]>([]);\n    public suggestedValues$ = new BehaviorSubject<ChipValue[]>([]);\n    @Input() set suggestedValues(values: ChipValue[]) {\n        this.suggestedValues$.next(values);\n    }\n\n    constructor(\n        public el: ElementRef<HTMLElement>,\n    ) {}\n\n    ngOnInit() {\n        if (this.suggestFn) {\n            this.bindToSearchControl();\n        }\n        if (this.selectMode) {\n           // TODO: implement\n        }\n    }\n\n    ngAfterViewInit() {\n        if (this.emailsInput) {\n            this.parseEmailsOnPaste();\n        }\n    }\n\n    public remove(index: number) {\n        const items = [...this.items$.value];\n        items.splice(index, 1);\n        this.items$.next(items);\n        this.propagateChange(this.items$.value);\n    }\n\n    public addFromChipInput(value: ChipValue, propagate = true) {\n        if (value && !this.matAutocomplete.isOpen && !this.selectMode) {\n            this.add(value, propagate);\n        }\n    }\n\n    public addFromAutocomplete(value: ChipValue, propagate = true) {\n        this.add(value, propagate);\n    }\n\n    private add(value: ChipValue, propagate = true) {\n        value = (typeof value === 'string' ? value.trim() : value) as ChipValue;\n        const duplicate = this.findValueIndex(value) > -1;\n        if (value && !duplicate) {\n            this.items$.next([...this.items$.value, value]);\n            if (propagate) {\n                this.propagateChange(this.items$.value);\n            }\n        }\n        if (this.inputEl) {\n            this.inputEl.nativeElement.value = '';\n        }\n        this.formControl.setValue(null);\n        this.suggestedValues$.next([]);\n    }\n\n    private findValueIndex(value: ChipValue) {\n        if (typeof value === 'string') {\n            return this.items$.value.indexOf(value);\n        } else {\n            return this.items$.value.findIndex(v => (v as Model).id === value.id);\n        }\n    }\n\n    public writeValue(value: ChipValue[] = []) {\n        this.items$.next(value || []);\n        // if (value && value.length) {\n        //     value.forEach(item => this.add(item, false));\n        // } else if (this.items$.value.length) {\n        //     while (this.items$.value.length !== 0) {\n        //         this.remove(0);\n        //     }\n        // }\n    }\n\n    public registerOnChange(fn: (items: ChipValue[]) => void) {\n        this.propagateChange = fn;\n    }\n\n    public registerOnTouched() {}\n\n    private bindToSearchControl() {\n        this.formControl.valueChanges.pipe(\n            debounceTime(150),\n            distinctUntilChanged(),\n            switchMap(query => query ? this.suggestFn(query) : of([])),\n            catchError(() => of([])),\n        ).subscribe(values => {\n            const filtered = values.filter(v => this.findValueIndex(v) === -1);\n            this.suggestedValues$.next(filtered);\n        });\n    }\n\n    public displayChipValue(value: ChipValue): string {\n        return typeof value === 'object' ? value.name : value;\n    }\n\n    private parseEmailsOnPaste() {\n        this.inputEl.nativeElement.addEventListener('paste', e => {\n            const paste = (e.clipboardData || window['clipboardData']).getData('text');\n            const emails = paste.match(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi);\n            if (emails) {\n                e.preventDefault();\n                const selection = window.getSelection();\n                if (selection.rangeCount) {\n                    selection.deleteFromDocument();\n                    emails.forEach(email => this.add(email));\n                }\n            }\n        });\n    }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {TitleCasePipe as AngularTitleCasePipe} from '@angular/common';\n\n@Pipe({\n    name: 'titleCase',\n    pure: true,\n})\nexport class TitleCasePipe extends AngularTitleCasePipe implements PipeTransform {\n    transform(value: string): string;\n    transform(value: null|undefined): null;\n    transform(value: string|null|undefined): string|null;\n    transform(value: string | null | undefined): string | null {\n        if ( ! value) {\n            return '';\n        }\n        return super.transform(value.replace('-', ' ').replace('_', ' '));\n    }\n}\n","export function scrollInvalidInputIntoView(errors: {[key: string]: any}, prefix = '') {\n    let firstKey = Object.keys(errors)[0];\n    if (firstKey) {\n        if (prefix) {\n            firstKey = `${prefix}-${firstKey}`;\n        }\n        const node = document.getElementById(firstKey);\n        if (node) {\n            node.scrollIntoView({behavior: 'smooth', block: 'center', inline: 'center'});\n        }\n    }\n}\n","import { ConnectedPosition } from '@angular/cdk/overlay';\n\nexport const LEFT_POSITION: ConnectedPosition[] = [\n    {originX: 'start', originY: 'center', overlayX: 'end', overlayY: 'center', offsetX: 50},\n    {originX: 'end', originY: 'center', overlayX: 'start', overlayY: 'center', offsetX: 50},\n];\n","<header>\n    <mat-icon svgIcon=\"filter-list\"></mat-icon>\n    <span trans>Filters</span>\n</header>\n\n<form class=\"body\" (ngSubmit)=\"close()\">\n    <ng-container *ngTemplateOutlet=\"data.filters\"></ng-container>\n</form>\n\n<footer>\n    <button (click)=\"close()\" type=\"button\" mat-button color=\"accent\" trans>Close</button>\n</footer>\n","import {ChangeDetectionStrategy, Component, ElementRef, Inject, TemplateRef} from '@angular/core';\nimport {OVERLAY_PANEL_DATA} from '../../core/ui/overlay-panel/overlay-panel-data';\nimport {OverlayPanelRef} from '../../core/ui/overlay-panel/overlay-panel-ref';\nimport {matDialogAnimations} from '@angular/material/dialog';\n\n@Component({\n    selector: 'datatable-filters-panel',\n    templateUrl: './datatable-filters-panel.component.html',\n    styleUrls: ['./datatable-filters-panel.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[@dialogContainer]': `'enter'`\n    },\n    animations: [\n        matDialogAnimations.dialogContainer,\n    ]\n})\nexport class DatatableFiltersPanelComponent {\n\n    constructor(\n        @Inject(OVERLAY_PANEL_DATA) public data: {filters: TemplateRef<ElementRef>},\n        private overlayPanelRef: OverlayPanelRef,\n    ) {}\n\n    public close() {\n        this.overlayPanelRef.close();\n    }\n}\n","<mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"datatable.paginator && datatable.paginator.loading$ | async\"></mat-progress-bar>\n<div class=\"left-column\">\n    <div class=\"default-left-content\" *ngIf=\"!showSelectedActions || !numberOfRowsSelected\">\n        <ng-content select=\"[leftContent]\"></ng-content>\n    </div>\n    <div class=\"selected-left-content capitalize\" *ngIf=\"showSelectedActions && numberOfRowsSelected\">\n        {{ ':count :resource selected' | trans:{count: numberOfRowsSelected, resource: pluralResourceName} }}\n    </div>\n</div>\n<div class=\"right-column\">\n    <div class=\"default-right-content\" *ngIf=\"!showSelectedActions || !numberOfRowsSelected\">\n        <ng-container *ngIf=\"filterPanelTemplate\">\n            <mat-chip-list aria-label=\"Active Filters\" class=\"filter-chip-list\">\n                <mat-chip *ngFor=\"let filter of filters$ | async | keyvalue\" [removable]=\"true\" [selectable]=\"false\" (removed)=\"datatable.removeFilter(filter.key)\">\n                    {{filter.key | titleCase | trans}}: {{isModel(filter.value) ? (filter.value.name || filter.value.display_name) : filter.value}}\n                    <mat-icon matChipRemove svgIcon=\"cancel\"></mat-icon>\n                </mat-chip>\n            </mat-chip-list>\n            <button (click)=\"openFiltersPanel()\" class=\"filter-button\" [class.active]=\"filterPanelRef\" #filterButton mat-icon-button>\n                <mat-icon svgIcon=\"filter-list\"></mat-icon>\n            </button>\n        </ng-container>\n        <datatable-header-search-input placeholder=\"Search {{ pluralResourceName }}\"></datatable-header-search-input>\n    </div>\n    <div class=\"selected-right-actions\" *ngIf=\"showSelectedActions && numberOfRowsSelected\">\n        <ng-content select=\"[rightContent]\"></ng-content>\n    </div>\n</div>\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    TemplateRef,\n    ViewChild\n} from '@angular/core';\nimport {DatatableService} from '../datatable.service';\nimport {Model} from '../../core/types/models/model';\nimport {Subscription} from 'rxjs';\nimport {OverlayPanel} from '../../core/ui/overlay-panel/overlay-panel.service';\nimport {LEFT_POSITION} from '../../core/ui/overlay-panel/positions/left-position';\nimport {OverlayPanelRef} from '../../core/ui/overlay-panel/overlay-panel-ref';\nimport {DatatableFiltersPanelComponent} from '../datatable-filters-panel/datatable-filters-panel.component';\nimport {map} from 'rxjs/operators';\nimport {removeNullFromObject} from '../../core/utils/remove-null-from-object';\nimport {DatatableFilterValue} from '../types/datatable-filters';\n\n@Component({\n    selector: 'datatable-header',\n    templateUrl: './datatable-header.component.html',\n    styleUrls: ['./datatable-header.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DatatableHeaderComponent implements OnInit, OnDestroy {\n    @HostBinding('class.rows-selected') public numberOfRowsSelected: number;\n    @ContentChild('tableFilters') filterPanelTemplate: TemplateRef<ElementRef>;\n    @ViewChild('filterButton', { read: ElementRef }) filterButton: ElementRef<HTMLButtonElement>;\n    @Input() pluralResourceName: string;\n    @Input() showSelectedActions = true;\n    private subscriptions: Subscription[] = [];\n    public filterPanelRef: OverlayPanelRef<any>;\n\n    public filters$ = this.datatable.filters$\n        .pipe(map(v => {\n            const filters = removeNullFromObject(v);\n            delete filters.query;\n            return filters;\n        }));\n\n    constructor(\n        public datatable: DatatableService<Model>,\n        private cd: ChangeDetectorRef,\n        private overlayPanel: OverlayPanel,\n    ) {}\n\n    ngOnInit() {\n        // close filter panel when any filter is selected.\n        const filterSub = this.datatable.filters$.subscribe(() => {\n            this.filterPanelRef && this.filterPanelRef.close();\n        });\n        const changeSub = this.datatable.selectedRows$.subscribe(value => {\n            this.numberOfRowsSelected = value.length;\n            this.cd.markForCheck();\n        });\n        this.subscriptions = [filterSub, changeSub];\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n\n    public openFiltersPanel() {\n        if (this.filterPanelRef) {\n            this.filterPanelRef.close();\n        } else {\n            const position = LEFT_POSITION.slice();\n            position[0].offsetY = 40;\n            position[1].offsetY = 40;\n            this.filterPanelRef = this.overlayPanel.open(DatatableFiltersPanelComponent, {\n                origin: this.filterButton,\n                position,\n                mobilePosition: 'center',\n                data: {filters: this.filterPanelTemplate},\n                maxWidth: '90%',\n            });\n            this.filterButton.nativeElement.classList.add('active');\n            this.filterPanelRef.afterClosed().subscribe(() => {\n                this.filterPanelRef = null;\n                this.filterButton.nativeElement.classList.remove('active');\n            });\n        }\n    }\n\n    public isModel(value: DatatableFilterValue) {\n        return typeof value === 'object' && value.id;\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { prettyBytes } from '../core/utils/pretty-bytes';\n\n@Pipe({\n    name: 'formattedFileSize',\n    pure: true,\n})\nexport class FormattedFileSizePipe implements PipeTransform {\n    transform(bytes: number = 0, precision?: number|string): string {\n        if (isNaN(parseFloat(String(bytes))) || ! isFinite(bytes)) return '-';\n        return prettyBytes(bytes, precision);\n    }\n}\n"]}