{"version":3,"sources":["webpack:///src/common/core/utils/scroll-invalid-input-into-view.ts","webpack:///src/app/backstage/requests/backstag-request.service.ts","webpack:///src/common/uploads/formatted-file-size.pipe.ts","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/accordion.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/expansion.js","webpack:///src/app/backstage/requests/backstage-request-type.ts","webpack:///src/common/core/ui/overlay-panel/positions/left-position.ts","webpack:///src/common/datatable/datatable-filters-panel/datatable-filters-panel.component.html","webpack:///src/common/datatable/datatable-filters-panel/datatable-filters-panel.component.ts","webpack:///src/common/datatable/datatable-header/datatable-header.component.html","webpack:///src/common/datatable/datatable-header/datatable-header.component.ts","webpack:///src/common/core/ui/chips/chip-input/chip-input.component.ts","webpack:///src/common/core/ui/chips/chip-input/chip-input.component.html","webpack:///src/common/core/ui/format-pipes/title-case.pipe.ts","webpack:///src/app/shared/select-artist-control/select-artist-control.component.html","webpack:///src/app/shared/select-artist-control/select-artist-control.component.ts","webpack:///src/app/backstage/requests/backstage-request-form/backstage-request-form.component.html","webpack:///src/app/backstage/requests/backstage-request-form/backstage-request-form.component.ts","webpack:///src/app/backstage/requests/backstage-request-submitted/backstage-request-submitted.component.ts","webpack:///src/app/backstage/requests/backstage-request-submitted/backstage-request-submitted.component.html","webpack:///src/app/backstage/requests/backstage-type-selector/backstage-type-selector.component.html","webpack:///src/app/backstage/requests/backstage-type-selector/backstage-type-selector.component.ts","webpack:///src/app/backstage/editing/crupdate-artist-page/artist-albums-table/artist-albums-table.component.html","webpack:///src/app/backstage/editing/crupdate-artist-page/artist-albums-table/artist-albums-table.component.ts","webpack:///src/app/backstage/editing/crupdate-artist-page/crupdate-artist-page.component.html","webpack:///src/app/backstage/editing/crupdate-artist-page/crupdate-artist-page.component.ts","webpack:///src/app/backstage/editing/crupdate-artist-page/crupdate-artist-page-resolver.service.ts","webpack:///src/app/web-player/audio-upload-validator.ts","webpack:///src/app/uploading/track-form/track-artist-control/track-artist-control.component.html","webpack:///src/app/uploading/track-form/track-artist-control/track-artist-control.component.ts","webpack:///src/app/uploading/track-upload-header/track-upload-header.component.html","webpack:///src/app/uploading/track-upload-header/track-upload-header.component.ts","webpack:///src/app/uploading/track-form/album-control/album-control.component.html","webpack:///src/app/uploading/track-form/album-control/album-control.component.ts","webpack:///src/app/uploading/track-form/track-form.component.html","webpack:///src/app/uploading/track-form/track-form.component.ts","webpack:///src/common/core/types/models/Tag.ts","webpack:///src/app/uploading/album-form/album-form.component.html","webpack:///src/app/uploading/album-form/album-form.component.ts","webpack:///src/app/backstage/editing/crupdate-album-page/crupdate-album-page.component.ts","webpack:///src/app/backstage/editing/crupdate-album-page/crupdate-album-page.component.html","webpack:///src/common/guards/pending-changes/pending-changes-guard.service.ts","webpack:///src/app/backstage/editing/crupdate-track-page/crupdate-track-page.component.ts","webpack:///src/app/backstage/editing/crupdate-track-page/crupdate-track-page.component.html","webpack:///src/common/uploads/utils/read-uploaded-folders.ts","webpack:///src/common/uploads/directives/upload-dropzone.directive.ts","webpack:///src/app/uploading/uploaded-media-preview/uploaded-media-preview.component.html","webpack:///src/app/uploading/uploaded-media-preview/uploaded-media-preview.component.ts","webpack:///src/app/uploading/upload-page/upload-page.component.html","webpack:///src/app/backstage/backstage-routing.module.ts","webpack:///src/app/uploading/upload-page/upload-page.component.ts","webpack:///src/app/backstage/editing/crupdate-album-page/crupdate-album-page-resolver.service.ts","webpack:///src/app/shared/select-artist-control/select-artist-control.module.ts","webpack:///src/app/uploading/uploading.module.ts","webpack:///src/app/backstage/backstage.module.ts"],"names":["scrollInvalidInputIntoView","errors","prefix","firstKey","Object","keys","node","document","getElementById","scrollIntoView","behavior","block","inline","BackstagRequestService","http","requestId","this","get","params","post","requestIds","delete","join","FormattedFileSizePipe","bytes","precision","isNaN","parseFloat","String","isFinite","nextId","CDK_ACCORDION","CdkAccordion","_stateChanges","Subject","_openCloseAllActions","id","_multi","multi","c","_openCloseAll","changes","next","complete","expanded","ɵfac","t","ɵdir","type","selectors","inputs","exportAs","features","provide","useExisting","nextId$1","CdkAccordionItem","accordion","_changeDetectorRef","_expansionDispatcher","_openCloseAllSubscription","Subscription","EMPTY","closed","opened","destroyed","expandedChange","_expanded","_disabled","_removeUniqueSelectionListener","listen","accordionId","_subscribeToOpenCloseAllActions","emit","notify","markForCheck","disabled","unsubscribe","subscribe","outputs","useValue","undefined","CdkAccordionModule","ɵmod","ɵinj","_c0","MatExpansionPanel_ng_template_5_Template","rf","ctx","_c1","_c2","MatExpansionPanelHeader_span_4_Template","ctx_r0","_getExpandedState","_c3","_c4","MAT_ACCORDION","matExpansionAnimations","indicatorRotate","transform","bodyExpansion","height","visibility","MatExpansionPanelContent","_template","uniqueId","MAT_EXPANSION_PANEL_DEFAULT_OPTIONS","MatExpansionPanel","_uniqueSelectionDispatcher","_viewContainerRef","_document","_animationMode","defaultOptions","super","_hideToggle","afterExpand","afterCollapse","_inputChanges","_headerId","_bodyAnimationDone","pipe","distinctUntilChanged","x","y","fromState","toState","event","hideToggle","value","_togglePosition","togglePosition","displayMode","_lazyContent","startWith","filter","_portal","take","ngOnDestroy","_body","focusedElement","activeElement","bodyElement","nativeElement","contains","ɵcmp","contentQueries","dirIndex","_t","first","viewQuery","hostAttrs","hostVars","hostBindings","_hasSpacing","ngContentSelectors","decls","vars","consts","template","$event","directives","styles","encapsulation","data","animation","changeDetection","MatExpansionPanelActionRow","MatExpansionPanelHeader","panel","_element","_focusMonitor","_parentChangeSubscription","accordionHideToggleChange","merge","_containsFocus","focusVia","expandedHeight","collapsedHeight","toggle","isExpanded","_isExpanded","keyCode","preventDefault","_toggle","_handleHeaderKeydown","origin","options","monitor","_handleHeaderFocus","stopMonitoring","_keydown","_getPanelId","_getHeaderHeight","_getTogglePosition","_showToggle","MatExpansionPanelTitle","MatAccordion","arguments","_ownHeaders","show","_headers","headers","reset","header","notifyOnChanges","_keyManager","withWrap","withHomeAndEnd","onKeydown","updateActiveItem","ɵMatAccordion_BaseFactory","MatExpansionModule","imports","BackstageRequestType","becomeArtist","verifyArtist","claimArtist","LEFT_POSITION","originX","originY","overlayX","overlayY","offsetX","DatatableFiltersPanelComponent","overlayPanelRef","close","dialogContainer","datatable","DatatableHeaderComponent","cd","overlayPanel","showSelectedActions","subscriptions","filters$","map","v","filters","query","filterSub","filterPanelRef","changeSub","selectedRows$","numberOfRowsSelected","length","forEach","s","position","slice","offsetY","open","filterButton","mobilePosition","filterPanelTemplate","maxWidth","classList","add","afterClosed","remove","ChipInputComponent","el","emailsInput","selectMode","formControl","items$","suggestedValues$","values","suggestFn","bindToSearchControl","parseEmailsOnPaste","index","items","splice","propagateChange","propagate","matAutocomplete","isOpen","trim","duplicate","findValueIndex","inputEl","setValue","indexOf","findIndex","fn","valueChanges","filtered","name","addEventListener","e","emails","clipboardData","window","getData","match","selection","getSelection","rangeCount","deleteFromDocument","email","addFromAutocomplete","TitleCasePipe","replace","SelectArtistControlComponent","search","listAll","isDisabled$","BehaviorSubject","searchFormControl","loading$","artists$","selectedArtist$","searchedOnce","isDisabled","debounceTime","switchMap","searchArtists","catchError","of","users","suggestArtists","limit","finalize","response","artists","querySelector","style","width","fakeInput","getBoundingClientRect","clearSearchInput","artist","onMenuOpened","onMenuClosed","stopPropagation","BackstageRequestFormComponent","backstage","fb","settings","currentUser","socialAuth","uploadQueue","imageValidator","router","route","uploadedPassportEntry$","socialProfiles$","errors$","requestType$","form","group","artist_name","image","primaryArtist","image_small","first_name","last_name","role","company","routeConfig","path","disable","artistPlaceholder","payload","artist_id","passportScanEntryId","socialProfiles","submitRequest","navigate","request","replaceUrl","err","serviceName","retrieveProfile","then","profile","files","start","uri","httpParams","diskPrefix","disk","validator","fileEntry","profiles","BackstageRequestSubmittedComponent","BackstageTypeSelectorComponent","currentUserIsArtist","ArtistAlbumsTableComponent","modal","albumsApi","images","urls","albums","albums$","data$","encodedArtist","btoa","JSON","stringify","insideAdmin","url","includes","init","initialData","album","title","body","ok","beforeClosed","confirmed","a","CrupdateArtistPageComponent","toast","verified","spotify_id","genres","description","country","city","profile_images","array","links","suggestGenreFn","media","types","results","genre","bindToRouteData","update","create","markAsPristine","editArtist","errResponse","detectChanges","api","patchValue","g","img","addProfileImage","profileImagesArray","push","removeAt","dirty","createOrUpdate","EditArtistPageResolver","state","paramMap","with","albumsPerPage","forEditing","mergeMap","AudioUploadValidator","DEFAULT_MAX_SIZE_MB","showToast","validations","maxSize","getMaxFileSize","i18n","convertToBytes","TrackArtistControlComponent","searchControl","value$","searchResults$","bindSearchControl","fromEvent","searchInput","findMatches","newArtists","blur","r","_","selectArtist","upload","TrackUploadHeaderComponent","subscription","progress$","throttleTime","animationFrame","leading","trailing","progress","AlbumControlComponent","results$","selectedAlbum$","searchAlbums","suggestAlbums","selectAlbum","TrackFormComponent","tracks","audioValidator","waveGenerator","canceled","saved","defaultImage$","number","tags","duration","youtube_id","spotify_popularity","waveData","lyrics","suggestTagFn","tag","currentValue","albumForm","track","formValue","display_name","canAttachMusicToAnyArtist","uploadQueueItem","uploadedResponse$","patchFormUsingFileUpload","customData","completed","getPayload","willProcessFiles","audio","video","uploadedFiles","queueItem","find","queueItemId","generate","uploadedFile","native","finishProcessing","uploads$","metadata","comment","release_date","trackUrl","AlbumFormComponent","waveform","uploadButtonConfig","multiple","confirmCancel","allTracks$","Date","toISOString","trackByFn","i","onlyValidUploads","uploadsAdded$","uploads","error$","sortedTracks","previousIndex","currentIndex","trackForms","some","f","isUploading","tf","autoMatchAlbum","trackForm","markAsDirty","newTracks","submit","uploadFiles","maybeCancel","reorderTracks","CrupdateAlbumPageComponent","queryParams","parse","atob","toAlbumsPage","PendingChangesGuard","component","canDeactivate","CrupdateTrackPageComponent","toTracksPage","readDirRecursive","entry","entries","dir","Promise","resolve","readEntriesRecursive","createReader","key","childEntry","isDirectory","transformFileEntry","reader","allEntries","readEntries","concat","file","fullPath","UploadDropzoneDirective","disableDropzoneClick","disableDropzone","uploadConfig","filesDropped","handleDragEnter","handleDragOver","handleDragLeave","handleDrop","clickButton","handleClick","removeClassesFromDropzone","emitUploadEvent","dropzoneDisabled","dataTransfer","dropEffect","newEl","elementFromPoint","clientX","clientY","Array","from","item","kind","webkitGetAsEntry","hasFiles","toLowerCase","UploadedMediaPreviewComponent","setTimeout","trackLinkInput","focus","select","isTrack","routerLinkToUrl","mediaLink","network","mediaUrl","model_type","shareUsing","target","createAlbum$","routes","redirectTo","pathMatch","UploadPageComponent","savedMedia$","album_name","newMedia","uploadTracks","CrupdateAlbumPageResolverService","BackstageRoutingModule","forChild","SelectArtistControlModule","UploadingModule","BackstageModule"],"mappings":"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","file":"x","sourcesContent":["export function scrollInvalidInputIntoView(errors: {[key: string]: any}, prefix = '') {\n    let firstKey = Object.keys(errors)[0];\n    if (firstKey) {\n        if (prefix) {\n            firstKey = `${prefix}-${firstKey}`;\n        }\n        const node = document.getElementById(firstKey);\n        if (node) {\n            node.scrollIntoView({behavior: 'smooth', block: 'center', inline: 'center'});\n        }\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\nimport {BackendResponse} from '@common/core/types/backend-response';\nimport {BackstageRequest} from '../../models/backstage-request';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BackstagRequestService {\n\n    constructor(private http: AppHttpClient) {\n    }\n\n    public getRequest(requestId: number): BackendResponse<{request: BackstageRequest}> {\n        return this.http.get(`backstage-request/${requestId}`);\n    }\n\n    public submitRequest(params: object): BackendResponse<{request: {id: number}}> {\n        return this.http.post('backstage-request', params);\n    }\n\n    public approveRequest(requestId: number, params: {markArtistAsVerified?: boolean, notes?: string} = {}) {\n        return this.http.post(`backstage-request/${requestId}/approve`, params);\n    }\n\n    public denyRequest(requestId: number, params: {notes?: string} = {}) {\n        return this.http.post(`backstage-request/${requestId}/deny`, params);\n    }\n\n    public deleteRequests(requestIds: number[]): BackendResponse<void> {\n        return this.http.delete(`backstage-request/${requestIds.join(',')}`);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { prettyBytes } from '../core/utils/pretty-bytes';\n\n@Pipe({\n    name: 'formattedFileSize',\n    pure: true,\n})\nexport class FormattedFileSizePipe implements PipeTransform {\n    transform(bytes: number = 0, precision?: number|string): string {\n        if (isNaN(parseFloat(String(bytes))) || ! isFinite(bytes)) return '-';\n        return prettyBytes(bytes, precision);\n    }\n}\n","import { InjectionToken, Directive, Input, EventEmitter, Optional, Inject, SkipSelf, ChangeDetectorRef, Output, NgModule } from '@angular/core';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nlet nextId = 0;\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_ACCORDION = new InjectionToken('CdkAccordion');\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    constructor() {\n        /** Emits when the state of the accordion changes */\n        this._stateChanges = new Subject();\n        /** Stream that emits true/false when openAll/closeAll is triggered. */\n        this._openCloseAllActions = new Subject();\n        /** A readonly id value to use for unique selection coordination. */\n        this.id = `cdk-accordion-${nextId++}`;\n        this._multi = false;\n    }\n    /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n    get multi() { return this._multi; }\n    set multi(multi) { this._multi = coerceBooleanProperty(multi); }\n    /** Opens all enabled accordion items in an accordion where multi is enabled. */\n    openAll() {\n        this._openCloseAll(true);\n    }\n    /** Closes all enabled accordion items in an accordion where multi is enabled. */\n    closeAll() {\n        this._openCloseAll(false);\n    }\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    _openCloseAll(expanded) {\n        if (this.multi) {\n            this._openCloseAllActions.next(expanded);\n        }\n    }\n}\nCdkAccordion.ɵfac = function CdkAccordion_Factory(t) { return new (t || CdkAccordion)(); };\nCdkAccordion.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAccordion, selectors: [[\"cdk-accordion\"], [\"\", \"cdkAccordion\", \"\"]], inputs: { multi: \"multi\" }, exportAs: [\"cdkAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_ACCORDION, useExisting: CdkAccordion }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkAccordion.propDecorators = {\n    multi: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion, [cdkAccordion]',\n                exportAs: 'cdkAccordion',\n                providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }]\n            }]\n    }], function () { return []; }, { multi: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion item. */\nlet nextId$1 = 0;\nconst ɵ0 = undefined;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /** Subscription to openAll/closeAll events. */\n        this._openCloseAllSubscription = Subscription.EMPTY;\n        /** Event emitted every time the AccordionItem is closed. */\n        this.closed = new EventEmitter();\n        /** Event emitted every time the AccordionItem is opened. */\n        this.opened = new EventEmitter();\n        /** Event emitted when the AccordionItem is destroyed. */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emits whenever the expanded state of the accordion changes.\n         * Primarily used to facilitate two-way binding.\n         * @docs-private\n         */\n        this.expandedChange = new EventEmitter();\n        /** The unique AccordionItem id. */\n        this.id = `cdk-accordion-child-${nextId$1++}`;\n        this._expanded = false;\n        this._disabled = false;\n        /** Unregister function for _expansionDispatcher. */\n        this._removeUniqueSelectionListener = () => { };\n        this._removeUniqueSelectionListener =\n            _expansionDispatcher.listen((id, accordionId) => {\n                if (this.accordion && !this.accordion.multi &&\n                    this.accordion.id === accordionId && this.id !== id) {\n                    this.expanded = false;\n                }\n            });\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /** Whether the AccordionItem is expanded. */\n    get expanded() { return this._expanded; }\n    set expanded(expanded) {\n        expanded = coerceBooleanProperty(expanded);\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the AccordionItem is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(disabled) { this._disabled = coerceBooleanProperty(disabled); }\n    /** Emits an event for the accordion item being destroyed. */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /** Toggles the expanded state of the accordion item. */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /** Sets the expanded state of the accordion item to false. */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /** Sets the expanded state of the accordion item to true. */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe(expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        });\n    }\n}\nCdkAccordionItem.ɵfac = function CdkAccordionItem_Factory(t) { return new (t || CdkAccordionItem)(ɵngcc0.ɵɵdirectiveInject(CDK_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher)); };\nCdkAccordionItem.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAccordionItem, selectors: [[\"cdk-accordion-item\"], [\"\", \"cdkAccordionItem\", \"\"]], inputs: { expanded: \"expanded\", disabled: \"disabled\" }, outputs: { closed: \"closed\", opened: \"opened\", destroyed: \"destroyed\", expandedChange: \"expandedChange\" }, exportAs: [\"cdkAccordionItem\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n            // registering to the same accordion.\n            { provide: CDK_ACCORDION, useValue: ɵ0 },\n        ])] });\nCdkAccordionItem.ctorParameters = () => [\n    { type: CdkAccordion, decorators: [{ type: Optional }, { type: Inject, args: [CDK_ACCORDION,] }, { type: SkipSelf }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher }\n];\nCdkAccordionItem.propDecorators = {\n    closed: [{ type: Output }],\n    opened: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    expandedChange: [{ type: Output }],\n    expanded: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordionItem, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                exportAs: 'cdkAccordionItem',\n                providers: [\n                    // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n                    // registering to the same accordion.\n                    { provide: CDK_ACCORDION, useValue: ɵ0 },\n                ]\n            }]\n    }], function () { return [{ type: CdkAccordion, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_ACCORDION]\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }]; }, { closed: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], expandedChange: [{\n            type: Output\n        }], expanded: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkAccordionModule {\n}\nCdkAccordionModule.ɵfac = function CdkAccordionModule_Factory(t) { return new (t || CdkAccordionModule)(); };\nCdkAccordionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkAccordionModule });\nCdkAccordionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkAccordionModule, { declarations: [CdkAccordion, CdkAccordionItem], exports: [CdkAccordion, CdkAccordionItem] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordionModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkAccordion, CdkAccordionItem],\n                declarations: [CdkAccordion, CdkAccordionItem]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkAccordion, CdkAccordionItem, CdkAccordionModule, CDK_ACCORDION as ɵangular_material_src_cdk_accordion_accordion_a };\n\n//# sourceMappingURL=accordion.js.map","import { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, SkipSelf, Inject, ChangeDetectorRef, ViewContainerRef, Input, Output, ContentChild, ViewChild, Host, ElementRef, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { distinctUntilChanged, startWith, filter, take } from 'rxjs/operators';\nimport { ENTER, hasModifierKey, SPACE } from '@angular/cdk/keycodes';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\n\nconst _c0 = [\"body\"];\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) { }\nconst _c1 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nconst _c2 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\nfunction MatExpansionPanelHeader_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@indicatorRotate\", ctx_r0._getExpandedState());\n} }\nconst _c3 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nconst _c4 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time and timing curve for expansion panel animations. */\n// Note: Keep this in sync with the Sass variable for the panel header animation.\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * @docs-private\n */\nconst matExpansionAnimations = {\n    /** Animation that rotates the indicator arrow. */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /** Animation that expands and collapses the panel content. */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n        state('expanded', style({ height: '*', visibility: 'visible' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatExpansionPanelContent.ɵfac = function MatExpansionPanelContent_Factory(t) { return new (t || MatExpansionPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatExpansionPanelContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelContent, selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]] });\nMatExpansionPanelContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matExpansionPanelContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter for generating unique element ids. */\nlet uniqueId = 0;\n/**\n * Injection token that can be used to configure the defalt\n * options for the expansion panel component.\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\nconst ɵ0 = undefined;\n/**\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._animationMode = _animationMode;\n        this._hideToggle = false;\n        /** An event emitted after the body's expansion animation happens. */\n        this.afterExpand = new EventEmitter();\n        /** An event emitted after the body's collapse animation happens. */\n        this.afterCollapse = new EventEmitter();\n        /** Stream that emits for changes in `@Input` properties. */\n        this._inputChanges = new Subject();\n        /** ID for the associated header element. Used for a11y labelling. */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        /** Stream of body animation done events. */\n        this._bodyAnimationDone = new Subject();\n        this.accordion = accordion;\n        this._document = _document;\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._bodyAnimationDone.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            if (event.fromState !== 'void') {\n                if (event.toState === 'expanded') {\n                    this.afterExpand.emit();\n                }\n                else if (event.toState === 'collapsed') {\n                    this.afterCollapse.emit();\n                }\n            }\n        });\n        if (defaultOptions) {\n            this.hideToggle = defaultOptions.hideToggle;\n        }\n    }\n    /** Whether the toggle indicator should be hidden. */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    set hideToggle(value) {\n        this._hideToggle = coerceBooleanProperty(value);\n    }\n    /** The position of the expansion indicator. */\n    get togglePosition() {\n        return this._togglePosition || (this.accordion && this.accordion.togglePosition);\n    }\n    set togglePosition(value) {\n        this._togglePosition = value;\n    }\n    /** Determines whether the expansion panel should have spacing between it and its siblings. */\n    _hasSpacing() {\n        if (this.accordion) {\n            return this.expanded && this.accordion.displayMode === 'default';\n        }\n        return false;\n    }\n    /** Gets the expanded state string. */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /** Toggles the expanded state of the expansion panel. */\n    toggle() {\n        this.expanded = !this.expanded;\n    }\n    /** Sets the expanded state of the expansion panel to false. */\n    close() {\n        this.expanded = false;\n    }\n    /** Sets the expanded state of the expansion panel to true. */\n    open() {\n        this.expanded = true;\n    }\n    ngAfterContentInit() {\n        if (this._lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened.pipe(startWith(null), filter(() => this.expanded && !this._portal), take(1)).subscribe(() => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            });\n        }\n    }\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._bodyAnimationDone.complete();\n        this._inputChanges.complete();\n    }\n    /** Checks whether the expansion panel's content contains the currently-focused element. */\n    _containsFocus() {\n        if (this._body) {\n            const focusedElement = this._document.activeElement;\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n}\nMatExpansionPanel.ɵfac = function MatExpansionPanel_Factory(t) { return new (t || MatExpansionPanel)(ɵngcc0.ɵɵdirectiveInject(MAT_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8)); };\nMatExpansionPanel.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanel, selectors: [[\"mat-expansion-panel\"]], contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    } }, viewQuery: function MatExpansionPanel_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._body = _t.first);\n    } }, hostAttrs: [1, \"mat-expansion-panel\"], hostVars: 6, hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n    } }, inputs: { disabled: \"disabled\", expanded: \"expanded\", hideToggle: \"hideToggle\", togglePosition: \"togglePosition\" }, outputs: { opened: \"opened\", closed: \"closed\", expandedChange: \"expandedChange\", afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, exportAs: [\"matExpansionPanel\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n            // to the same accordion.\n            { provide: MAT_ACCORDION, useValue: ɵ0 },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c2, decls: 7, vars: 4, consts: [[\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [\"body\", \"\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]], template: function MatExpansionPanel_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) { return ctx._bodyAnimationDone.next($event); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, data: { animation: [matExpansionAnimations.bodyExpansion] }, changeDetection: 0 });\nMatExpansionPanel.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [MAT_ACCORDION,] }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanel.propDecorators = {\n    hideToggle: [{ type: Input }],\n    togglePosition: [{ type: Input }],\n    afterExpand: [{ type: Output }],\n    afterCollapse: [{ type: Output }],\n    _lazyContent: [{ type: ContentChild, args: [MatExpansionPanelContent,] }],\n    _body: [{ type: ViewChild, args: ['body',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanel, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel',\n                exportAs: 'matExpansionPanel',\n                template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled', 'expanded'],\n                outputs: ['opened', 'closed', 'expandedChange'],\n                animations: [matExpansionAnimations.bodyExpansion],\n                providers: [\n                    // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                    // to the same accordion.\n                    { provide: MAT_ACCORDION, useValue: ɵ0 },\n                ],\n                host: {\n                    'class': 'mat-expansion-panel',\n                    '[class.mat-expanded]': 'expanded',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n                },\n                styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [MAT_ACCORDION]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }]; }, { afterExpand: [{\n            type: Output\n        }], afterCollapse: [{\n            type: Output\n        }], hideToggle: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], _lazyContent: [{\n            type: ContentChild,\n            args: [MatExpansionPanelContent]\n        }], _body: [{\n            type: ViewChild,\n            args: ['body']\n        }] }); })();\n/**\n * Actions of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelActionRow {\n}\nMatExpansionPanelActionRow.ɵfac = function MatExpansionPanelActionRow_Factory(t) { return new (t || MatExpansionPanelActionRow)(); };\nMatExpansionPanelActionRow.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelActionRow, selectors: [[\"mat-action-row\"]], hostAttrs: [1, \"mat-action-row\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-action-row',\n                host: {\n                    class: 'mat-action-row'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Header element of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader {\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions, _animationMode) {\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        const accordionHideToggleChange = panel.accordion ?\n            panel.accordion._stateChanges.pipe(filter(changes => !!(changes['hideToggle'] || changes['togglePosition']))) :\n            EMPTY;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription =\n            merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => {\n                return !!(changes['hideToggle'] ||\n                    changes['disabled'] ||\n                    changes['togglePosition']);\n            })))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter(() => panel._containsFocus()))\n            .subscribe(() => _focusMonitor.focusVia(_element, 'program'));\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * @docs-private\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /** Toggles the expanded state of the panel. */\n    _toggle() {\n        if (!this.disabled) {\n            this.panel.toggle();\n        }\n    }\n    /** Gets whether the panel is expanded. */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /** Gets the expanded state string of the panel. */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /** Gets the panel id. */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /** Gets the toggle position for the header. */\n    _getTogglePosition() {\n        return this.panel.togglePosition;\n    }\n    /** Gets whether the expand indicator should be shown. */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Gets the current height of the header. Null if no custom height has been\n     * specified, and if the default height from the stylesheet should be used.\n     */\n    _getHeaderHeight() {\n        const isExpanded = this._isExpanded();\n        if (isExpanded && this.expandedHeight) {\n            return this.expandedHeight;\n        }\n        else if (!isExpanded && this.collapsedHeight) {\n            return this.collapsedHeight;\n        }\n        return null;\n    }\n    /** Handle keydown event calling to toggle() if appropriate. */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * @param origin Origin of the action that triggered the focus.\n     * @docs-private\n     */\n    focus(origin = 'program', options) {\n        this._focusMonitor.focusVia(this._element, origin, options);\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._element).subscribe(origin => {\n            if (origin && this.panel.accordion) {\n                this.panel.accordion._handleHeaderFocus(this);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n}\nMatExpansionPanelHeader.ɵfac = function MatExpansionPanelHeader_Factory(t) { return new (t || MatExpansionPanelHeader)(ɵngcc0.ɵɵdirectiveInject(MatExpansionPanel, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatExpansionPanelHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanelHeader, selectors: [[\"mat-expansion-panel-header\"]], hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\", \"mat-focus-indicator\"], hostVars: 15, hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() { return ctx._toggle(); })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.disabled ? -1 : 0)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n        ɵngcc0.ɵɵstyleProp(\"height\", ctx._getHeaderHeight());\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded())(\"mat-expansion-toggle-indicator-after\", ctx._getTogglePosition() === \"after\")(\"mat-expansion-toggle-indicator-before\", ctx._getTogglePosition() === \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\" }, ngContentSelectors: _c4, decls: 5, vars: 1, consts: [[1, \"mat-content\"], [\"class\", \"mat-expansion-indicator\", 4, \"ngIf\"], [1, \"mat-expansion-indicator\"]], template: function MatExpansionPanelHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, MatExpansionPanelHeader_span_4_Template, 1, 1, \"span\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._showToggle());\n    } }, directives: [ɵngcc4.NgIf], styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\\n\"], encapsulation: 2, data: { animation: [\n            matExpansionAnimations.indicatorRotate,\n        ] }, changeDetection: 0 });\nMatExpansionPanelHeader.ctorParameters = () => [\n    { type: MatExpansionPanel, decorators: [{ type: Host }] },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatExpansionPanelHeader.propDecorators = {\n    expandedHeight: [{ type: Input }],\n    collapsedHeight: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel-header',\n                template: \"<span class=\\\"mat-content\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"mat-expansion-indicator\\\"></span>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [\n                    matExpansionAnimations.indicatorRotate,\n                ],\n                host: {\n                    'class': 'mat-expansion-panel-header mat-focus-indicator',\n                    'role': 'button',\n                    '[attr.id]': 'panel._headerId',\n                    '[attr.tabindex]': 'disabled ? -1 : 0',\n                    '[attr.aria-controls]': '_getPanelId()',\n                    '[attr.aria-expanded]': '_isExpanded()',\n                    '[attr.aria-disabled]': 'panel.disabled',\n                    '[class.mat-expanded]': '_isExpanded()',\n                    '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n                    '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[style.height]': '_getHeaderHeight()',\n                    '(click)': '_toggle()',\n                    '(keydown)': '_keydown($event)'\n                },\n                styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\\n\"]\n            }]\n    }], function () { return [{ type: MatExpansionPanel, decorators: [{\n                type: Host\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { expandedHeight: [{\n            type: Input\n        }], collapsedHeight: [{\n            type: Input\n        }] }); })();\n/**\n * Description element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelDescription {\n}\nMatExpansionPanelDescription.ɵfac = function MatExpansionPanelDescription_Factory(t) { return new (t || MatExpansionPanelDescription)(); };\nMatExpansionPanelDescription.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelDescription, selectors: [[\"mat-panel-description\"]], hostAttrs: [1, \"mat-expansion-panel-header-description\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-description',\n                host: {\n                    class: 'mat-expansion-panel-header-description'\n                }\n            }]\n    }], null, null); })();\n/**\n * Title element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelTitle {\n}\nMatExpansionPanelTitle.ɵfac = function MatExpansionPanelTitle_Factory(t) { return new (t || MatExpansionPanelTitle)(); };\nMatExpansionPanelTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelTitle, selectors: [[\"mat-panel-title\"]], hostAttrs: [1, \"mat-expansion-panel-header-title\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-title',\n                host: {\n                    class: 'mat-expansion-panel-header-title'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        /** Headers belonging to this accordion. */\n        this._ownHeaders = new QueryList();\n        this._hideToggle = false;\n        /**\n         * Display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n        /** The position of the expansion indicator. */\n        this.togglePosition = 'after';\n    }\n    /** Whether the expansion indicator should be hidden. */\n    get hideToggle() { return this._hideToggle; }\n    set hideToggle(show) { this._hideToggle = coerceBooleanProperty(show); }\n    ngAfterContentInit() {\n        this._headers.changes\n            .pipe(startWith(this._headers))\n            .subscribe((headers) => {\n            this._ownHeaders.reset(headers.filter(header => header.panel.accordion === this));\n            this._ownHeaders.notifyOnChanges();\n        });\n        this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap().withHomeAndEnd();\n    }\n    /** Handles keyboard events coming in from the panel headers. */\n    _handleHeaderKeydown(event) {\n        this._keyManager.onKeydown(event);\n    }\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n}\nMatAccordion.ɵfac = function MatAccordion_Factory(t) { return ɵMatAccordion_BaseFactory(t || MatAccordion); };\nMatAccordion.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAccordion, selectors: [[\"mat-accordion\"]], contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headers = _t);\n    } }, hostAttrs: [1, \"mat-accordion\"], hostVars: 2, hostBindings: function MatAccordion_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-accordion-multi\", ctx.multi);\n    } }, inputs: { multi: \"multi\", displayMode: \"displayMode\", togglePosition: \"togglePosition\", hideToggle: \"hideToggle\" }, exportAs: [\"matAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_ACCORDION,\n                useExisting: MatAccordion\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatAccordion.propDecorators = {\n    _headers: [{ type: ContentChildren, args: [MatExpansionPanelHeader, { descendants: true },] }],\n    hideToggle: [{ type: Input }],\n    displayMode: [{ type: Input }],\n    togglePosition: [{ type: Input }]\n};\nconst ɵMatAccordion_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAccordion);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-accordion',\n                exportAs: 'matAccordion',\n                inputs: ['multi'],\n                providers: [{\n                        provide: MAT_ACCORDION,\n                        useExisting: MatAccordion\n                    }],\n                host: {\n                    class: 'mat-accordion',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if multiple panel support is enabled.\n                    '[class.mat-accordion-multi]': 'this.multi'\n                }\n            }]\n    }], null, { displayMode: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], hideToggle: [{\n            type: Input\n        }], _headers: [{\n            type: ContentChildren,\n            args: [MatExpansionPanelHeader, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatExpansionModule {\n}\nMatExpansionModule.ɵfac = function MatExpansionModule_Factory(t) { return new (t || MatExpansionModule)(); };\nMatExpansionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatExpansionModule });\nMatExpansionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, CdkAccordionModule, PortalModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatExpansionModule, { declarations: function () { return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]; }, imports: function () { return [CommonModule, CdkAccordionModule, PortalModule]; }, exports: function () { return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, CdkAccordionModule, PortalModule],\n                exports: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ],\n                declarations: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations, ɵ0 };\n\n//# sourceMappingURL=expansion.js.map","export enum BackstageRequestType {\n    becomeArtist = 'become-artist',\n    verifyArtist = 'verify-artist',\n    claimArtist = 'claim-artist',\n}\n","import { ConnectedPosition } from '@angular/cdk/overlay';\n\nexport const LEFT_POSITION: ConnectedPosition[] = [\n    {originX: 'start', originY: 'center', overlayX: 'end', overlayY: 'center', offsetX: 50},\n    {originX: 'end', originY: 'center', overlayX: 'start', overlayY: 'center', offsetX: 50},\n];\n","<header>\n    <mat-icon svgIcon=\"filter-list\"></mat-icon>\n    <span trans>Filters</span>\n</header>\n\n<form class=\"body\" (ngSubmit)=\"close()\">\n    <ng-container *ngTemplateOutlet=\"data.filters\"></ng-container>\n</form>\n\n<footer>\n    <button (click)=\"close()\" type=\"button\" mat-button color=\"accent\" trans>Close</button>\n</footer>\n","import {ChangeDetectionStrategy, Component, ElementRef, Inject, TemplateRef} from '@angular/core';\nimport {OVERLAY_PANEL_DATA} from '../../core/ui/overlay-panel/overlay-panel-data';\nimport {OverlayPanelRef} from '../../core/ui/overlay-panel/overlay-panel-ref';\nimport {matDialogAnimations} from '@angular/material/dialog';\n\n@Component({\n    selector: 'datatable-filters-panel',\n    templateUrl: './datatable-filters-panel.component.html',\n    styleUrls: ['./datatable-filters-panel.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[@dialogContainer]': `'enter'`\n    },\n    animations: [\n        matDialogAnimations.dialogContainer,\n    ]\n})\nexport class DatatableFiltersPanelComponent {\n\n    constructor(\n        @Inject(OVERLAY_PANEL_DATA) public data: {filters: TemplateRef<ElementRef>},\n        private overlayPanelRef: OverlayPanelRef,\n    ) {}\n\n    public close() {\n        this.overlayPanelRef.close();\n    }\n}\n","<mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"datatable.paginator && datatable.paginator.loading$ | async\"></mat-progress-bar>\n<div class=\"left-column\">\n    <div class=\"default-left-content\" *ngIf=\"!showSelectedActions || !numberOfRowsSelected\">\n        <ng-content select=\"[leftContent]\"></ng-content>\n    </div>\n    <div class=\"selected-left-content capitalize\" *ngIf=\"showSelectedActions && numberOfRowsSelected\">\n        {{ ':count :resource selected' | trans:{count: numberOfRowsSelected, resource: pluralResourceName} }}\n    </div>\n</div>\n<div class=\"right-column\">\n    <div class=\"default-right-content\" *ngIf=\"!showSelectedActions || !numberOfRowsSelected\">\n        <ng-container *ngIf=\"filterPanelTemplate\">\n            <mat-chip-list aria-label=\"Active Filters\" class=\"filter-chip-list\">\n                <mat-chip *ngFor=\"let filter of filters$ | async | keyvalue\" [removable]=\"true\" [selectable]=\"false\" (removed)=\"datatable.removeFilter(filter.key)\">\n                    {{filter.key | titleCase | trans}}: {{isModel(filter.value) ? (filter.value.name || filter.value.display_name) : filter.value}}\n                    <mat-icon matChipRemove svgIcon=\"cancel\"></mat-icon>\n                </mat-chip>\n            </mat-chip-list>\n            <button (click)=\"openFiltersPanel()\" class=\"filter-button\" [class.active]=\"filterPanelRef\" #filterButton mat-icon-button>\n                <mat-icon svgIcon=\"filter-list\"></mat-icon>\n            </button>\n        </ng-container>\n        <datatable-header-search-input placeholder=\"Search {{ pluralResourceName }}\"></datatable-header-search-input>\n    </div>\n    <div class=\"selected-right-actions\" *ngIf=\"showSelectedActions && numberOfRowsSelected\">\n        <ng-content select=\"[rightContent]\"></ng-content>\n    </div>\n</div>\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    TemplateRef,\n    ViewChild\n} from '@angular/core';\nimport {DatatableService} from '../datatable.service';\nimport {Model} from '../../core/types/models/model';\nimport {Subscription} from 'rxjs';\nimport {OverlayPanel} from '../../core/ui/overlay-panel/overlay-panel.service';\nimport {LEFT_POSITION} from '../../core/ui/overlay-panel/positions/left-position';\nimport {OverlayPanelRef} from '../../core/ui/overlay-panel/overlay-panel-ref';\nimport {DatatableFiltersPanelComponent} from '../datatable-filters-panel/datatable-filters-panel.component';\nimport {map} from 'rxjs/operators';\nimport {removeNullFromObject} from '../../core/utils/remove-null-from-object';\nimport {DatatableFilterValue} from '../types/datatable-filters';\n\n@Component({\n    selector: 'datatable-header',\n    templateUrl: './datatable-header.component.html',\n    styleUrls: ['./datatable-header.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DatatableHeaderComponent implements OnInit, OnDestroy {\n    @HostBinding('class.rows-selected') public numberOfRowsSelected: number;\n    @ContentChild('tableFilters') filterPanelTemplate: TemplateRef<ElementRef>;\n    @ViewChild('filterButton', { read: ElementRef }) filterButton: ElementRef<HTMLButtonElement>;\n    @Input() pluralResourceName: string;\n    @Input() showSelectedActions = true;\n    private subscriptions: Subscription[] = [];\n    public filterPanelRef: OverlayPanelRef<any>;\n\n    public filters$ = this.datatable.filters$\n        .pipe(map(v => {\n            const filters = removeNullFromObject(v);\n            delete filters.query;\n            return filters;\n        }));\n\n    constructor(\n        public datatable: DatatableService<Model>,\n        private cd: ChangeDetectorRef,\n        private overlayPanel: OverlayPanel,\n    ) {}\n\n    ngOnInit() {\n        // close filter panel when any filter is selected.\n        const filterSub = this.datatable.filters$.subscribe(() => {\n            this.filterPanelRef && this.filterPanelRef.close();\n        });\n        const changeSub = this.datatable.selectedRows$.subscribe(value => {\n            this.numberOfRowsSelected = value.length;\n            this.cd.markForCheck();\n        });\n        this.subscriptions = [filterSub, changeSub];\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n\n    public openFiltersPanel() {\n        if (this.filterPanelRef) {\n            this.filterPanelRef.close();\n        } else {\n            const position = LEFT_POSITION.slice();\n            position[0].offsetY = 40;\n            position[1].offsetY = 40;\n            this.filterPanelRef = this.overlayPanel.open(DatatableFiltersPanelComponent, {\n                origin: this.filterButton,\n                position,\n                mobilePosition: 'center',\n                data: {filters: this.filterPanelTemplate},\n                maxWidth: '90%',\n            });\n            this.filterButton.nativeElement.classList.add('active');\n            this.filterPanelRef.afterClosed().subscribe(() => {\n                this.filterPanelRef = null;\n                this.filterButton.nativeElement.classList.remove('active');\n            });\n        }\n    }\n\n    public isModel(value: DatatableFilterValue) {\n        return typeof value === 'object' && value.id;\n    }\n}\n","import {\n    AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, HostBinding, Input, OnInit, TemplateRef, ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {BehaviorSubject, Observable, of} from 'rxjs';\nimport {MatAutocomplete} from '@angular/material/autocomplete';\nimport {catchError, debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\nimport {Model} from '../../../types/models/model';\n\ntype ChipValue = 'string' | Model;\n\n@Component({\n    selector: 'chip-input',\n    templateUrl: './chip-input.component.html',\n    styleUrls: ['./chip-input.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: ChipInputComponent,\n        multi: true,\n    }]\n})\nexport class ChipInputComponent implements ControlValueAccessor, OnInit, AfterViewInit {\n    @Input() placeholder: string;\n    @Input() type = 'text';\n    @Input() emailsInput = false;\n    @Input() suggestFn: (query: string) => Observable<ChipValue[]>;\n    @Input() @HostBinding('class.select-mode') selectMode = false;\n    @ViewChild('auto') matAutocomplete: MatAutocomplete;\n    @ViewChild('inputEl') inputEl: ElementRef<HTMLInputElement>;\n    @ViewChild('selectModeTemplate') selectModeTemplate: TemplateRef<any>;\n\n    public formControl = new FormControl();\n\n    public propagateChange: (items: ChipValue[]) => void;\n    public items$ = new BehaviorSubject<ChipValue[]>([]);\n    public suggestedValues$ = new BehaviorSubject<ChipValue[]>([]);\n    @Input() set suggestedValues(values: ChipValue[]) {\n        this.suggestedValues$.next(values);\n    }\n\n    constructor(\n        public el: ElementRef<HTMLElement>,\n    ) {}\n\n    ngOnInit() {\n        if (this.suggestFn) {\n            this.bindToSearchControl();\n        }\n        if (this.selectMode) {\n           // TODO: implement\n        }\n    }\n\n    ngAfterViewInit() {\n        if (this.emailsInput) {\n            this.parseEmailsOnPaste();\n        }\n    }\n\n    public remove(index: number) {\n        const items = [...this.items$.value];\n        items.splice(index, 1);\n        this.items$.next(items);\n        this.propagateChange(this.items$.value);\n    }\n\n    public addFromChipInput(value: ChipValue, propagate = true) {\n        if (value && !this.matAutocomplete.isOpen && !this.selectMode) {\n            this.add(value, propagate);\n        }\n    }\n\n    public addFromAutocomplete(value: ChipValue, propagate = true) {\n        this.add(value, propagate);\n    }\n\n    private add(value: ChipValue, propagate = true) {\n        value = (typeof value === 'string' ? value.trim() : value) as ChipValue;\n        const duplicate = this.findValueIndex(value) > -1;\n        if (value && !duplicate) {\n            this.items$.next([...this.items$.value, value]);\n            if (propagate) {\n                this.propagateChange(this.items$.value);\n            }\n        }\n        if (this.inputEl) {\n            this.inputEl.nativeElement.value = '';\n        }\n        this.formControl.setValue(null);\n        this.suggestedValues$.next([]);\n    }\n\n    private findValueIndex(value: ChipValue) {\n        if (typeof value === 'string') {\n            return this.items$.value.indexOf(value);\n        } else {\n            return this.items$.value.findIndex(v => (v as Model).id === value.id);\n        }\n    }\n\n    public writeValue(value: ChipValue[] = []) {\n        this.items$.next(value || []);\n        // if (value && value.length) {\n        //     value.forEach(item => this.add(item, false));\n        // } else if (this.items$.value.length) {\n        //     while (this.items$.value.length !== 0) {\n        //         this.remove(0);\n        //     }\n        // }\n    }\n\n    public registerOnChange(fn: (items: ChipValue[]) => void) {\n        this.propagateChange = fn;\n    }\n\n    public registerOnTouched() {}\n\n    private bindToSearchControl() {\n        this.formControl.valueChanges.pipe(\n            debounceTime(150),\n            distinctUntilChanged(),\n            switchMap(query => query ? this.suggestFn(query) : of([])),\n            catchError(() => of([])),\n        ).subscribe(values => {\n            const filtered = values.filter(v => this.findValueIndex(v) === -1);\n            this.suggestedValues$.next(filtered);\n        });\n    }\n\n    public displayChipValue(value: ChipValue): string {\n        return typeof value === 'object' ? value.name : value;\n    }\n\n    private parseEmailsOnPaste() {\n        this.inputEl.nativeElement.addEventListener('paste', e => {\n            const paste = (e.clipboardData || window['clipboardData']).getData('text');\n            const emails = paste.match(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi);\n            if (emails) {\n                e.preventDefault();\n                const selection = window.getSelection();\n                if (selection.rangeCount) {\n                    selection.deleteFromDocument();\n                    emails.forEach(email => this.add(email));\n                }\n            }\n        });\n    }\n}\n","<mat-chip-list #chipList [selectable]=\"false\">\n    <mat-chip\n        *ngFor=\"let item of items$ | async; index as i\"\n        [selectable]=\"false\"\n        [removable]=\"!selectMode\"\n        (removed)=\"remove(i)\"\n    >\n        {{displayChipValue(item)}}\n        <mat-icon matChipRemove svgIcon=\"cancel\"></mat-icon>\n    </mat-chip>\n    <input [placeholder]=\"placeholder | trans\"\n           *ngIf=\"!selectMode\"\n           #inputEl\n           [type]=\"type\"\n           class=\"mat-chip-input mat-input-element\"\n           [matChipInputFor]=\"chipList\"\n           [matChipInputAddOnBlur]=\"true\"\n           [matAutocomplete]=\"auto\"\n           [matAutocompleteConnectedTo]=\"{elementRef: el}\"\n           [formControl]=\"formControl\"\n           (matChipInputTokenEnd)=\"addFromChipInput($event.value)\" />\n</mat-chip-list>\n\n<mat-autocomplete class=\"chip-input-autocomplete-panel\" #auto=\"matAutocomplete\" (optionSelected)=\"addFromAutocomplete($event.option.value)\" [autoActiveFirstOption]=\"true\">\n    <mat-option *ngFor=\"let value of suggestedValues$ | async\" [value]=\"value\">{{displayChipValue(value)}}</mat-option>\n</mat-autocomplete>\n\n<ng-template #selectModeTemplate let-suggestions=\"suggestions\">\n    <mat-option *ngFor=\"let value of suggestions\" [value]=\"value\">{{displayChipValue(value)}}</mat-option>\n</ng-template>\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {TitleCasePipe as AngularTitleCasePipe} from '@angular/common';\n\n@Pipe({\n    name: 'titleCase',\n    pure: true,\n})\nexport class TitleCasePipe extends AngularTitleCasePipe implements PipeTransform {\n    transform(value: string): string;\n    transform(value: null|undefined): null;\n    transform(value: string|null|undefined): string|null;\n    transform(value: string | null | undefined): string | null {\n        if ( ! value) {\n            return '';\n        }\n        return super.transform(value.replace('-', ' ').replace('_', ' '));\n    }\n}\n","<div class=\"fake-input\" #fakeInput [matMenuTriggerFor]=\"menu\" (menuOpened)=\"onMenuOpened()\" (menuClosed)=\"onMenuClosed()\" [class.disabled]=\"isDisabled$ | async\">\n        <span *ngIf=\"selectedArtist$ | async as selectedArtist; else anyArtist\">\n            <media-image class=\"result-image\" [media]=\"selectedArtist\"></media-image>\n            {{selectedArtist.name}}\n        </span>\n    <ng-template #anyArtist>\n        <span trans>Select an artist</span>\n    </ng-template>\n    <div class=\"arrow-container\">\n        <div class=\"arrow\"></div>\n    </div>\n</div>\n\n<mat-menu #menu=\"matMenu\" class=\"select-artist-control-menu\">\n    <div class=\"input-container search-input-container\" (click)=\"$event.stopPropagation()\">\n        <div class=\"search-input-wrapper\">\n            <input type=\"text\" [formControl]=\"searchFormControl\" placeholder=\"Search...\" #searchInput mat-menu-item trans-placeholder>\n            <button class=\"clear-search-input-button\" mat-icon-button (click)=\"clearSearchInput()\" *ngIf=\"searchFormControl.value\">\n                <mat-icon svgIcon=\"close\"></mat-icon>\n            </button>\n            <loading-indicator [isVisible]=\"loading$ | async\" class=\"small\"></loading-indicator>\n        </div>\n    </div>\n    <button type=\"button\" mat-menu-item *ngFor=\"let artist of artists$ | async\" (click)=\"selectArtist(artist)\">\n        <media-image class=\"result-image\" [media]=\"artist\"></media-image>\n        <div class=\"user-info\">\n            <div class=\"name\">{{artist.name}}</div>\n            <div class=\"email\" trans>Artist</div>\n        </div>\n    </button>\n    <div mat-menu-item disabled *ngIf=\"searchedOnce && !(artists$ | async).length\" trans>No artists found.</div>\n</mat-menu>\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef, Input,\n    OnInit,\n    ViewChild\n} from '@angular/core';\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {BehaviorSubject, Observable, of} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    finalize,\n    map,\n    switchMap\n} from 'rxjs/operators';\nimport {Search} from '../../web-player/search/search.service';\nimport {Artist} from '../../models/Artist';\n\n@Component({\n    selector: 'select-artist-control',\n    templateUrl: './select-artist-control.component.html',\n    styleUrls: ['./select-artist-control.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'tabindex': '0'},\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: SelectArtistControlComponent,\n        multi: true,\n    }]\n})\nexport class SelectArtistControlComponent implements OnInit, ControlValueAccessor {\n    @ViewChild('searchInput') searchInput: ElementRef<HTMLInputElement>;\n    @ViewChild('fakeInput') fakeInput: ElementRef<HTMLDivElement>;\n    @Input() listAll = false;\n    public isDisabled$ = new BehaviorSubject<boolean>(false);\n    public searchFormControl = new FormControl();\n    public loading$ = new BehaviorSubject(false);\n    public artists$ = new BehaviorSubject<Artist[]>([]);\n    public selectedArtist$ = new BehaviorSubject<Artist>(null);\n    private propagateChange: (artist: Artist) => void;\n    public searchedOnce = false;\n\n    constructor(private search: Search) {}\n\n    ngOnInit() {\n        this.bindToSearchControl();\n    }\n\n    public writeValue(value: Artist) {\n        this.selectedArtist$.next(value);\n    }\n\n    public registerOnChange(fn: (artist: Artist) => void) {\n        this.propagateChange = fn;\n    }\n\n    public registerOnTouched() {\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.isDisabled$.next(isDisabled);\n    }\n\n    private bindToSearchControl() {\n        this.searchFormControl.valueChanges.pipe(\n            debounceTime(150),\n            distinctUntilChanged(),\n            switchMap(query => this.searchArtists(query)),\n            catchError(() => of([])),\n        ).subscribe(users => {\n            this.searchedOnce = true;\n            this.artists$.next(users);\n        });\n    }\n\n    private searchArtists(query: string): Observable<Artist[]> {\n        this.loading$.next(true);\n        return this.search.suggestArtists({\n            query,\n            limit: 7,\n            listAll: this.listAll,\n        }).pipe(\n            finalize(() => this.loading$.next(false)),\n            map(response => response.artists),\n        );\n    }\n\n    public onMenuOpened() {\n        const menu = (document.querySelector('.select-artist-control-menu') as HTMLElement);\n        menu.style.width = this.fakeInput.nativeElement.getBoundingClientRect().width + 'px';\n\n        if (!this.searchedOnce) {\n            this.clearSearchInput();\n        }\n    }\n\n    public selectArtist(artist: Artist) {\n        this.selectedArtist$.next(artist);\n        this.propagateChange(artist);\n    }\n\n    public clearSearchInput() {\n        this.searchFormControl.setValue('');\n    }\n\n    public onMenuClosed() {\n        this.loading$.next(false);\n        this.clearSearchInput();\n    }\n}\n","<h1 trans>Tell us about yourself</h1>\n\n<form (ngSubmit)=\"requestAccess()\" ngNativeValidate [formGroup]=\"form\" class=\"many-inputs\" *ngIf=\"errors$ | async as errors\">\n    <ng-container *ngIf=\"requestType$ | async as requestType\">\n        <upload-image-control formControlName=\"image\" [compact]=\"true\"></upload-image-control>\n\n        <div class=\"input-container\" *ngIf=\"requestType !== 'become-artist'\">\n            <label for=\"backstage-artist\" trans>Select Artist</label>\n            <select-artist-control [listAll]=\"true\" id=\"backstage-artist\" formControlName=\"artist\"></select-artist-control>\n            <div class=\"error\" *ngIf=\"errors.artist_id\">{{errors.artist_id}}</div>\n        </div>\n\n        <div class=\"input-container\" *ngIf=\"requestType === 'become-artist'\">\n            <label for=\"backstage-name\" trans>Your artist name</label>\n            <input type=\"text\" id=\"backstage-name\" formControlName=\"artist_name\" required>\n            <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\n        </div>\n        <div class=\"inline-inputs-container many-inputs\">\n            <div class=\"input-container\">\n                <label for=\"backstage-first-name\" trans>First name</label>\n                <input type=\"text\" id=\"backstage-first-name\" formControlName=\"first_name\" required>\n                <div class=\"error\" *ngIf=\"errors.first_name\">{{errors.first_name}}</div>\n            </div>\n            <div class=\"input-container\">\n                <label for=\"backstage-last-name\" trans>Last name</label>\n                <input type=\"text\" id=\"backstage-last-name\" formControlName=\"last_name\" required>\n                <div class=\"error\" *ngIf=\"errors.last_name\">{{errors.last_name}}</div>\n            </div>\n        </div>\n        <div class=\"input-container\" *ngIf=\"requestType === 'claim-artist'\">\n            <label for=\"backstage-role\" trans>Role</label>\n            <select type=\"text\" id=\"backstage-role\" formControlName=\"role\" required>\n                <option [value]=\"null\" disabled trans>Select role</option>\n                <option value=\"artist\" trans>Artist</option>\n                <option value=\"agent\" trans>Agent</option>\n                <option value=\"composer\" trans>Composer</option>\n                <option value=\"label\" trans>Label</option>\n                <option value=\"manager\" trans>Manager</option>\n                <option value=\"musician\" trans>Musician</option>\n                <option value=\"producer\" trans>Producer</option>\n                <option value=\"publisher\" trans>Publisher</option>\n                <option value=\"songwriter\" trans>Songwriter</option>\n            </select>\n            <div class=\"error\" *ngIf=\"errors.role\">{{errors.role}}</div>\n        </div>\n        <div class=\"input-container\">\n            <label for=\"backstage-company\" trans>Company (optional)</label>\n            <input type=\"text\" id=\"backstage-company\" formControlName=\"company\">\n            <div class=\"error\" *ngIf=\"errors.company\">{{errors.company}}</div>\n        </div>\n\n        <div class=\"speed-up-container\">\n            <div class=\"speed-up-title\" trans>Speed up the process by connecting artist social media accounts or uploading your passport scan.</div>\n            <div class=\"speed-up-buttons\">\n                <button type=\"button\" class=\"twitter-btn speed-up-button\" mat-flat-button color=\"accent\" (click)=\"retrieveSocialProfile('twitter')\">\n                    <mat-icon class=\"social-icon\" svgIcon=\"twitter\"></mat-icon>\n                    <span trans>Connect to Twitter</span>\n                </button>\n                <button type=\"button\" mat-flat-button class=\"facebook-btn speed-up-button\" color=\"accent\" (click)=\"retrieveSocialProfile('facebook')\">\n                    <mat-icon class=\"social-icon\" svgIcon=\"facebook\"></mat-icon>\n                    <span trans>Connect to Facebook</span>\n                </button>\n                <button type=\"button\" mat-flat-button color=\"accent\" class=\"passport-btn speed-up-button\" [uploadButton]=\"{types: ['image/*']}\" (filesSelected)=\"uploadPassportScan($event)\">\n                    <mat-icon class=\"social-icon\" svgIcon=\"document-scanner\"></mat-icon>\n                    <span trans>Upload Passport Scan</span>\n                </button>\n            </div>\n            <div class=\"attached-verifications\">\n                <div class=\"facebook-profile verification\" *ngFor=\"let profile of socialProfiles$ | async | keyvalue\">\n                    <img class=\"verification-img\" [src]=\"profile.value.avatar\" alt=\"\">\n                    <div class=\"verification-details\">\n                        <div class=\"verification-name\" trans>{{profile.key}} Profile</div>\n                        <a [href]=\"profile.value.profileUrl\" target=\"_blank\" class=\"verification-url\">{{profile.value.profileUrl}}</a>\n                    </div>\n                    <button class=\"remove-verification\" type=\"button\" mat-icon-button (click)=\"removeSocialProfile(profile.key)\">\n                        <mat-icon svgIcon=\"close\"></mat-icon>\n                    </button>\n                </div>\n                <div class=\"passport-attachment verification\" *ngIf=\"uploadedPassportEntry$ | async as entry\">\n                    <mat-icon class=\"verification-img\" svgIcon=\"document-scanner\"></mat-icon>\n                    <div class=\"verification-details\">\n                        <div class=\"verification-name\" trans>Passport Scan</div>\n                        <div>{{entry.name}} ({{entry.file_size | formattedFileSize}})</div>\n                    </div>\n                    <button class=\"remove-verification\" type=\"button\" mat-icon-button (click)=\"removePassportUpload()\">\n                        <mat-icon svgIcon=\"close\"></mat-icon>\n                    </button>\n                </div>\n                <upload-progress-bar></upload-progress-bar>\n            </div>\n        </div>\n\n        <div class=\"backstage-action-buttons\">\n            <a class=\"backstage-action-button\" type=\"button\" routerLink=\"/backstage/requests\" mat-raised-button trans>Go Back</a>\n            <button class=\"backstage-action-button\" type=\"submit\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\" trans>Submit Request</button>\n        </div>\n    </ng-container>\n</form>\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {BackstagRequestService} from '../backstag-request.service';\nimport {FormBuilder} from '@angular/forms';\nimport {Settings} from '@common/core/config/settings.service';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {SocialAuthService} from '@common/auth/social-auth.service';\nimport {UploadedFile} from '@common/uploads/uploaded-file';\nimport {BehaviorSubject} from 'rxjs';\nimport {UploadQueueService} from '@common/uploads/upload-queue/upload-queue.service';\nimport {UploadApiConfig} from '@common/uploads/types/upload-api-config';\nimport {ImageUploadValidator} from '../../../web-player/image-upload-validator';\nimport {FileEntry} from '@common/uploads/types/file-entry';\nimport {ExternalSocialProfile} from '@common/auth/external-social-profile';\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\nimport {finalize} from 'rxjs/operators';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {BackstageRequestType} from '../backstage-request-type';\nimport {AppCurrentUser} from '../../../app-current-user';\n\n@Component({\n    selector: 'backstage-request-form',\n    templateUrl: './backstage-request-form.component.html',\n    styleUrls: ['./backstage-request-form.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BackstageRequestFormComponent {\n    public uploadedPassportEntry$ = new BehaviorSubject<FileEntry>(null);\n    public socialProfiles$ = new BehaviorSubject<{[key: string]: ExternalSocialProfile}>(null);\n    public errors$ = new BehaviorSubject<object>({});\n    public loading$ = new BehaviorSubject(false);\n    public requestType$ = new BehaviorSubject<BackstageRequestType>(null);\n    public form = this.fb.group({\n        artist: [],\n        artist_name: [this.currentUser.get('display_name')],\n        image: [this.currentUser.primaryArtist()?.image_small || this.currentUser.get('avatar')],\n        first_name: [this.currentUser.get('first_name')],\n        last_name: [this.currentUser.get('last_name')],\n        role: [],\n        company: [''],\n    });\n\n    constructor(\n        private backstage: BackstagRequestService,\n        private fb: FormBuilder,\n        public settings: Settings,\n        private currentUser: AppCurrentUser,\n        private socialAuth: SocialAuthService,\n        private uploadQueue: UploadQueueService,\n        private imageValidator: ImageUploadValidator,\n        private router: Router,\n        private route: ActivatedRoute,\n    ) {\n        this.requestType$.next(this.route.routeConfig.path.replace('requests/', '') as BackstageRequestType);\n        if (this.requestType$.value === BackstageRequestType.verifyArtist) {\n            this.form.get('artist').setValue(this.currentUser.primaryArtist());\n            this.form.get('artist').disable();\n        }\n        if (this.requestType$.value === BackstageRequestType.becomeArtist) {\n            this.form.get('artist').setValue(this.currentUser.artistPlaceholder());\n            this.form.get('artist').disable();\n        }\n        if (this.requestType$.value !== BackstageRequestType.claimArtist) {\n            this.form.get('role').setValue('artist');\n        }\n        if (this.requestType$.value !== BackstageRequestType.becomeArtist) {\n            this.form.get('image').disable();\n        }\n    }\n\n    public requestAccess() {\n        this.loading$.next(true);\n        const payload = {\n            artist_name: this.form.value.artist_name,\n            artist_id: this.form.value.artist?.id,\n            type: this.requestType$.value,\n            data: {\n                ...this.form.value,\n                passportScanEntryId: this.uploadedPassportEntry$.value?.id,\n                socialProfiles: this.socialProfiles$.value,\n            }\n        };\n        this.backstage.submitRequest(payload)\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.router.navigate(['/backstage/requests', response.request.id, 'request-submitted'], {replaceUrl: true});\n            }, (err: BackendErrorResponse) => this.errors$.next(err.errors));\n    }\n\n    public retrieveSocialProfile(serviceName: string) {\n        this.socialAuth.retrieveProfile(serviceName).then(profile => {\n            this.socialProfiles$.next({\n                ...this.socialProfiles$.value,\n                [serviceName]: profile,\n            });\n        });\n    }\n\n    public uploadPassportScan(files: UploadedFile[]) {\n        const params = {\n            uri: 'uploads/images',\n            httpParams: {diskPrefix: 'test', disk: 'private'},\n            validator: this.imageValidator\n        } as UploadApiConfig;\n        this.uploadQueue.start(files, params).subscribe(response => {\n            this.uploadedPassportEntry$.next(response.fileEntry);\n        });\n    }\n\n    public removePassportUpload() {\n        this.uploadedPassportEntry$.next(null);\n    }\n\n    public removeSocialProfile(serviceName: string) {\n        const profiles = {...this.socialProfiles$.value};\n        delete profiles[serviceName];\n        this.socialProfiles$.next(profiles);\n    }\n}\n","import {Component, OnInit, ChangeDetectionStrategy} from '@angular/core';\n\n@Component({\n    selector: 'backstage-request-submitted',\n    templateUrl: './backstage-request-submitted.component.html',\n    styleUrls: ['./backstage-request-submitted.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BackstageRequestSubmittedComponent {\n}\n","<div class=\"text-align-center\">\n    <mat-icon class=\"check-icon\" svgIcon=\"check\"></mat-icon>\n</div>\n\n<h1 trans>We've got your request</h1>\n\n<ul>\n    <li>Our support team will review it and send you an email within 3 days!</li>\n    <li>Don't submit another request until you hear from us.</li>\n    <li>If this artist profile is already claimed, ask an admin on your team to invite you.</li>\n</ul>\n\n<div class=\"backstage-action-buttons\">\n    <a routerLink=\"/\" class=\"backstage-action-button\" mat-flat-button color=\"accent\" trans>Got It</a>\n</div>\n","<h1 trans [transValues]=\"{sitename: settings.get('branding.site_name')}\">Get Access to :sitename for Artists</h1>\n<h2 trans>First, select the type of your request.</h2>\n\n<div class=\"claim-row\">\n    <a class=\"claim-col\" [routerLink]=\"[currentUserIsArtist ? 'verify-artist' : 'become-artist']\">\n        <div class=\"title\" trans>\n            <ng-container *ngIf=\"currentUserIsArtist\">Get verified</ng-container>\n            <ng-container *ngIf=\"!currentUserIsArtist\">Become an artist</ng-container>\n        </div>\n        <img src=\"client/assets/images/backstage/claim-artist.jpg\" alt=\"\">\n    </a>\n    <a class=\"claim-col\" routerLink=\"claim-artist\">\n        <div class=\"title\" trans>Claim existing artist</div>\n        <img src=\"client/assets/images/backstage/claim-label.jpg\" alt=\"\">\n    </a>\n</div>\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {Settings} from '@common/core/config/settings.service';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {AppCurrentUser} from '../../../app-current-user';\n\n@Component({\n    selector: 'backstage-type-selector',\n    templateUrl: './backstage-type-selector.component.html',\n    styleUrls: ['./backstage-type-selector.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BackstageTypeSelectorComponent {\n    public currentUserIsArtist = false;\n\n    constructor(\n        public settings: Settings,\n        private currentUser: AppCurrentUser,\n    ) {\n        this.currentUserIsArtist = !!this.currentUser.primaryArtist();\n    }\n}\n","<div class=\"datatable\">\n    <datatable-header pluralResourceName=\"albums\">\n        <ng-container leftContent>\n            <div class=\"new-album-container\">\n                <a mat-raised-button color=\"accent\" [routerLink]=\"urls.createAlbum(insideAdmin)\" [queryParams]=\"{artist: encodedArtist}\" *ngIf=\"currentUser.hasPermission('music.create')\" [disabled]=\"!artist\" trans>New Album</a>\n                <p class=\"save-message\" *ngIf=\"!artist\">\n                    <mat-icon svgIcon=\"warning\"></mat-icon>\n                    <span trans>Save artist first to enable album creation.</span>\n                </p>\n            </div>\n        </ng-container>\n    </datatable-header>\n    <table class=\"material-table\">\n        <thead>\n        <tr>\n            <th table-sort-header=\"name\" trans>Album</th>\n            <th table-sort-header trans>Release Date</th>\n            <th table-sort-header=\"views\" trans>Views</th>\n            <th table-sort-header=\"tracks_count\" trans>Number Of Tracks</th>\n            <th></th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let album of albums$ | async\">\n            <td>\n                <div class=\"column-with-image\">\n                    <media-image [media]=\"album\" default=\"album\"></media-image>\n                    <span>{{album.name}}</span>\n                </div>\n            </td>\n            <td data-label=\"Release Date\">{{album.release_date ? album.release_date: '&ndash;'}}</td>\n            <td data-label=\"Views\">{{album.views}}</td>\n            <td data-label=\"Number of Tracks\">{{album.tracks_count ? album.tracks_count : '&ndash;'}}</td>\n            <td class=\"edit-column\">\n                <a [routerLink]=\"urls.editAlbum(album, insideAdmin)\" [queryParams]=\"{artist: encodedArtist}\" mat-icon-button [matTooltip]=\"'Edit album' | trans\">\n                    <mat-icon svgIcon=\"edit\"></mat-icon>\n                </a>\n                <button mat-icon-button (click)=\"maybeDeleteAlbum(album)\" [matTooltip]=\"'Delete album' | trans\" *ngIf=\"currentUser.hasPermission('albums.delete')\" trans>\n                    <mat-icon svgIcon=\"delete\"></mat-icon>\n                </button>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n    <no-results-message svgImage=\"music.svg\" *ngIf=\"!datatable.data.length\">\n        <span primary-text trans>This artist has no albums yet</span>\n    </no-results-message>\n</div>\n","import {\n    Component,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewEncapsulation\n} from '@angular/core';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {WebPlayerImagesService} from '../../../../web-player/web-player-images.service';\nimport {Artist} from '../../../../models/Artist';\nimport {Album} from '../../../../models/Album';\nimport {Albums} from '../../../../web-player/albums/albums.service';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {ConfirmModalComponent} from '@common/core/ui/confirm-modal/confirm-modal.component';\nimport {DatatableService} from '@common/datatable/datatable.service';\nimport {Observable} from 'rxjs';\nimport {WebPlayerUrls} from '../../../../web-player/web-player-urls.service';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'artist-albums-table',\n    templateUrl: './artist-albums-table.component.html',\n    styleUrls: ['./artist-albums-table.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [DatatableService],\n})\nexport class ArtistAlbumsTableComponent implements OnInit, OnChanges {\n    @Input() artist: Artist;\n    @Input() albums: Album[] = [];\n    albums$ = this.datatable.data$ as Observable<Album[]>;\n    encodedArtist: string;\n    insideAdmin: boolean;\n    constructor(\n        private modal: Modal,\n        private albumsApi: Albums,\n        public currentUser: CurrentUser,\n        public images: WebPlayerImagesService,\n        public datatable: DatatableService<Album>,\n        public urls: WebPlayerUrls,\n        private router: Router,\n    ) {}\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.artist) {\n            this.encodedArtist = btoa(JSON.stringify({\n                id: this.artist.id,\n                name: this.artist.name,\n                image_small: this.artist.image_small\n            }));\n        }\n    }\n\n    ngOnInit() {\n        this.insideAdmin = this.router.url.includes('admin');\n        this.datatable.init({\n            initialData: this.albums ? this.albums : []\n        });\n    }\n\n    public maybeDeleteAlbum(album: Album) {\n        this.modal.show(ConfirmModalComponent, {\n            title: 'Delete Album',\n            body: 'Are you sure you want to delete this album?',\n            ok: 'Delete'\n        }).beforeClosed().subscribe(async (confirmed) => {\n            if ( ! confirmed) return;\n            this.albumsApi.delete([album.id]).subscribe(() => {\n                this.datatable.data = this.datatable.data.filter(a => a.id !== album.id);\n            });\n        });\n    }\n}\n","<div class=\"material-panel\">\n    <form class=\"edit-main-info\" (ngSubmit)=\"createOrUpdate()\" [formGroup]=\"form\" ngNativeValidate>\n        <div class=\"left-col\">\n            <upload-image-control formControlName=\"image_small\" diskPrefix=\"artist\"></upload-image-control>\n            <button type=\"submit\" mat-raised-button color=\"accent\" class=\"main-button\" *ngIf=\"artist\" trans>Update</button>\n            <button type=\"submit\" mat-raised-button color=\"accent\" class=\"main-button\" *ngIf=\"!artist\" trans>Create</button>\n        </div>\n        <div class=\"right-col many-inputs admin-artist-edit-inputs\">\n\n            <mat-tab-group color=\"accent\" animationDuration=\"0ms\">\n                <mat-tab [label]=\"'Details' | trans\">\n                    <div class=\"many-inputs tab\">\n                        <div class=\"input-container\">\n                            <label for=\"artist-name\" trans>Name</label>\n                            <input type=\"text\" formControlName=\"name\" id=\"artist-name\" [readOnly]=\"!insideAdmin\" required>\n                            <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\n                        </div>\n                        <div class=\"input-container\">\n                            <label for=\"artist-genres\" trans>Genres</label>\n                            <chip-input placeholder=\"+Add genre\" id=\"artist-genres\" [suggestFn]=\"suggestGenreFn\" formControlName=\"genres\"></chip-input>\n                            <div class=\"error\" *ngIf=\"errors.genres\">{{errors.genres}}</div>\n                        </div>\n                        <ng-container *ngIf=\"insideAdmin\">\n                            <div class=\"input-container\" *ngIf=\"settings.get('spotify_is_setup')\">\n                                <label for=\"artist-spotify-id\" trans>Spotify ID</label>\n                                <input type=\"text\" id=\"artist-spotify-id\" formControlName=\"spotify_id\" minlength=\"22\" maxlength=\"22\">\n                            </div>\n                            <div class=\"setting-toggle-container\">\n                                <mat-slide-toggle formControlName=\"verified\" trans>Verified</mat-slide-toggle>\n                                <div class=\"error\" *ngIf=\"errors.verified\">{{errors.verified}}</div>\n                            </div>\n                        </ng-container>\n                    </div>\n                </mat-tab>\n                <mat-tab [label]=\"'Links' | trans\">\n                    <profile-links-form-control formControlName=\"links\"></profile-links-form-control>\n                </mat-tab>\n                <mat-tab [label]=\"'Biography' | trans\">\n                    <div class=\"many-inputs tab\">\n                        <div class=\"input-container\">\n                            <label for=\"artist-country\" trans>Country</label>\n                            <input formControlName=\"country\" id=\"artist-country\">\n                        </div>\n                        <div class=\"input-container\">\n                            <label for=\"artist-city\" trans>City</label>\n                            <input formControlName=\"city\" id=\"artist-city\">\n                        </div>\n                        <div class=\"input-container\">\n                            <label for=\"artist-bio\" trans>Biography</label>\n                            <textarea formControlName=\"description\" id=\"artist-bio\" rows=\"8\"></textarea>\n                        </div>\n                        <div class=\"profile-images\">\n                            <div class=\"profile-images-title\" trans>Biography Images</div>\n                            <div class=\"profile-images-wrapper\" formArrayName=\"profile_images\">\n                                <upload-image-control\n                                    *ngFor=\"let image of profileImagesArray().controls; index as i\"\n                                    [formControlName]=\"i\"\n                                    (fileDeleted)=\"removeProfileImage(i)\"\n                                    [uploadConfig]=\"{httpParams: {diskPrefix: 'bio'}}\"\n                                    [buttonText]=\"image.value ? 'Replace Image' : 'Upload Image'\"\n                                ></upload-image-control>\n                            </div>\n                        </div>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n    </form>\n\n    <artist-albums-table [albums]=\"albums\" [artist]=\"artist\"></artist-albums-table>\n</div>\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    OnInit\n} from '@angular/core';\nimport {Settings} from '@common/core/config/settings.service';\nimport {Artists} from '../../../web-player/artists/artists.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Artist} from '../../../models/Artist';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {UploadQueueService} from '@common/uploads/upload-queue/upload-queue.service';\nimport {FormArray, FormBuilder, FormControl} from '@angular/forms';\nimport {GENRE_MODEL} from '../../../models/Genre';\nimport {map} from 'rxjs/operators';\nimport {Search} from '../../../web-player/search/search.service';\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\nimport {Album} from '../../../models/Album';\nimport {ComponentCanDeactivate} from '@common/guards/pending-changes/component-can-deactivate';\nimport {WebPlayerUrls} from '../../../web-player/web-player-urls.service';\n\n@Component({\n    selector: 'crupdate-artist-page',\n    templateUrl: './crupdate-artist-page.component.html',\n    styleUrls: ['./crupdate-artist-page.component.scss'],\n    providers: [UploadQueueService],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CrupdateArtistPageComponent implements OnInit, ComponentCanDeactivate {\n    public insideAdmin = false;\n    public errors: {[K in keyof Partial<Artist>]: string} = {};\n    public artist: Artist;\n    public albums: Album[] = [];\n\n    public form = this.fb.group({\n        name: [''],\n        verified: [''],\n        image_small: [''],\n        spotify_id: [''],\n        genres: [[]],\n        description: [''],\n        country: [''],\n        city: [''],\n        profile_images: this.fb.array([]),\n        links: [[]],\n    });\n\n    constructor(\n        public settings: Settings,\n        private uploadQueue: UploadQueueService,\n        private artists: Artists,\n        private route: ActivatedRoute,\n        private toast: Toast,\n        private router: Router,\n        private fb: FormBuilder,\n        private cd: ChangeDetectorRef,\n        private search: Search,\n        private urls: WebPlayerUrls,\n    ) {}\n\n    ngOnInit() {\n        this.bindToRouteData();\n        this.insideAdmin = this.router.url.includes('admin');\n    }\n\n    public createOrUpdate() {\n        this.artist ? this.update() : this.create();\n    }\n\n    public create() {\n        return this.artists.create(this.form.value).subscribe(response => {\n            this.form.markAsPristine();\n            this.artist = response.artist;\n            this.toast.open('Artist created.');\n            this.router.navigate(this.urls.editArtist(this.artist.id, true), {replaceUrl: true});\n            this.errors = {};\n        }, (errResponse: BackendErrorResponse) => {\n            this.errors = errResponse.errors;\n            this.cd.detectChanges();\n        });\n    }\n\n    public update() {\n        return this.artists.update(this.artist.id, this.form.value).subscribe(() => {\n            this.form.markAsPristine();\n            this.toast.open('Artist updated.');\n            this.router.navigate(['/admin/artists']);\n        }, (errResponse: BackendErrorResponse) => {\n            this.errors = errResponse.errors;\n            this.cd.detectChanges();\n        });\n    }\n\n    public profileImagesArray() {\n        return this.form.get('profile_images') as FormArray;\n    }\n\n    private bindToRouteData() {\n        this.route.data.subscribe((data: {api: {artist?: Artist, albums?: Album[]}}) => {\n            if (data.api) {\n                this.artist = data.api.artist;\n                this.albums = data.api.albums;\n                this.form.patchValue({\n                    name: data.api.artist.name,\n                    verified: data.api.artist.verified,\n                    image_small: data.api.artist.image_small,\n                    spotify_id: data.api.artist.spotify_id,\n                    genres: (data.api.artist.genres || []).map(g => g.name),\n                    description: data.api.artist.profile?.description,\n                    country: data.api.artist.profile?.country,\n                    city: data.api.artist.profile?.city,\n                    profile_images: [],\n                    links: data.api.artist.links,\n                });\n                (data.api.artist.profile_images || []).forEach(img => {\n                    this.addProfileImage(img.url);\n                });\n            }\n        });\n        this.addProfileImage();\n    }\n\n    public addProfileImage(url = '') {\n        this.profileImagesArray().push(new FormControl(url));\n    }\n\n    public removeProfileImage(index: number) {\n        this.profileImagesArray().removeAt(index);\n    }\n\n    public suggestGenreFn = (query: string) => {\n        return this.search.media(query, {types: [GENRE_MODEL], limit: 5})\n            .pipe(map(response => response.results.genres.map(genre => genre.name)));\n    }\n\n    public canDeactivate(): boolean {\n        return !this.form.dirty;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    Resolve,\n    Router,\n    RouterStateSnapshot\n} from '@angular/router';\nimport {Artists, GetArtistResponse} from '../../../web-player/artists/artists.service';\nimport {catchError, mergeMap} from 'rxjs/operators';\nimport {EMPTY, of} from 'rxjs';\nimport {BackendResponse} from '@common/core/types/backend-response';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EditArtistPageResolver implements Resolve<GetArtistResponse> {\n\n    constructor(\n        private artists: Artists,\n        private router: Router\n    ) {}\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): BackendResponse<GetArtistResponse> {\n        const params = {\n            with: ['simplifiedAlbums', 'genres', 'profile'],\n            albumsPerPage: 50,\n            forEditing: true,\n        };\n        const id = +route.paramMap.get('id');\n        return this.artists.get(id, params).pipe(\n            catchError(() => {\n                this.router.navigate(['/']);\n                return EMPTY;\n            }),\n            mergeMap(response => {\n                if (response.artist) {\n                    return of(response);\n                } else {\n                    this.router.navigate(['/']);\n                    return EMPTY;\n                }\n            })\n        );\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {UploadValidator} from '@common/uploads/validation/upload-validator';\nimport {FileSizeValidation} from '@common/uploads/validation/validations/file-size-validation';\nimport {convertToBytes} from '@common/core/utils/convertToBytes';\nimport {FileTypeValidation} from '@common/uploads/validation/validations/file-type-validation';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AudioUploadValidator extends UploadValidator {\n    protected readonly DEFAULT_MAX_SIZE_MB = 50;\n    public showToast = true;\n\n    protected initValidations() {\n        const validations = [\n            new FileSizeValidation(\n                {maxSize: this.getMaxFileSize()},\n                this.i18n\n            ),\n            new FileTypeValidation({types: ['audio', 'video']}, this.i18n),\n        ];\n\n        this.validations.push(...validations);\n    }\n\n    protected getMaxFileSize(): number {\n        return this.settings.get(\n            'uploads.max_size',\n            convertToBytes(this.DEFAULT_MAX_SIZE_MB, 'MB')\n        );\n    }\n}\n","<div class=\"input-container\">\n    <label [for]=\"id\" trans>Artists</label>\n    <input\n        type=\"text\"\n        [id]=\"id\"\n        [formControl]=\"searchControl\"\n        [matAutocomplete]=\"artistAuto\"\n        placeholder=\"Search artists...\"\n        trans-placeholder\n        #searchInput\n    >\n\n    <mat-chip-list [selectable]=\"false\">\n        <mat-chip class=\"chip-with-image\" *ngFor=\"let artist of value$ | async\" [removable]=\"true\" (removed)=\"deselectArtist(artist)\">\n            <img [src]=\"artist.image_small\" [alt]=\"artist.name\">\n            {{artist.name}}\n            <mat-icon svgIcon=\"cancel\" matChipRemove></mat-icon>\n        </mat-chip>\n    </mat-chip-list>\n\n    <mat-autocomplete #artistAuto=\"matAutocomplete\" class=\"media-autocomplete-panel\" (optionSelected)=\"selectArtist($event.option.value)\" [displayWith]=\"displayFn\">\n        <mat-option *ngFor=\"let artist of searchResults$ | async\" [value]=\"artist\">\n            <img [src]=\"artist.image_small\" [alt]=\"artist.name + ' image'\">\n            <span>{{artist.name}}</span>\n        </mat-option>\n    </mat-autocomplete>\n\n    <div class=\"error\" *ngIf=\"error\">{{error}}</div>\n</div>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    Input,\n    OnInit,\n    ViewChild\n} from '@angular/core';\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {BehaviorSubject, fromEvent, of as observableOf} from 'rxjs';\nimport {UploadQueueService} from '@common/uploads/upload-queue/upload-queue.service';\nimport {debounceTime, distinctUntilChanged, take} from 'rxjs/operators';\nimport {Search} from '../../../web-player/search/search.service';\nimport {Artist} from '../../../models/Artist';\nimport {CurrentUser} from '@common/auth/current-user';\n\n@Component({\n    selector: 'track-artist-control',\n    templateUrl: './track-artist-control.component.html',\n    styleUrls: ['./track-artist-control.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'class': 'custom-control'},\n    providers: [UploadQueueService, {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: TrackArtistControlComponent,\n        multi: true,\n    }]\n})\nexport class TrackArtistControlComponent implements OnInit, AfterViewInit, ControlValueAccessor {\n    @ViewChild('searchInput') searchInput: ElementRef<HTMLInputElement>;\n    @Input() error: string;\n    @Input() id: string;\n\n    public searchControl = new FormControl();\n    public value$ = new BehaviorSubject<Artist[]>([]);\n    public searchResults$ = new BehaviorSubject<Artist[]>([]);\n    private propagateChange: (artists: Artist[]) => void;\n\n    constructor(\n        private search: Search,\n        public currentUser: CurrentUser,\n    ) {}\n\n    ngOnInit() {\n        this.bindSearchControl();\n    }\n\n    ngAfterViewInit() {\n        fromEvent(this.searchInput.nativeElement, 'focus')\n            .pipe(take(1))\n            .subscribe(() => {\n                this.findMatches();\n            });\n    }\n\n    public writeValue(value: Artist[]) {\n        this.value$.next(value);\n    }\n\n    public registerOnChange(fn: (artists: Artist[]) => void) {\n        this.propagateChange = fn;\n    }\n\n    public registerOnTouched() {}\n\n    public deselectArtist(artist: Artist) {\n        const newArtists = this.value$.value.filter(a => a.id !== artist.id);\n        this.value$.next(newArtists);\n        this.propagateChange(this.value$.value);\n    }\n\n    public selectArtist(artist: Artist) {\n        if (this.value$.value.findIndex(a => a.id === artist.id) === -1) {\n            this.value$.next([...this.value$.value, artist]);\n            this.propagateChange(this.value$.value);\n        }\n        this.searchInput.nativeElement.blur();\n    }\n\n    private bindSearchControl() {\n        this.searchControl.valueChanges\n            .pipe(\n                distinctUntilChanged(),\n                debounceTime(250),\n            ).subscribe(query => {\n                if (typeof query !== 'string') {\n                    return observableOf([]);\n                }\n                this.findMatches(query);\n            });\n    }\n\n    public findMatches(query?: string) {\n        this.search.suggestArtists({query, limit: 7})\n            .subscribe(r => this.searchResults$.next(r.artists));\n    }\n\n    public displayFn(_) {\n        return null;\n    }\n}\n","<div class=\"meta\">\n    <div class=\"name\">{{upload.uploadedFile.name}}</div>\n    <div class=\"time-left\" *ngIf=\"(progress.percentage && progress.percentage < 100) && !upload.error$.value\">\n        {{progress.eta}}\n        <span trans>left</span>\n    </div>\n    <div class=\"actions\">\n        <mat-icon\n                class=\"error-icon action-icon\"\n                svgIcon=\"error-outline\"\n                *ngIf=\"upload.error$ | async as error; else noError\"\n                [matTooltip]=\"error | trans\"\n                matTooltipPosition=\"left\"\n        ></mat-icon>\n        <ng-template #noError>\n            <span *ngIf=\"upload.completed\" trans>Upload complete.</span>\n            <span *ngIf=\"upload.processing$ | async\" trans>We are processing your track for playback…</span>\n            <span class=\"cancel-button\" *ngIf=\"!(upload.processing$ | async) && !upload.completed\" (click)=\"upload.cancel()\" trans>Cancel</span>\n        </ng-template>\n    </div>\n</div>\n<mat-progress-bar [mode]=\"(upload.processing$ | async) ? 'indeterminate' : 'determinate'\" color=\"accent\" [value]=\"progress.percentage\"></mat-progress-bar>\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit\n} from '@angular/core';\nimport {UploadQueueItem, UploadQueueItemProgress} from '@common/uploads/upload-queue/upload-queue-item';\nimport {throttleTime} from 'rxjs/operators';\nimport {animationFrameScheduler, Subscription} from 'rxjs';\n\n@Component({\n    selector: 'track-upload-header',\n    templateUrl: './track-upload-header.component.html',\n    styleUrls: ['./track-upload-header.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TrackUploadHeaderComponent implements OnChanges, OnDestroy {\n    @Input() upload: UploadQueueItem;\n    private subscription: Subscription;\n    public progress: UploadQueueItemProgress;\n\n    constructor(private cd: ChangeDetectorRef) {}\n\n\n    ngOnChanges() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n        this.subscription = this.upload.progress$.pipe(\n            // material progress bar animation lasts 250ms\n            throttleTime(260, animationFrameScheduler, {leading: true, trailing: true}),\n        ).subscribe(progress => {\n            this.progress = progress;\n            this.cd.detectChanges();\n        });\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n}\n","<div class=\"many-inputs\">\n    <div class=\"input-container\">\n        <div class=\"fake-label\" trans>Album</div>\n        <div class=\"fake-input\" #fakeInput tabindex=\"0\" [matMenuTriggerFor]=\"menu\" (menuOpened)=\"onMenuOpened()\" (menuClosed)=\"onMenuClosed()\">\n            <ng-container *ngIf=\"selectedAlbum$ | async as selectedAlbum; else anyAlbum\">\n                <media-image [media]=\"selectedAlbum\"></media-image>\n                <div class=\"title-name\">{{selectedAlbum.name}}</div>\n            </ng-container>\n            <ng-template #anyAlbum>\n                <div class=\"title-name\" trans>None</div>\n            </ng-template>\n            <div class=\"arrow-container\">\n                <div class=\"arrow\"></div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<mat-menu #menu=\"matMenu\" class=\"add-album-control-menu\">\n    <div class=\"input-container search-input-container\" (click)=\"$event.stopPropagation()\">\n        <div class=\"search-input-wrapper\">\n            <input type=\"text\" [formControl]=\"searchFormControl\" placeholder=\"Search...\" (blur)=\"searchInput.focus()\" #searchInput mat-menu-item trans-placeholder>\n            <button class=\"clear-search-input-button\" mat-icon-button (click)=\"clearSearchInput()\" *ngIf=\"searchFormControl.value\">\n                <mat-icon svgIcon=\"close\"></mat-icon>\n            </button>\n            <loading-indicator [isVisible]=\"loading$ | async\" class=\"small\"></loading-indicator>\n        </div>\n    </div>\n    <button mat-menu-item (click)=\"selectAlbum(null)\">\n        <media-image default=\"album\"></media-image>\n        <div class=\"info any-user-info\">\n            <div class=\"name\" trans>No Album</div>\n        </div>\n    </button>\n    <button mat-menu-item *ngFor=\"let album of results$ | async\" (click)=\"selectAlbum(album)\">\n        <media-image [media]=\"album\"></media-image>\n        <div class=\"user-info\">\n            <div class=\"name\">{{album.name}}</div>\n            <artists-links-list class=\"email\" [artists]=\"album.artists\"></artists-links-list>\n        </div>\n    </button>\n    <button mat-menu-item disabled *ngIf=\"searchedOnce && !(results$ | async).length\" trans>No albums found.</button>\n</mat-menu>\n","import {ChangeDetectionStrategy, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {catchError, debounceTime, distinctUntilChanged, finalize, map, switchMap} from 'rxjs/operators';\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {BehaviorSubject, Observable, of} from 'rxjs';\nimport {Album, ALBUM_MODEL} from '../../../models/Album';\nimport {Search} from '../../../web-player/search/search.service';\nimport {CurrentUser} from '@common/auth/current-user';\n\n@Component({\n    selector: 'album-control',\n    templateUrl: './album-control.component.html',\n    styleUrls: ['./album-control.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: AlbumControlComponent,\n        multi: true,\n    }]\n})\nexport class AlbumControlComponent implements ControlValueAccessor, OnInit {\n    @ViewChild('searchInput', {static: true}) searchInput: ElementRef<HTMLInputElement>;\n    @ViewChild('fakeInput') fakeInput: ElementRef<HTMLDivElement>;\n    public searchFormControl = new FormControl();\n    public loading$ = new BehaviorSubject(false);\n    public results$ = new BehaviorSubject<Album[]>([]);\n    public selectedAlbum$ = new BehaviorSubject<Album>(null);\n    private propagateChange: (album: Album) => void;\n    public searchedOnce = false;\n\n    constructor(\n        private search: Search,\n        public currentUser: CurrentUser,\n    ) {}\n\n    ngOnInit() {\n        this.bindToSearchControl();\n    }\n\n    public writeValue(value: Album) {\n        this.selectedAlbum$.next(value);\n    }\n\n    public registerOnChange(fn: (album: Album) => void) {\n        this.propagateChange = fn;\n    }\n\n    public registerOnTouched() {}\n\n    private bindToSearchControl() {\n        this.searchFormControl.valueChanges.pipe(\n            debounceTime(150),\n            distinctUntilChanged(),\n            switchMap(query => this.searchAlbums(query)),\n            catchError(() => of([])),\n        ).subscribe(albums => {\n            this.searchedOnce = true;\n            this.results$.next(albums);\n        });\n    }\n\n    private searchAlbums(query: string): Observable<Album[]> {\n        this.loading$.next(true);\n        return this.search.suggestAlbums({query, limit: 7})\n            .pipe(\n                finalize(() =>  this.loading$.next(false)),\n                map(response => response.albums),\n            );\n    }\n\n    public onMenuOpened() {\n        const menu = (document.querySelector('.add-album-control-menu') as HTMLElement);\n        menu.style.width = this.fakeInput.nativeElement.getBoundingClientRect().width + 'px';\n\n        if (!this.searchedOnce) {\n            this.clearSearchInput();\n        }\n    }\n\n    public selectAlbum(album: Album) {\n        this.selectedAlbum$.next(album);\n        this.propagateChange(album);\n    }\n\n    public clearSearchInput() {\n        this.searchFormControl.setValue('');\n    }\n\n    public onMenuClosed() {\n        this.loading$.next(false);\n        this.clearSearchInput();\n    }\n}\n","<form (ngSubmit)=\"submit()\" class=\"many-inputs\" [formGroup]=\"form\" *ngIf=\"errors$ | async as errors\">\n    <track-upload-header [upload]=\"uploadQueueItem\" *ngIf=\"uploadQueueItem\"></track-upload-header>\n    <div class=\"inline-form\" *ngIf=\"albumForm\" [formGroup]=\"form\">\n        <ng-content></ng-content>\n        <div class=\"input-container\">\n            <label [for]=\"'track-form-' + uniqueId + '-name'\" class=\"hidden\" trans>Title</label>\n            <input type=\"text\" [id]=\"'track-form-' + uniqueId + '-name'\" formControlName=\"name\" required>\n        </div>\n        <div class=\"actions\">\n            <button type=\"button\" [class.active]=\"expanded\" mat-icon-button (click)=\"toggleExpandedState()\">\n                <mat-icon svgIcon=\"edit\"></mat-icon>\n            </button>\n            <button type=\"button\" (click)=\"maybeCancel()\" mat-icon-button>\n                <mat-icon svgIcon=\"delete\"></mat-icon>\n            </button>\n        </div>\n    </div>\n    <div [@bodyExpansion]=\"getExpandedState()\" class=\"full-form\">\n        <div class=\"full-form-container\" [class.inside-album]=\"albumForm\">\n            <div class=\"left-column\">\n                <upload-image-control formControlName=\"image\" [defaultBackground]=\"defaultImage$ | async\" diskPrefix=\"track_image\"></upload-image-control>\n                <button mat-flat-button color=\"accent\" type=\"button\" class=\"left-column-action-button\" (click)=\"openUploadMusicModal()\">\n                    <span *ngIf=\"this.track\" trans>Replace File</span>\n                    <span *ngIf=\"!this.track\" trans>Upload Track</span>\n                </button>\n            </div>\n            <div class=\"many-inputs fields-container\">\n                <div class=\"input-container\" *ngIf=\"!albumForm\">\n                    <label [for]=\"'track-form-' + uniqueId + '-name'\" trans>Title</label>\n                    <input type=\"text\" [id]=\"'track-form-' + uniqueId + '-name'\" formControlName=\"name\" required>\n                    <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\n                </div>\n\n                <album-control formControlName=\"album\" [id]=\"'track-form-' + uniqueId + '-album_id'\" *ngIf=\"!albumForm\"></album-control>\n                <track-artist-control [error]=\"errors.artists\" [id]=\"'track-form-' + uniqueId + '-artists'\" formControlName=\"artists\"></track-artist-control>\n\n                <div class=\"input-container\">\n                    <label [for]=\"'track-form-' + uniqueId + '-duration'\" trans>Duration (ms)</label>\n                    <input type=\"number\" [id]=\"'track-form-' + uniqueId + '-duration'\" formControlName=\"duration\" min=\"1\" required>\n                    <div class=\"error\" *ngIf=\"errors.duration\">{{errors.duration}}</div>\n                </div>\n\n                <div class=\"input-container\" *ngIf=\"insideAdmin()\">\n                    <label [for]=\"'track-form-' + uniqueId + '-track-youtube-id'\" trans>Youtube Video ID</label>\n                    <input type=\"text\" [id]=\"'track-form-' + uniqueId + '-track-youtube-id'\" formControlName=\"youtube_id\" minlength=\"1\" maxlength=\"30\">\n                    <div class=\"error\" *ngIf=\"errors.youtube_id\">{{errors.youtube_id}}</div>\n                    <p>ID only. https://www.youtube.com/embed?v=<strong>EPyh41zPg4Z</strong></p>\n                </div>\n\n                <div class=\"input-container\" *ngIf=\"insideAdmin()\">\n                    <label [for]=\"'track-form-' + uniqueId + '-track-url'\" trans>Track Url</label>\n                    <input type=\"url\" [id]=\"'track-form-' + uniqueId + '-track-url'\" formControlName=\"url\" minlength=\"1\" maxlength=\"191\">\n                    <div class=\"error\" *ngIf=\"errors.url\">{{errors.url}}</div>\n                    <p>Remote or local url to music or video file for this track. If available, this will always play instead of youtube video.</p>\n                </div>\n\n                <div class=\"input-container\" *ngIf=\"insideAdmin && settings.get('spotify_is_setup')\">\n                    <label for=\"track-spotify-id\" trans>Spotify ID</label>\n                    <input type=\"text\" id=\"track-spotify-id\" formControlName=\"spotify_id\" minlength=\"22\" maxlength=\"22\">\n                </div>\n\n                <div class=\"input-container\">\n                    <label [for]=\"'track-form-' + uniqueId + '-track-genres'\" trans>Genres</label>\n                    <chip-input placeholder=\"+Add genre\" [id]=\"'track-form-' + uniqueId + '-track-genres'\" [suggestFn]=\"suggestGenreFn\" formControlName=\"genres\"></chip-input>\n                    <div class=\"error\" *ngIf=\"errors.genres\">{{errors.genres}}</div>\n                </div>\n\n                <div class=\"input-container\">\n                    <label [for]=\"'track-form-' + uniqueId + '-track-tags'\" trans>Tags</label>\n                    <chip-input placeholder=\"+Add tag\" [id]=\"'track-form-' + uniqueId + '-track-tags'\" [suggestFn]=\"suggestTagFn\" formControlName=\"tags\"></chip-input>\n                    <div class=\"error\" *ngIf=\"errors.tags\">{{errors.tags}}</div>\n                </div>\n\n                <div class=\"input-container\">\n                    <label [for]=\"'track-form-' + uniqueId + '-track-description'\" trans>Description</label>\n                    <textarea type=\"text\" [id]=\"'track-form-' + uniqueId + '-track-description'\" formControlName=\"description\" minlength=\"10\" maxlength=\"999\" rows=\"5\"></textarea>\n                </div>\n\n                <button type=\"submit\" mat-raised-button *ngIf=\"!albumForm\" color=\"accent\" [disabled]=\"(loading$ | async) || (uploadQueueItem && !uploadQueueItem.completed)\" trans>Save</button>\n                <button type=\"button\" mat-button (click)=\"maybeCancel()\" *ngIf=\"!albumForm && !track\" trans>Cancel</button>\n            </div>\n        </div>\n    </div>\n</form>\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges\n} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {BehaviorSubject} from 'rxjs';\nimport {Tracks} from '../../web-player/tracks/tracks.service';\nimport {Track} from '../../models/Track';\nimport {UploadQueueItem} from '@common/uploads/upload-queue/upload-queue-item';\nimport {DefaultImagePaths} from '../../web-player/default-image-paths.enum';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {\n    matExpansionAnimations,\n    MatExpansionPanelState\n} from '@angular/material/expansion';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {ConfirmModalComponent} from '@common/core/ui/confirm-modal/confirm-modal.component';\nimport {finalize, map} from 'rxjs/operators';\nimport {openUploadWindow} from '@common/uploads/utils/open-upload-window';\nimport {UploadInputTypes} from '@common/uploads/upload-input-config';\nimport {AudioUploadValidator} from '../../web-player/audio-upload-validator';\nimport {UploadQueueService} from '@common/uploads/upload-queue/upload-queue.service';\nimport {WaveformGenerator} from '../../web-player/tracks/waveform/waveform-generator';\nimport {Router} from '@angular/router';\nimport {UploadFileResponse} from '@common/uploads/uploads-api.service';\nimport {Album} from '../../models/Album';\nimport {Settings} from '@common/core/config/settings.service';\nimport {isAbsoluteUrl} from '@common/core/utils/is-absolute-url';\nimport {FileEntry} from '@common/uploads/types/file-entry';\nimport {randomString} from '@common/core/utils/random-string';\nimport {scrollInvalidInputIntoView} from '@common/core/utils/scroll-invalid-input-into-view';\nimport {UploadApiConfig} from '@common/uploads/types/upload-api-config';\nimport {GENRE_MODEL} from '../../models/Genre';\nimport {Search} from '../../web-player/search/search.service';\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\nimport {AppCurrentUser} from '../../app-current-user';\nimport {Artist} from '../../models/Artist';\nimport {TAG_MODEL} from '@common/core/types/models/Tag';\n\nexport interface ExtractedMetadata {\n    title?: string;\n    album?: Album;\n    album_name?: string;\n    artist?: Artist;\n    artist_name?: string;\n    genres?: string[];\n    duration?: number;\n    release_date?: string;\n    comment?: string;\n    image?: FileEntry;\n    lyrics?: string;\n}\n\nexport interface TrackUploadResponse extends UploadFileResponse {\n    metadata?: ExtractedMetadata;\n}\n\n@Component({\n    selector: 'track-form',\n    templateUrl: './track-form.component.html',\n    styleUrls: ['./track-form.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [matExpansionAnimations.bodyExpansion]\n})\nexport class TrackFormComponent implements OnInit, OnChanges {\n    // track that is being edited\n    @Input() track: Track;\n\n    // creating a new track for this upload\n    @Input() uploadQueueItem: UploadQueueItem;\n\n    // track will be saved along with this album\n    @Input() albumForm: FormGroup;\n\n    // number of this track inside parent album\n    @Input() number: number;\n\n    @Output() canceled = new EventEmitter<UploadQueueItem|Track>();\n    @Output() saved = new EventEmitter<Track>();\n\n    public errors$ = new BehaviorSubject<{[K in keyof Partial<Track>]: string}>({});\n    public defaultImage$ = new BehaviorSubject<string>(DefaultImagePaths.album);\n    public loading$ = new BehaviorSubject<boolean>(false);\n    public readonly uniqueId = randomString(5);\n\n    public form = this.fb.group({\n        id: [null],\n        name: [''],\n        image: [''],\n        description: [''],\n        number: [1],\n        tags: [[]],\n        genres: [[]],\n        duration: [null],\n        url: [''],\n        youtube_id: [''],\n        spotify_id: [''],\n        spotify_popularity: [''],\n        album: [null],\n        artists: [[]],\n        waveData: [null],\n        lyrics: [''],\n    });\n    public expanded = false;\n\n    constructor(\n        private fb: FormBuilder,\n        public currentUser: AppCurrentUser,\n        private tracks: Tracks,\n        private toast: Toast,\n        private modal: Modal,\n        private audioValidator: AudioUploadValidator,\n        private uploadQueue: UploadQueueService,\n        private waveGenerator: WaveformGenerator,\n        private router: Router,\n        public settings: Settings,\n        private cd: ChangeDetectorRef,\n        private search: Search,\n    ) {}\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.number && changes.number.currentValue != null) {\n            this.form.patchValue({number: changes.number.currentValue});\n        }\n    }\n\n    ngOnInit() {\n        this.expanded = !this.albumForm;\n\n        if (this.track) {\n            const formValue = {...this.track};\n            formValue.tags = (this.track.tags || []).map(t => t.name) as any;\n            formValue.genres = (this.track.genres || []).map(t => t.display_name || t.name) as any;\n            this.form.patchValue(formValue);\n\n            if (this.track.album) {\n                this.defaultImage$.next(this.track.album.image || DefaultImagePaths.album);\n            }\n        } else if ( ! this.currentUser.canAttachMusicToAnyArtist()) {\n            this.form.get('artists').setValue([\n                this.currentUser.get('artists')[0] || this.currentUser.artistPlaceholder(),\n            ]);\n        }\n\n        if (this.uploadQueueItem) {\n            this.uploadQueueItem.uploadedResponse$.subscribe((response: TrackUploadResponse) => {\n                this.patchFormUsingFileUpload(response);\n            });\n        }\n\n        if (this.albumForm) {\n            this.albumForm.get('image').valueChanges.subscribe(url => {\n                this.defaultImage$.next(url || DefaultImagePaths.album);\n            });\n        }\n    }\n\n    public getPayload(): Partial<Track> {\n        const customData = this.uploadQueueItem ? this.uploadQueueItem.customData : {};\n        const payload =  {...this.form.value, ...customData};\n        payload.artists = payload.artists.map(a => typeof a !== 'number' ? a.id : a);\n        return payload;\n    }\n\n    public isUploading() {\n        return this.uploadQueueItem && !this.uploadQueueItem.completed;\n    }\n\n    public submit() {\n        if (this.albumForm) return;\n        this.loading$.next(true);\n\n        const payload = this.getPayload();\n\n        const request = this.track ?\n            this.tracks.update(this.track.id, payload) :\n            this.tracks.create(payload);\n\n        request\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                if (this.uploadQueueItem) {\n                    this.uploadQueue.remove(this.uploadQueueItem.id);\n                }\n                this.toast.open('Track saved.');\n                this.form.markAsPristine();\n                this.saved.emit(response.track);\n            }, (errResponse: BackendErrorResponse) => {\n                this.errors$.next(errResponse.errors);\n                scrollInvalidInputIntoView(this.errors$.value, `track-form-${this.uniqueId}`);\n            });\n    }\n\n    public toggleExpandedState() {\n        this.expanded = !this.expanded;\n    }\n\n    public getExpandedState(): MatExpansionPanelState {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n\n    public maybeCancel() {\n        this.modal.show(ConfirmModalComponent, {\n            title: 'Remove Track',\n            body:  'Are you sure you want to cancel the upload and remove this track?',\n            ok:    'Remove'\n        }).beforeClosed().subscribe(confirmed => {\n            if ( ! confirmed) return;\n            if (this.uploadQueueItem) {\n                this.uploadQueue.remove(this.uploadQueueItem.id);\n                this.canceled.emit(this.uploadQueueItem);\n                this.toast.open('Upload canceled.');\n            } else if (this.track) {\n                this.tracks.delete([this.track.id]).subscribe(() => {\n                    this.canceled.emit(this.track);\n                    this.toast.open('Track deleted.');\n                });\n            }\n        });\n    }\n\n    public openUploadMusicModal() {\n        const params = {\n            uri: 'uploads',\n            validator: this.audioValidator,\n            httpParams: {diskPrefix: 'track_media', disk: 'public'},\n            willProcessFiles: true,\n        } as UploadApiConfig;\n        openUploadWindow({types: [UploadInputTypes.audio, UploadInputTypes.video]}).then(uploadedFiles => {\n            if ( ! uploadedFiles) return;\n            // if this track form is already attached to existing upload queue item\n            // replace that item in queue service instead of creating a new item\n            const replacements = this.uploadQueueItem ? {[this.uploadQueueItem.id]: uploadedFiles[0]} : uploadedFiles;\n            this.uploadQueue.start(replacements, params).subscribe(response => {\n                const queueItem = this.uploadQueue.find(response.queueItemId);\n                this.waveGenerator.generate(queueItem.uploadedFile.native).then(waveData => {\n                    this.form.patchValue({waveData});\n                    queueItem.finishProcessing();\n                });\n                this.patchFormUsingFileUpload(response);\n                this.toast.open('Track uploaded.');\n            }, () => this.toast.open('Could not upload track'));\n            // make sure progress bar is shown if we're editing track from admin\n            if ( ! this.uploadQueueItem) {\n                this.uploadQueueItem = this.uploadQueue.uploads$.value[0];\n                this.cd.markForCheck();\n            }\n        });\n    }\n\n    private patchFormUsingFileUpload(response: TrackUploadResponse) {\n        const values: {[K in keyof Partial<Track>]: any} & {lyrics?: string} = {\n            name: response.metadata.title,\n            duration: response.metadata.duration,\n            url: response.fileEntry.url,\n            genres: response.metadata.genres || [],\n            description: response.metadata.comment,\n            lyrics: response.metadata.lyrics,\n        };\n        if (response.metadata.album) {\n            values.album = response.metadata.album;\n        }\n        if (response.metadata.artist) {\n            values.artists = [response.metadata.artist];\n\n            // set artist on album, if does not already have one\n            if (this.albumForm && ! this.albumForm.value.artist) {\n                this.albumForm.patchValue({artist: response.metadata.artist});\n            }\n        }\n        if (response.metadata.image) {\n            values.image = response.metadata.image.url;\n\n            // set image on album, if does not already have one\n            if (this.albumForm && ! this.albumForm.value.image) {\n                this.albumForm.patchValue({image: response.metadata.image.url});\n            }\n        }\n        if (response.metadata.release_date && this.albumForm && !this.albumForm.value.release_date) {\n            this.albumForm.patchValue({release_date: response.metadata.release_date});\n        }\n        this.form.patchValue(values);\n    }\n\n    public insideAdmin(): boolean {\n        return this.router.url.indexOf('admin') > -1;\n    }\n\n    public shouldShowDurationField() {\n        const trackUrl = this.form.get('url').value;\n        return !trackUrl || isAbsoluteUrl(trackUrl);\n    }\n\n    public suggestTagFn = (query: string) => {\n        return this.search.media(query, {types: [TAG_MODEL], limit: 5})\n            .pipe(map(response => response.results.tags.map(tag => tag.name)));\n    }\n\n    public suggestGenreFn = (query: string) => {\n        return this.search.media(query, {types: [GENRE_MODEL], limit: 5})\n            .pipe(map(response => response.results.genres.map(genre => genre.name)));\n    }\n}\n","export const TAG_MODEL = 'tag';\n\nexport interface Tag {\n    id: number;\n    name: string;\n    display_name: string;\n    type: string;\n    updated_at: string;\n    created_at: string;\n}\n","<form (ngSubmit)=\"submit()\" [formGroup]=\"form\">\n    <div class=\"main-info-fields\">\n        <div class=\"left-column\">\n            <upload-image-control formControlName=\"image\" diskPrefix=\"album\"></upload-image-control>\n            <button mat-flat-button color=\"accent\" type=\"button\" class=\"upload-tracks-button\" [uploadButton]=\"uploadButtonConfig\" (filesSelected)=\"uploadFiles($event)\" trans>Upload Tracks</button>\n        </div>\n        <div class=\"text-fields-container many-inputs\">\n            <div class=\"input-container\">\n                <label for=\"album-form-name\" trans>Name</label>\n                <input type=\"text\" id=\"album-form-name\" formControlName=\"name\" [readOnly]=\"album && !currentUser.hasPermissions(['music.update'])\" required>\n                <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\n            </div>\n\n            <div class=\"input-container\">\n                <label for=\"album-form-release_date\" trans>Release Date</label>\n                <input type=\"date\" placeholder=\"YYYY-MM-DD\" id=\"album-form-release_date\" formControlName=\"release_date\" required>\n                <div class=\"error\" *ngIf=\"errors.release_date\">{{errors.release_date}}</div>\n            </div>\n\n            <track-artist-control [error]=\"errors.artists\" id=\"album-form-artists\" formControlName=\"artists\"></track-artist-control>\n\n            <div class=\"input-container\">\n                <label for=\"album-form-description\" trans>Description</label>\n                <textarea type=\"text\" id=\"album-form-description\" formControlName=\"description\" minlength=\"10\" maxlength=\"250\" rows=\"5\"></textarea>\n                <div class=\"error\" *ngIf=\"errors.description\">{{errors.description}}</div>\n            </div>\n\n            <div class=\"input-container\">\n                <label for=\"album-form-genres\" trans>Genres</label>\n                <chip-input placeholder=\"+Add genre\" id=\"album-form-genres\" [suggestFn]=\"suggestGenreFn\" formControlName=\"genres\"></chip-input>\n                <div class=\"error\" *ngIf=\"errors.genres\">{{errors.genres}}</div>\n            </div>\n\n            <div class=\"input-container\">\n                <label for=\"album-form-tags\" trans>Tags</label>\n                <chip-input placeholder=\"+Add tag\" id=\"album-form-tags\" formControlName=\"tags\" [suggestFn]=\"suggestTagFn\"></chip-input>\n                <div class=\"error\" *ngIf=\"errors.tags\">{{errors.tags}}</div>\n            </div>\n\n            <div class=\"input-container\" *ngIf=\"insideAdmin && settings.get('spotify_is_setup')\">\n                <label for=\"album-spotify-id\" trans>Spotify ID</label>\n                <input type=\"text\" id=\"album-spotify-id\" formControlName=\"spotify_id\" minlength=\"22\" maxlength=\"22\">\n            </div>\n\n            <button type=\"submit\" [disabled]=\"loading$ | async\" mat-raised-button color=\"accent\" trans>Save</button>\n            <button type=\"button\" mat-button (click)=\"maybeCancel()\" trans>Cancel</button>\n        </div>\n    </div>\n</form>\n\n<ul class=\"track-list unstyled-list\" cdkDropList (cdkDropListDropped)=\"reorderTracks($event)\">\n    <li class=\"track-list-item\" *ngFor=\"let track of allTracks$ | async; trackBy: trackByFn; index as index\" cdkDrag>\n        <track-form [albumForm]=\"form\" [track]=\"track\" *ngIf=\"track.model_type\" [number]=\"index + 1\" (canceled)=\"trackRemoved(track)\">\n            <button mat-icon-button cdkDragHandle type=\"button\">\n                <mat-icon svgIcon=\"drag-handle\"></mat-icon>\n            </button>\n        </track-form>\n        <track-form [albumForm]=\"form\" [uploadQueueItem]=\"track\" *ngIf=\"!track.model_type\" [number]=\"index + 1\" (canceled)=\"trackRemoved(track)\">\n            <button mat-icon-button cdkDragHandle type=\"button\">\n                <mat-icon svgIcon=\"drag-handle\"></mat-icon>\n            </button>\n        </track-form>\n    </li>\n</ul>\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    QueryList,\n    ViewChildren,\n} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {UploadQueueService} from '@common/uploads/upload-queue/upload-queue.service';\nimport {UploadQueueItem} from '@common/uploads/upload-queue/upload-queue-item';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\nimport {Albums} from '../../web-player/albums/albums.service';\nimport {\n    TrackFormComponent,\n    TrackUploadResponse,\n} from '../track-form/track-form.component';\nimport {Album} from '../../models/Album';\nimport {BehaviorSubject} from 'rxjs';\nimport {finalize, map} from 'rxjs/operators';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {ConfirmModalComponent} from '@common/core/ui/confirm-modal/confirm-modal.component';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {AudioUploadValidator} from '../../web-player/audio-upload-validator';\nimport {Track} from '../../models/Track';\nimport {UploadedFile} from '@common/uploads/uploaded-file';\nimport {\n    UploadInputConfig,\n    UploadInputTypes,\n} from '@common/uploads/upload-input-config';\nimport {Settings} from '@common/core/config/settings.service';\nimport {scrollInvalidInputIntoView} from '@common/core/utils/scroll-invalid-input-into-view';\nimport {UploadApiConfig} from '@common/uploads/types/upload-api-config';\nimport {Search} from '../../web-player/search/search.service';\nimport {GENRE_MODEL} from '../../models/Genre';\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\nimport {AppCurrentUser} from '../../app-current-user';\nimport {TAG_MODEL} from '@common/core/types/models/Tag';\nimport {Artist} from '../../models/Artist';\nimport {Router} from '@angular/router';\nimport {WaveformGenerator} from '../../web-player/tracks/waveform/waveform-generator';\n\n@Component({\n    selector: 'album-form',\n    templateUrl: './album-form.component.html',\n    styleUrls: ['./album-form.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AlbumFormComponent implements OnInit {\n    public uploadButtonConfig: UploadInputConfig = {\n        multiple: true,\n        types: [UploadInputTypes.audio, UploadInputTypes.video],\n    };\n    public insideAdmin: boolean;\n    // album that is being edited\n    @Input() album: Album;\n    @Input() artist: Artist;\n    @Input() confirmCancel = true;\n    @Output() canceled = new EventEmitter();\n    @Output() saved = new EventEmitter<Album>();\n    @ViewChildren(TrackFormComponent) trackForms: QueryList<TrackFormComponent>;\n\n    public errors: {[K in keyof Partial<Album>]: string} = {};\n    public loading$ = new BehaviorSubject(false);\n    public allTracks$ = new BehaviorSubject<(UploadQueueItem | Track)[]>([]);\n\n    public form = this.fb.group({\n        name: [''],\n        image: [''],\n        artists: [[]],\n        release_date: [new Date().toISOString().slice(0, 10)],\n        description: [''],\n        spotify_id: [''],\n        tags: [[]],\n        genres: [[]],\n    });\n\n    constructor(\n        private fb: FormBuilder,\n        public uploadQueue: UploadQueueService,\n        private albums: Albums,\n        private cd: ChangeDetectorRef,\n        public currentUser: AppCurrentUser,\n        private modal: Modal,\n        private toast: Toast,\n        private audioValidator: AudioUploadValidator,\n        public settings: Settings,\n        private search: Search,\n        private router: Router,\n        private waveform: WaveformGenerator\n    ) {}\n\n    ngOnInit() {\n        this.insideAdmin = this.router.url.includes('admin');\n        this.allTracks$ = new BehaviorSubject([\n            ...(this.album ? this.album.tracks : []),\n            ...this.onlyValidUploads(this.uploadQueue.uploads$.value),\n        ]);\n        this.uploadQueue.uploadsAdded$.subscribe(uploads => {\n            this.allTracks$.next([\n                ...this.allTracks$.value,\n                ...this.onlyValidUploads(uploads),\n            ]);\n        });\n\n        // if we are editing an album, hydrate the form\n        if (this.album) {\n            const value = {\n                ...this.album,\n                tags: this.album.tags.map(t => t.name),\n                genres: this.album.genres.map(g => g.display_name || g.name),\n            };\n            this.form.patchValue(value);\n        } else if (this.artist) {\n            this.form.get('artists').setValue([this.artist]);\n            // set album artist as primary artist of current user\n        } else if (!this.currentUser.canAttachMusicToAnyArtist()) {\n            this.form\n                .get('artists')\n                .setValue([\n                    this.currentUser.get('artists')[0] ||\n                        this.currentUser.artistPlaceholder(),\n                ]);\n        }\n    }\n\n    private onlyValidUploads(uploads: UploadQueueItem[]) {\n        return uploads.filter(upload => !upload.error$.value);\n    }\n\n    public reorderTracks(e: CdkDragDrop<never>) {\n        const sortedTracks = this.allTracks$.value;\n        moveItemInArray(sortedTracks, e.previousIndex, e.currentIndex);\n        this.allTracks$.next(sortedTracks);\n    }\n\n    public submit() {\n        if (this.trackForms.some(f => f.isUploading())) {\n            this.toast.open(\n                'Some tracks are still uploading or failed to upload.'\n            );\n            return;\n        }\n\n        this.loading$.next(true);\n\n        const payload = {\n            ...this.form.value,\n            tracks: this.trackForms.map(f => f.getPayload()),\n        };\n        payload.artists = payload.artists.map(a =>\n            typeof a !== 'number' ? a.id : a\n        );\n\n        const request = this.album\n            ? this.albums.update(this.album.id, payload)\n            : this.albums.create(payload);\n\n        request.pipe(finalize(() => this.loading$.next(false))).subscribe(\n            response => {\n                this.form.markAsPristine();\n                this.trackForms.forEach(tf => tf.form.markAsPristine());\n                this.toast.open('Album saved.');\n                this.uploadQueue.reset();\n                this.saved.emit(response.album);\n            },\n            (errResponse: BackendErrorResponse) => {\n                this.errors = errResponse.errors;\n                scrollInvalidInputIntoView(this.errors, 'track-form');\n                this.cd.markForCheck();\n            }\n        );\n    }\n\n    public maybeCancel() {\n        if (!this.confirmCancel) {\n            this.canceled.emit();\n            return;\n        }\n        this.modal\n            .show(ConfirmModalComponent, {\n                title: 'Delete Album',\n                body: 'Are you sure you want to cancel all uploads and delete this album?',\n                ok: 'Delete',\n            })\n            .beforeClosed()\n            .subscribe(confirmed => {\n                if (confirmed) {\n                    this.form.reset();\n                    this.uploadQueue.reset();\n                    this.canceled.emit();\n                }\n            });\n    }\n\n    public uploadFiles(uploadedFiles: UploadedFile[]) {\n        const params = {\n            uri: 'uploads',\n            httpParams: {\n                autoMatchAlbum: false,\n                diskPrefix: 'track_media',\n                disk: 'public',\n            },\n            validator: this.audioValidator,\n        } as UploadApiConfig;\n        this.uploadQueue.start(uploadedFiles, params).subscribe(\n            (response: TrackUploadResponse) => {\n                const queueItem = this.uploadQueue.find(response.queueItemId);\n                const trackForm = this.trackForms.find(\n                    tf => tf.uploadQueueItem?.id === response.queueItemId\n                ).form;\n                this.waveform\n                    .generate(queueItem.uploadedFile.native)\n                    .then(waveData => {\n                        trackForm.patchValue({waveData});\n                        queueItem.finishProcessing();\n                    });\n                trackForm.markAsDirty();\n            },\n            () => this.toast.open('Could not upload tracks.')\n        );\n    }\n\n    public trackRemoved(track: UploadQueueItem | Track) {\n        const newTracks = this.allTracks$.value.filter(t => t.id !== track.id);\n        this.allTracks$.next(newTracks);\n    }\n\n    public trackByFn = (i: number, upload: UploadQueueItem | Track) =>\n        upload.id;\n\n    public suggestTagFn = (query: string) => {\n        return this.search\n            .media(query, {types: [TAG_MODEL], limit: 5})\n            .pipe(map(response => response.results.tags.map(tag => tag.name)));\n    };\n\n    public suggestGenreFn = (query: string) => {\n        return this.search\n            .media(query, {types: [GENRE_MODEL], limit: 5})\n            .pipe(\n                map(response =>\n                    response.results.genres.map(genre => genre.name)\n                )\n            );\n    };\n}\n","import {ChangeDetectionStrategy, Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Album} from '../../../models/Album';\nimport {UploadQueueService} from '@common/uploads/upload-queue/upload-queue.service';\nimport {ComponentCanDeactivate} from '@common/guards/pending-changes/component-can-deactivate';\nimport {AlbumFormComponent} from '../../../uploading/album-form/album-form.component';\nimport {Settings} from '@common/core/config/settings.service';\nimport {WebPlayerUrls} from '../../../web-player/web-player-urls.service';\nimport {Artist} from '../../../models/Artist';\n\n@Component({\n    selector: 'crupdate-album-page',\n    templateUrl: './crupdate-album-page.component.html',\n    styleUrls: ['./crupdate-album-page.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [UploadQueueService],\n})\nexport class CrupdateAlbumPageComponent implements OnInit, ComponentCanDeactivate {\n    @ViewChild(AlbumFormComponent, {static: true}) albumForm: AlbumFormComponent;\n    public album: Album;\n    public artist: Artist;\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        public settings: Settings,\n        public urls: WebPlayerUrls,\n    ) {}\n\n    ngOnInit() {\n        this.route.data.subscribe(data => {\n            if (data.api) {\n                this.album = data.api.album;\n            }\n        });\n        this.route.queryParams.subscribe(params => {\n            if (params.artist) {\n                this.artist = JSON.parse(atob(params.artist));\n            }\n        });\n    }\n\n    public toAlbumsPage() {\n        if (this.router.url.includes('admin')) {\n            if (this.artist) {\n                this.router.navigate(this.urls.editArtist(this.artist.id, true));\n            } else {\n                this.router.navigate(['/admin/albums']);\n            }\n        } else {\n            this.router.navigate(['/']);\n        }\n    }\n\n    public canDeactivate() {\n        if (this.albumForm.form.dirty) {\n            return false;\n        } else if (this.albumForm.trackForms.some(tf => tf.form.dirty)) {\n            return false;\n        }\n        return true;\n    }\n}\n","<album-form [album]=\"album\" [artist]=\"artist\" class=\"material-panel\" (canceled)=\"toAlbumsPage()\" [confirmCancel]=\"false\" (saved)=\"toAlbumsPage()\"></album-form>\n","import { CanDeactivate } from '@angular/router';\nimport {ComponentCanDeactivate} from '@common/guards/pending-changes/component-can-deactivate';\nimport {Observable} from 'rxjs';\nimport {Injectable} from '@angular/core';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {ConfirmModalComponent} from '@common/core/ui/confirm-modal/confirm-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PendingChangesGuard implements CanDeactivate<ComponentCanDeactivate> {\n    constructor(private modal: Modal) {}\n\n    canDeactivate(component: ComponentCanDeactivate): boolean | Observable<boolean> {\n        if (component.canDeactivate()) {\n            return true;\n        } else {\n            return this.modal.show(ConfirmModalComponent, {\n                title: 'Unsaved Changes',\n                body:  'You have unsaved changes. Do you want to discard them?',\n                ok:    'Discard'\n            }).beforeClosed();\n        }\n    }\n}\n","import {ChangeDetectionStrategy, Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Track} from '../../../models/Track';\nimport {ComponentCanDeactivate} from '@common/guards/pending-changes/component-can-deactivate';\nimport {AlbumFormComponent} from '../../../uploading/album-form/album-form.component';\nimport {TrackFormComponent} from '../../../uploading/track-form/track-form.component';\nimport {Settings} from '@common/core/config/settings.service';\n\n@Component({\n    selector: 'crupdate-track-page',\n    templateUrl: './crupdate-track-page.component.html',\n    styleUrls: ['./crupdate-track-page.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CrupdateTrackPageComponent implements OnInit, ComponentCanDeactivate {\n    @ViewChild(TrackFormComponent, {static: true}) trackForm: AlbumFormComponent;\n    public track: Track;\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        public settings: Settings,\n    ) {}\n\n    ngOnInit() {\n        this.route.data.subscribe(data => {\n            if (data.api) {\n                this.track = data.api.track;\n            }\n        });\n    }\n\n    public toTracksPage() {\n        if (this.insideAdmin()) {\n            this.router.navigate(['/admin/tracks']);\n        } else {\n            this.router.navigate(['/']);\n        }\n    }\n\n    public canDeactivate() {\n        return !this.trackForm.form.dirty;\n    }\n\n    public insideAdmin(): boolean {\n        return this.router.url.includes('admin');\n    }\n}\n","<track-form [track]=\"track\" class=\"material-panel\" (canceled)=\"toTracksPage()\" (saved)=\"toTracksPage()\"></track-form>\n","import { UploadedFile } from '../uploaded-file';\n\nexport async function readUploadedFolders(entries: WebKitEntry[]): Promise<UploadedFile[]> {\n    let files = [];\n\n    for (const key in entries) {\n        const entry = entries[key];\n\n        if ( ! entry.isDirectory) {\n            files.push(await transformFileEntry(entry as WebKitFileEntry));\n        } else {\n            files = files.concat(await readDirRecursive(entry as WebKitDirectoryEntry));\n        }\n    }\n\n    return files;\n}\n\nasync function readDirRecursive(entry: WebKitDirectoryEntry, files = []) {\n    const entries = await readEntries(entry);\n\n    for (const key in entries) {\n        const childEntry = entries[key];\n\n        if (childEntry.isDirectory) {\n            await readDirRecursive(childEntry as WebKitDirectoryEntry, files);\n        } else {\n            files.push(await transformFileEntry(childEntry as WebKitFileEntry));\n        }\n    }\n\n    return files;\n}\n\nfunction readEntries(dir: WebKitDirectoryEntry): Promise<WebKitEntry[]> {\n    return new Promise(resolve => {\n       readEntriesRecursive(dir.createReader(), resolve);\n    });\n}\n\nfunction readEntriesRecursive(reader: WebKitDirectoryReader, resolve, allEntries: WebKitEntry[] = []) {\n    reader.readEntries(entries => {\n        if (entries.length) {\n            allEntries = allEntries.concat(entries);\n            readEntriesRecursive(reader, resolve, allEntries);\n        } else {\n            resolve(allEntries);\n        }\n    });\n}\n\nfunction transformFileEntry(entry: WebKitFileEntry) {\n    return new Promise(resolve => {\n        entry.file((file: any) => {\n            resolve(new UploadedFile(file as File, entry.fullPath));\n        });\n    });\n}\n","import { Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { openUploadWindow } from '../utils/open-upload-window';\nimport { UploadedFile } from '../uploaded-file';\nimport { readUploadedFolders } from '../utils/read-uploaded-folders';\nimport { UploadInputConfig } from '@common/uploads/upload-input-config';\n\n@Directive({\n    selector: '[fileDropzone]',\n})\nexport class UploadDropzoneDirective implements OnInit, OnDestroy {\n    @Input() disableDropzoneClick = false;\n    @Input() disableDropzone = false;\n    @Input() clickButton: ElementRef;\n    @Input('fileDropzone') uploadConfig: UploadInputConfig = {};\n    @Output() filesDropped: EventEmitter<UploadedFile[]> = new EventEmitter();\n\n    constructor(protected el: ElementRef) {}\n\n    ngOnInit() {\n        const el = this.el.nativeElement;\n        el.addEventListener('dragenter', (e) => this.handleDragEnter(e));\n        el.addEventListener('dragover', (e) => this.handleDragOver(e));\n        el.addEventListener('dragleave', (e) => this.handleDragLeave(e));\n        el.addEventListener('drop', (e) => this.handleDrop(e));\n\n        if ( ! this.disableDropzoneClick) {\n            const trigger = this.clickButton ? this.clickButton.nativeElement : el;\n            trigger.addEventListener('click', () => this.handleClick());\n        }\n    }\n\n    ngOnDestroy() {\n        this.removeClassesFromDropzone();\n    }\n\n    protected handleClick() {\n        if (this.disableDropzone) return;\n        openUploadWindow(this.uploadConfig).then(files => {\n            this.emitUploadEvent(files);\n        });\n    }\n\n    public handleDragEnter(e) {\n        if (this.dropzoneDisabled(e)) return;\n        this.el.nativeElement.classList.add('file-over-dropzone');\n    }\n\n    public handleDragOver(e) {\n        if (e.preventDefault) e.preventDefault();\n        e.dataTransfer.dropEffect = this.dropzoneDisabled(e) ? 'none' : 'move';\n        return false;\n    }\n\n    public handleDragLeave(e: MouseEvent) {\n        const newEl = document.elementFromPoint(e.clientX, e.clientY);\n        if (this.el.nativeElement.contains(newEl)) return;\n        this.removeClassesFromDropzone();\n    }\n\n    public async handleDrop(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        this.removeClassesFromDropzone();\n        if (this.dropzoneDisabled(e) || !e.dataTransfer.items) return;\n\n        const items = Array.from(e.dataTransfer.items)\n            .filter((item: DataTransferItem) => item.kind === 'file')\n            .map((item: DataTransferItem) => {\n                return item.webkitGetAsEntry();\n            });\n\n        if (items.length) {\n            this.emitUploadEvent(await readUploadedFolders(items));\n        }\n    }\n\n    protected emitUploadEvent(files: UploadedFile[]) {\n        this.filesDropped.emit(files);\n    }\n\n    protected removeClassesFromDropzone() {\n        this.el.nativeElement.classList.remove('file-over-dropzone');\n    }\n\n    protected dropzoneDisabled(e: DragEvent) {\n        const hasFiles = e.dataTransfer.types.find(type => type.toLowerCase() === 'files');\n        return this.disableDropzone || ! hasFiles;\n    }\n}\n","<div class=\"media-image-container\" [class.show-album-border]=\"!isTrack(media)\">\n    <media-image [media]=\"media\"></media-image>\n    <img class=\"album-border-image\" [src]=\"settings.getAssetUrl('images/album-border.png')\" alt=\"album border image\">\n</div>\n<div class=\"middle-column\">\n    <div class=\"artist-name\">{{media.artists[0].name}}</div>\n    <div class=\"track-name\">{{media.name}}</div>\n    <div class=\"genre-row\">\n        <mat-chip class=\"track-genre\" *ngIf=\"media.genres.length\">{{media.genres[0].name}}</mat-chip>\n    </div>\n    <div class=\"message\">\n        <span trans>Upload complete.</span> <a [routerLink]=\"mediaLink()\" trans> View now.</a>\n    </div>\n</div>\n<div class=\"right-column\">\n    <div class=\"title\" trans>Share your new {{isTrack(media) ? 'track' : 'album' }}</div>\n    <div class=\"share-icons\">\n        <button mat-icon-button (click)=\"shareUsing('facebook')\">\n            <img src=\"{{settings.getAssetUrl('images/social-icons/facebook.png')}}\" alt=\"facebook-icon\">\n        </button>\n        <button mat-icon-button (click)=\"shareUsing('twitter')\">\n            <img src=\"{{settings.getAssetUrl('images/social-icons/twitter.png')}}\" alt=\"twitter-icon\">\n        </button>\n        <button mat-icon-button (click)=\"shareUsing('tumblr')\">\n            <img src=\"{{settings.getAssetUrl('images/social-icons/tumblr.png')}}\" alt=\"tumblr-icon\">\n        </button>\n        <button mat-icon-button (click)=\"shareUsing('blogger')\">\n            <img src=\"{{settings.getAssetUrl('images/social-icons/bloggr.png')}}\" alt=\"blogger-icon\">\n        </button>\n    </div>\n    <div class=\"track-link-input input-container\">\n        <label for=\"media-item-link\" class=\"hidden\" trans>Media link</label>\n        <input #trackLinkInput id=\"media-item-link\" type=\"text\" readonly [value]=\"mediaUrl()\" (click)=\"$event.target.select()\">\n    </div>\n</div>\n","import {Component, OnInit, ChangeDetectionStrategy, Input, ViewChild, ElementRef} from '@angular/core';\nimport {Track, TRACK_MODEL} from '../../models/Track';\nimport {ShareableNetworks, shareLinkSocially} from '@common/core/utils/share-link-socially';\nimport {Settings} from '@common/core/config/settings.service';\nimport {WebPlayerUrls} from '../../web-player/web-player-urls.service';\nimport {Album} from '../../models/Album';\n\n@Component({\n    selector: 'uploaded-media-preview',\n    templateUrl: './uploaded-media-preview.component.html',\n    styleUrls: ['./uploaded-media-preview.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'class': 'material-panel'},\n})\nexport class UploadedMediaPreviewComponent implements OnInit {\n    @ViewChild('trackLinkInput', {static: true}) trackLinkInput: ElementRef<HTMLInputElement>;\n    @Input() media: Track|Album;\n\n    constructor(\n        public settings: Settings,\n        public urls: WebPlayerUrls\n    ) {}\n\n    ngOnInit() {\n        setTimeout(() => {\n            this.trackLinkInput.nativeElement.focus();\n            this.trackLinkInput.nativeElement.select();\n        });\n    }\n\n    public mediaLink() {\n        if (this.isTrack(this.media)) {\n            return this.urls.track(this.media);\n        } else {\n            return this.urls.album(this.media);\n        }\n    }\n\n    public mediaUrl() {\n        return this.urls.routerLinkToUrl(this.mediaLink());\n    }\n\n    public shareUsing(network: ShareableNetworks) {\n        shareLinkSocially(network, this.mediaUrl());\n    }\n\n    public isTrack(media: Track|Album): media is Track {\n        return media.model_type === TRACK_MODEL;\n    }\n}\n","<div\n    class=\"dropzone\"\n    [fileDropzone]=\"uploadConfig\"\n    [clickButton]=\"clickButton\"\n    (filesDropped)=\"uploadTracks($event)\"\n>\n    <div class=\"title\" trans>Drag and drop your tracks, videos & albums here.</div>\n    <div class=\"action-button\">\n        <button\n            mat-flat-button\n            color=\"accent\"\n            type=\"button\"\n            class=\"upload-button\"\n            #clickMatButton\n            trans\n        >\n            or choose files to upload\n        </button>\n    </div>\n    <div class=\"setting-toggle-container\" *ngIf=\"uploadQueue.isEmpty()\">\n        <mat-slide-toggle (change)=\"createAlbum$.next($event.checked)\" trans\n            >Make an album when multiple files are selected</mat-slide-toggle\n        >\n    </div>\n</div>\n\n<div\n    class=\"minutes-container\"\n    *ngIf=\"currentUser.getRestrictionValue('tracks.create', 'minutes') as minuteLimit\"\n>\n    <span\n        >You have {{ minuteLimit }} minutes left. Try\n        <a class=\"hover-underline\" routerLink=\"/billing/upgrade\" target=\"_blank\">Pro accounts</a> to\n        get more time and access to advanced features.</span\n    >\n</div>\n\n<div class=\"track-upload-queue\" *ngIf=\"uploadQueue.uploads$ | async as uploads\">\n    <ng-container *ngIf=\"uploads.length\">\n        <album-form\n            class=\"material-panel\"\n            *ngIf=\"createAlbum$ | async; else createTracks\"\n            (saved)=\"addSavedMedia($event)\"\n        ></album-form>\n        <ng-template #createTracks>\n            <ng-container *ngIf=\"errors$ | async as errors\">\n                <div\n                    class=\"track-panel material-panel\"\n                    *ngFor=\"let upload of uploads; trackBy: trackByFn\"\n                >\n                    <track-form\n                        [uploadQueueItem]=\"upload\"\n                        (saved)=\"addSavedMedia($event)\"\n                    ></track-form>\n                </div>\n            </ng-container>\n        </ng-template>\n    </ng-container>\n</div>\n\n<div class=\"saved-tracks\">\n    <uploaded-media-preview\n        [media]=\"media\"\n        *ngFor=\"let media of savedMedia$ | async\"\n    ></uploaded-media-preview>\n</div>\n","import {RouterModule, Routes} from '@angular/router';\nimport {NgModule} from '@angular/core';\nimport {BackstageRequestFormComponent} from './requests/backstage-request-form/backstage-request-form.component';\nimport {BackstageRequestSubmittedComponent} from './requests/backstage-request-submitted/backstage-request-submitted.component';\nimport {BackstageTypeSelectorComponent} from './requests/backstage-type-selector/backstage-type-selector.component';\nimport {CrupdateArtistPageComponent} from './editing/crupdate-artist-page/crupdate-artist-page.component';\nimport {EditArtistPageResolver} from './editing/crupdate-artist-page/crupdate-artist-page-resolver.service';\nimport {CrupdateAlbumPageComponent} from './editing/crupdate-album-page/crupdate-album-page.component';\nimport {PendingChangesGuard} from '@common/guards/pending-changes/pending-changes-guard.service';\nimport {CrupdateTrackPageComponent} from './editing/crupdate-track-page/crupdate-track-page.component';\nimport {TrackPageResolver} from '../web-player/tracks/track-page/track-page-resolver.service';\nimport {UploadPageComponent} from '../uploading/upload-page/upload-page.component';\nimport {CrupdateAlbumPageResolverService} from './editing/crupdate-album-page/crupdate-album-page-resolver.service';\n\nconst routes: Routes = [\n    {\n        path: '',\n        redirectTo: '/',\n        pathMatch: 'full',\n    },\n    {\n        path: 'requests',\n        component: BackstageTypeSelectorComponent,\n    },\n    {\n        path: 'requests/verify-artist',\n        component: BackstageRequestFormComponent,\n    },\n    {\n        path: 'requests/become-artist',\n        component: BackstageRequestFormComponent,\n    },\n    {\n        path: 'requests/claim-artist',\n        component: BackstageRequestFormComponent,\n    },\n    {\n        path: 'requests/:requestId/request-submitted',\n        component: BackstageRequestSubmittedComponent,\n    },\n\n    //\n    {\n        path: 'upload',\n        component: UploadPageComponent,\n    },\n    {\n        path: 'artists/new',\n        component: CrupdateArtistPageComponent,\n    },\n    {\n        path: 'artists/:id/edit',\n        component: CrupdateArtistPageComponent,\n        resolve: {api: EditArtistPageResolver},\n        canDeactivate: [PendingChangesGuard],\n    },\n    {\n        path: 'albums/:id/edit',\n        component: CrupdateAlbumPageComponent,\n        resolve: {api: CrupdateAlbumPageResolverService},\n        canDeactivate: [PendingChangesGuard],\n    },\n    {\n        path: 'albums/new',\n        component: CrupdateAlbumPageComponent,\n        canDeactivate: [PendingChangesGuard],\n    },\n    {\n        path: 'tracks/:id/edit',\n        component: CrupdateTrackPageComponent,\n        resolve: {api: TrackPageResolver},\n        canDeactivate: [PendingChangesGuard],\n    },\n    {\n        path: 'tracks/new',\n        component: CrupdateTrackPageComponent,\n        canDeactivate: [PendingChangesGuard],\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class BackstageRoutingModule {\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    QueryList,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport {Tracks} from '../../web-player/tracks/tracks.service';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {UploadedFile} from '@common/uploads/uploaded-file';\nimport {UploadQueueService} from '@common/uploads/upload-queue/upload-queue.service';\nimport {Settings} from '@common/core/config/settings.service';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {AudioUploadValidator} from '../../web-player/audio-upload-validator';\nimport {BehaviorSubject} from 'rxjs';\nimport {UploadQueueItem} from '@common/uploads/upload-queue/upload-queue-item';\nimport {\n    UploadInputConfig,\n    UploadInputTypes,\n} from '@common/uploads/upload-input-config';\nimport {Track} from '../../models/Track';\nimport {\n    TrackFormComponent,\n    TrackUploadResponse,\n} from '../track-form/track-form.component';\nimport {Album} from '../../models/Album';\nimport {WaveformGenerator} from '../../web-player/tracks/waveform/waveform-generator';\nimport {UploadApiConfig} from '@common/uploads/types/upload-api-config';\nimport {AlbumFormComponent} from '../album-form/album-form.component';\n\n@Component({\n    selector: 'upload-page',\n    templateUrl: './upload-page.component.html',\n    styleUrls: ['./upload-page.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [UploadQueueService],\n})\nexport class UploadPageComponent {\n    @ViewChild('clickMatButton', {read: ElementRef, static: true})\n    clickButton: ElementRef<HTMLButtonElement>;\n    @ViewChildren(TrackFormComponent) trackForms: QueryList<TrackFormComponent>;\n    @ViewChild(AlbumFormComponent) albumForm: AlbumFormComponent;\n    errors$ = new BehaviorSubject<{\n        [key: string]: {[K in keyof Partial<Track>]: string};\n    }>({});\n    uploadConfig: UploadInputConfig = {\n        types: [UploadInputTypes.video, UploadInputTypes.audio],\n        multiple: true,\n    };\n    savedMedia$ = new BehaviorSubject<(Track | Album)[]>([]);\n    createAlbum$ = new BehaviorSubject<boolean>(false);\n\n    constructor(\n        private track: Tracks,\n        public currentUser: CurrentUser,\n        public uploadQueue: UploadQueueService,\n        public settings: Settings,\n        protected tracks: Tracks,\n        private toast: Toast,\n        private audioValidator: AudioUploadValidator,\n        private waveGenerator: WaveformGenerator\n    ) {}\n\n    uploadTracks(files: UploadedFile[]) {\n        const params = {\n            uri: 'uploads',\n            httpParams: {\n                diskPrefix: 'track_media',\n                disk: 'public',\n            },\n            validator: this.audioValidator,\n            willProcessFiles: true,\n            autoMatchAlbum: !this.createAlbum$.value,\n        } as UploadApiConfig;\n        this.uploadQueue\n            .start(files, params)\n            .subscribe((response: TrackUploadResponse) => {\n                const queueItem = this.uploadQueue.find(response.queueItemId);\n                this.waveGenerator\n                    .generate(queueItem.uploadedFile.native)\n                    .then(waveData => {\n                        queueItem.customData = {waveData};\n                        queueItem.finishProcessing();\n                    });\n\n                if (\n                    this.albumForm &&\n                    !this.albumForm.form.get('name').value &&\n                    response.metadata.album_name\n                ) {\n                    this.albumForm.form.patchValue({\n                        name: response.metadata.album_name,\n                    });\n                }\n            });\n    }\n\n    addSavedMedia(newMedia: Track | Album) {\n        this.savedMedia$.next([...this.savedMedia$.value, newMedia]);\n    }\n\n    trackByFn = (i: number, upload: UploadQueueItem) => upload.id;\n}\n","import {Injectable} from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    Resolve,\n    Router,\n    RouterStateSnapshot\n} from '@angular/router';\nimport {catchError, mergeMap} from 'rxjs/operators';\nimport {EMPTY, of} from 'rxjs';\nimport {BackendResponse} from '@common/core/types/backend-response';\nimport {Albums} from '../../../web-player/albums/albums.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CrupdateAlbumPageResolverService implements Resolve<any> {\n\n    constructor(\n        private albums: Albums,\n        private router: Router\n    ) {}\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): BackendResponse<any> {\n        const params = {\n            with: ['tags', 'genres', 'artists', 'fullTracks'],\n            albumsPerPage: 50,\n            forEditing: true,\n        };\n        const id = +route.paramMap.get('id');\n        return this.albums.get(id, params).pipe(\n            catchError(() => {\n                this.router.navigate(['/']);\n                return EMPTY;\n            }),\n            mergeMap(response => {\n                if (response.album) {\n                    return of(response);\n                } else {\n                    this.router.navigate(['/']);\n                    return EMPTY;\n                }\n            })\n        );\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SelectArtistControlComponent} from './select-artist-control.component';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MediaImageModule} from '../../web-player/shared/media-image/media-image.module';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatIconModule} from '@angular/material/icon';\nimport {LoadingIndicatorModule} from '@common/core/ui/loading-indicator/loading-indicator.module';\nimport {MatButtonModule} from '@angular/material/button';\n\n\n@NgModule({\n    declarations: [\n        SelectArtistControlComponent,\n    ],\n    exports: [\n        SelectArtistControlComponent,\n    ],\n    imports: [\n        CommonModule,\n\n        MatMenuModule,\n        MediaImageModule,\n        TranslationsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatIconModule,\n        LoadingIndicatorModule,\n        MatButtonModule,\n    ]\n})\nexport class SelectArtistControlModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {UploadPageComponent} from './upload-page/upload-page.component';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {UploadsModule} from '@common/uploads/uploads.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {TrackFormComponent} from './track-form/track-form.component';\nimport {UploadImageControlModule} from '@common/shared/form-controls/upload-image-control/upload-image-control.module';\nimport {AlbumFormComponent} from './album-form/album-form.component';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {TrackUploadHeaderComponent} from './track-upload-header/track-upload-header.component';\nimport {TrackArtistControlComponent} from './track-form/track-artist-control/track-artist-control.component';\nimport {AlbumControlComponent} from './track-form/album-control/album-control.component';\nimport {LoadingIndicatorModule} from '@common/core/ui/loading-indicator/loading-indicator.module';\nimport {MediaImageModule} from '../web-player/shared/media-image/media-image.module';\nimport {RouterModule} from '@angular/router';\nimport {UploadedMediaPreviewComponent} from './uploaded-media-preview/uploaded-media-preview.component';\nimport {UploadingHostComponent} from './uploading-host/uploading-host.component';\nimport {ChipsModule} from '@common/core/ui/chips/chips.module';\nimport {SelectArtistControlModule} from '../shared/select-artist-control/select-artist-control.module';\nimport {ArtistsLinksListModule} from '../web-player/artists/artists-links-list/artists-links-list.module';\n\n@NgModule({\n    declarations: [\n        UploadPageComponent,\n        TrackFormComponent,\n        AlbumFormComponent,\n        TrackUploadHeaderComponent,\n        TrackArtistControlComponent,\n        AlbumControlComponent,\n        UploadedMediaPreviewComponent,\n        UploadingHostComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule,\n        MediaImageModule,\n        SelectArtistControlModule,\n\n        MatIconModule,\n        MatProgressBarModule,\n        TranslationsModule,\n        UploadsModule,\n        ReactiveFormsModule,\n        FormsModule,\n        MatButtonModule,\n        ChipsModule,\n        MatChipsModule,\n        MatSlideToggleModule,\n        MatTooltipModule,\n        UploadImageControlModule,\n        DragDropModule,\n        MatAutocompleteModule,\n        MatMenuModule,\n        LoadingIndicatorModule,\n        ArtistsLinksListModule,\n    ],\n    exports: [\n        TrackFormComponent,\n        AlbumFormComponent,\n    ]\n})\nexport class UploadingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BackstageRoutingModule} from './backstage-routing.module';\nimport {MaterialNavbarModule} from '@common/core/ui/material-navbar/material-navbar.module';\nimport {MatButtonModule} from '@angular/material/button';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {UploadImageControlModule} from '@common/shared/form-controls/upload-image-control/upload-image-control.module';\nimport {BackstageRequestFormComponent} from './requests/backstage-request-form/backstage-request-form.component';\nimport {BackstageRequestSubmittedComponent} from './requests/backstage-request-submitted/backstage-request-submitted.component';\nimport {BackstageTypeSelectorComponent} from './requests/backstage-type-selector/backstage-type-selector.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {UploadsModule} from '@common/uploads/uploads.module';\nimport {FormatPipesModule} from '@common/core/ui/format-pipes/format-pipes.module';\nimport {SelectArtistControlModule} from '../shared/select-artist-control/select-artist-control.module';\nimport {CrupdateArtistPageComponent} from './editing/crupdate-artist-page/crupdate-artist-page.component';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {ChipsModule} from '@common/core/ui/chips/chips.module';\nimport {ArtistAlbumsTableComponent} from './editing/crupdate-artist-page/artist-albums-table/artist-albums-table.component';\nimport {DatatableModule} from '@common/datatable/datatable.module';\nimport {MediaImageModule} from '../web-player/shared/media-image/media-image.module';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {ProfileLinksFormControlModule} from '../web-player/shared/profile-links-form-control/profile-links-form-control.module';\nimport {CrupdateTrackPageComponent} from './editing/crupdate-track-page/crupdate-track-page.component';\nimport {CrupdateAlbumPageComponent} from './editing/crupdate-album-page/crupdate-album-page.component';\nimport {UploadingModule} from '../uploading/uploading.module';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {LoadingIndicatorModule} from '@common/core/ui/loading-indicator/loading-indicator.module';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\n\n@NgModule({\n    declarations: [\n        BackstageRequestFormComponent,\n        BackstageRequestSubmittedComponent,\n        BackstageTypeSelectorComponent,\n\n        //\n        CrupdateArtistPageComponent,\n        ArtistAlbumsTableComponent,\n        CrupdateAlbumPageComponent,\n        CrupdateTrackPageComponent,\n    ],\n    imports: [\n        CommonModule,\n        BackstageRoutingModule,\n        UploadingModule,\n        ReactiveFormsModule,\n        FormsModule,\n        SelectArtistControlModule,\n        TranslationsModule,\n        MaterialNavbarModule,\n        MatButtonModule,\n        MatIconModule,\n        MatSlideToggleModule,\n        UploadsModule,\n        UploadImageControlModule,\n        FormatPipesModule,\n        ProfileLinksFormControlModule,\n        LoadingIndicatorModule,\n\n        //\n        MatDialogModule,\n        MatTabsModule,\n        ChipsModule,\n        DatatableModule,\n        MediaImageModule,\n        MatTooltipModule,\n    ]\n})\nexport class BackstageModule {\n}\n"]}